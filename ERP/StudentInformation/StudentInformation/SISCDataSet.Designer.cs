//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace StudentInformation {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SISCDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SISCDataSet : global::System.Data.DataSet {
        
        private EXT00101DataTable tableEXT00101;
        
        private EXT00102DataTable tableEXT00102;
        
        private EXT00103DataTable tableEXT00103;
        
        private RM00101DataTable tableRM00101;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SISCDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SISCDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EXT00101"] != null)) {
                    base.Tables.Add(new EXT00101DataTable(ds.Tables["EXT00101"]));
                }
                if ((ds.Tables["EXT00102"] != null)) {
                    base.Tables.Add(new EXT00102DataTable(ds.Tables["EXT00102"]));
                }
                if ((ds.Tables["EXT00103"] != null)) {
                    base.Tables.Add(new EXT00103DataTable(ds.Tables["EXT00103"]));
                }
                if ((ds.Tables["RM00101"] != null)) {
                    base.Tables.Add(new RM00101DataTable(ds.Tables["RM00101"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXT00101DataTable EXT00101 {
            get {
                return this.tableEXT00101;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXT00102DataTable EXT00102 {
            get {
                return this.tableEXT00102;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXT00103DataTable EXT00103 {
            get {
                return this.tableEXT00103;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RM00101DataTable RM00101 {
            get {
                return this.tableRM00101;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            SISCDataSet cln = ((SISCDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EXT00101"] != null)) {
                    base.Tables.Add(new EXT00101DataTable(ds.Tables["EXT00101"]));
                }
                if ((ds.Tables["EXT00102"] != null)) {
                    base.Tables.Add(new EXT00102DataTable(ds.Tables["EXT00102"]));
                }
                if ((ds.Tables["EXT00103"] != null)) {
                    base.Tables.Add(new EXT00103DataTable(ds.Tables["EXT00103"]));
                }
                if ((ds.Tables["RM00101"] != null)) {
                    base.Tables.Add(new RM00101DataTable(ds.Tables["RM00101"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableEXT00101 = ((EXT00101DataTable)(base.Tables["EXT00101"]));
            if ((initTable == true)) {
                if ((this.tableEXT00101 != null)) {
                    this.tableEXT00101.InitVars();
                }
            }
            this.tableEXT00102 = ((EXT00102DataTable)(base.Tables["EXT00102"]));
            if ((initTable == true)) {
                if ((this.tableEXT00102 != null)) {
                    this.tableEXT00102.InitVars();
                }
            }
            this.tableEXT00103 = ((EXT00103DataTable)(base.Tables["EXT00103"]));
            if ((initTable == true)) {
                if ((this.tableEXT00103 != null)) {
                    this.tableEXT00103.InitVars();
                }
            }
            this.tableRM00101 = ((RM00101DataTable)(base.Tables["RM00101"]));
            if ((initTable == true)) {
                if ((this.tableRM00101 != null)) {
                    this.tableRM00101.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SISCDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SISCDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEXT00101 = new EXT00101DataTable();
            base.Tables.Add(this.tableEXT00101);
            this.tableEXT00102 = new EXT00102DataTable();
            base.Tables.Add(this.tableEXT00102);
            this.tableEXT00103 = new EXT00103DataTable();
            base.Tables.Add(this.tableEXT00103);
            this.tableRM00101 = new RM00101DataTable();
            base.Tables.Add(this.tableRM00101);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEXT00101() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEXT00102() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeEXT00103() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRM00101() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SISCDataSet ds = new SISCDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void EXT00101RowChangeEventHandler(object sender, EXT00101RowChangeEvent e);
        
        public delegate void EXT00102RowChangeEventHandler(object sender, EXT00102RowChangeEvent e);
        
        public delegate void EXT00103RowChangeEventHandler(object sender, EXT00103RowChangeEvent e);
        
        public delegate void RM00101RowChangeEventHandler(object sender, RM00101RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXT00101DataTable : global::System.Data.TypedTableBase<EXT00101Row> {
            
            private global::System.Data.DataColumn columnPT_Window_ID;
            
            private global::System.Data.DataColumn columnPT_UD_Key;
            
            private global::System.Data.DataColumn columnPT_UD_Number;
            
            private global::System.Data.DataColumn columnSTRGA255;
            
            private global::System.Data.DataColumn columnDEX_ROW_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101DataTable() {
                this.TableName = "EXT00101";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXT00101DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EXT00101DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_Window_IDColumn {
                get {
                    return this.columnPT_Window_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_UD_KeyColumn {
                get {
                    return this.columnPT_UD_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_UD_NumberColumn {
                get {
                    return this.columnPT_UD_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STRGA255Column {
                get {
                    return this.columnSTRGA255;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEX_ROW_IDColumn {
                get {
                    return this.columnDEX_ROW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101Row this[int index] {
                get {
                    return ((EXT00101Row)(this.Rows[index]));
                }
            }
            
            public event EXT00101RowChangeEventHandler EXT00101RowChanging;
            
            public event EXT00101RowChangeEventHandler EXT00101RowChanged;
            
            public event EXT00101RowChangeEventHandler EXT00101RowDeleting;
            
            public event EXT00101RowChangeEventHandler EXT00101RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEXT00101Row(EXT00101Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101Row AddEXT00101Row(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, string STRGA255) {
                EXT00101Row rowEXT00101Row = ((EXT00101Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PT_Window_ID,
                        PT_UD_Key,
                        PT_UD_Number,
                        STRGA255,
                        null};
                rowEXT00101Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXT00101Row);
                return rowEXT00101Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101Row FindByPT_Window_IDPT_UD_KeyPT_UD_Number(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number) {
                return ((EXT00101Row)(this.Rows.Find(new object[] {
                            PT_Window_ID,
                            PT_UD_Key,
                            PT_UD_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EXT00101DataTable cln = ((EXT00101DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXT00101DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPT_Window_ID = base.Columns["PT_Window_ID"];
                this.columnPT_UD_Key = base.Columns["PT_UD_Key"];
                this.columnPT_UD_Number = base.Columns["PT_UD_Number"];
                this.columnSTRGA255 = base.Columns["STRGA255"];
                this.columnDEX_ROW_ID = base.Columns["DEX_ROW_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPT_Window_ID = new global::System.Data.DataColumn("PT_Window_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_Window_ID);
                this.columnPT_UD_Key = new global::System.Data.DataColumn("PT_UD_Key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_UD_Key);
                this.columnPT_UD_Number = new global::System.Data.DataColumn("PT_UD_Number", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_UD_Number);
                this.columnSTRGA255 = new global::System.Data.DataColumn("STRGA255", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTRGA255);
                this.columnDEX_ROW_ID = new global::System.Data.DataColumn("DEX_ROW_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEX_ROW_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPT_Window_ID,
                                this.columnPT_UD_Key,
                                this.columnPT_UD_Number}, true));
                this.columnPT_Window_ID.AllowDBNull = false;
                this.columnPT_Window_ID.MaxLength = 15;
                this.columnPT_UD_Key.AllowDBNull = false;
                this.columnPT_UD_Key.MaxLength = 201;
                this.columnPT_UD_Number.AllowDBNull = false;
                this.columnSTRGA255.AllowDBNull = false;
                this.columnSTRGA255.MaxLength = 255;
                this.columnDEX_ROW_ID.AutoIncrement = true;
                this.columnDEX_ROW_ID.AutoIncrementSeed = -1;
                this.columnDEX_ROW_ID.AutoIncrementStep = -1;
                this.columnDEX_ROW_ID.AllowDBNull = false;
                this.columnDEX_ROW_ID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101Row NewEXT00101Row() {
                return ((EXT00101Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXT00101Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EXT00101Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXT00101RowChanged != null)) {
                    this.EXT00101RowChanged(this, new EXT00101RowChangeEvent(((EXT00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXT00101RowChanging != null)) {
                    this.EXT00101RowChanging(this, new EXT00101RowChangeEvent(((EXT00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXT00101RowDeleted != null)) {
                    this.EXT00101RowDeleted(this, new EXT00101RowChangeEvent(((EXT00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXT00101RowDeleting != null)) {
                    this.EXT00101RowDeleting(this, new EXT00101RowChangeEvent(((EXT00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEXT00101Row(EXT00101Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SISCDataSet ds = new SISCDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXT00101DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXT00102DataTable : global::System.Data.TypedTableBase<EXT00102Row> {
            
            private global::System.Data.DataColumn columnPT_Window_ID;
            
            private global::System.Data.DataColumn columnPT_UD_Key;
            
            private global::System.Data.DataColumn columnPT_UD_Number;
            
            private global::System.Data.DataColumn columnDATE1;
            
            private global::System.Data.DataColumn columnDEX_ROW_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102DataTable() {
                this.TableName = "EXT00102";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXT00102DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EXT00102DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_Window_IDColumn {
                get {
                    return this.columnPT_Window_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_UD_KeyColumn {
                get {
                    return this.columnPT_UD_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_UD_NumberColumn {
                get {
                    return this.columnPT_UD_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATE1Column {
                get {
                    return this.columnDATE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEX_ROW_IDColumn {
                get {
                    return this.columnDEX_ROW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102Row this[int index] {
                get {
                    return ((EXT00102Row)(this.Rows[index]));
                }
            }
            
            public event EXT00102RowChangeEventHandler EXT00102RowChanging;
            
            public event EXT00102RowChangeEventHandler EXT00102RowChanged;
            
            public event EXT00102RowChangeEventHandler EXT00102RowDeleting;
            
            public event EXT00102RowChangeEventHandler EXT00102RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEXT00102Row(EXT00102Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102Row AddEXT00102Row(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, System.DateTime DATE1) {
                EXT00102Row rowEXT00102Row = ((EXT00102Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PT_Window_ID,
                        PT_UD_Key,
                        PT_UD_Number,
                        DATE1,
                        null};
                rowEXT00102Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXT00102Row);
                return rowEXT00102Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102Row FindByPT_Window_IDPT_UD_KeyPT_UD_Number(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number) {
                return ((EXT00102Row)(this.Rows.Find(new object[] {
                            PT_Window_ID,
                            PT_UD_Key,
                            PT_UD_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EXT00102DataTable cln = ((EXT00102DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXT00102DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPT_Window_ID = base.Columns["PT_Window_ID"];
                this.columnPT_UD_Key = base.Columns["PT_UD_Key"];
                this.columnPT_UD_Number = base.Columns["PT_UD_Number"];
                this.columnDATE1 = base.Columns["DATE1"];
                this.columnDEX_ROW_ID = base.Columns["DEX_ROW_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPT_Window_ID = new global::System.Data.DataColumn("PT_Window_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_Window_ID);
                this.columnPT_UD_Key = new global::System.Data.DataColumn("PT_UD_Key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_UD_Key);
                this.columnPT_UD_Number = new global::System.Data.DataColumn("PT_UD_Number", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_UD_Number);
                this.columnDATE1 = new global::System.Data.DataColumn("DATE1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE1);
                this.columnDEX_ROW_ID = new global::System.Data.DataColumn("DEX_ROW_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEX_ROW_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPT_Window_ID,
                                this.columnPT_UD_Key,
                                this.columnPT_UD_Number}, true));
                this.columnPT_Window_ID.AllowDBNull = false;
                this.columnPT_Window_ID.MaxLength = 15;
                this.columnPT_UD_Key.AllowDBNull = false;
                this.columnPT_UD_Key.MaxLength = 201;
                this.columnPT_UD_Number.AllowDBNull = false;
                this.columnDATE1.AllowDBNull = false;
                this.columnDEX_ROW_ID.AutoIncrement = true;
                this.columnDEX_ROW_ID.AutoIncrementSeed = -1;
                this.columnDEX_ROW_ID.AutoIncrementStep = -1;
                this.columnDEX_ROW_ID.AllowDBNull = false;
                this.columnDEX_ROW_ID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102Row NewEXT00102Row() {
                return ((EXT00102Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXT00102Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EXT00102Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXT00102RowChanged != null)) {
                    this.EXT00102RowChanged(this, new EXT00102RowChangeEvent(((EXT00102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXT00102RowChanging != null)) {
                    this.EXT00102RowChanging(this, new EXT00102RowChangeEvent(((EXT00102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXT00102RowDeleted != null)) {
                    this.EXT00102RowDeleted(this, new EXT00102RowChangeEvent(((EXT00102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXT00102RowDeleting != null)) {
                    this.EXT00102RowDeleting(this, new EXT00102RowChangeEvent(((EXT00102Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEXT00102Row(EXT00102Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SISCDataSet ds = new SISCDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXT00102DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXT00103DataTable : global::System.Data.TypedTableBase<EXT00103Row> {
            
            private global::System.Data.DataColumn columnPT_Window_ID;
            
            private global::System.Data.DataColumn columnPT_UD_Key;
            
            private global::System.Data.DataColumn columnPT_UD_Number;
            
            private global::System.Data.DataColumn columnTOTAL;
            
            private global::System.Data.DataColumn columnDEX_ROW_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103DataTable() {
                this.TableName = "EXT00103";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXT00103DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected EXT00103DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_Window_IDColumn {
                get {
                    return this.columnPT_Window_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_UD_KeyColumn {
                get {
                    return this.columnPT_UD_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PT_UD_NumberColumn {
                get {
                    return this.columnPT_UD_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEX_ROW_IDColumn {
                get {
                    return this.columnDEX_ROW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103Row this[int index] {
                get {
                    return ((EXT00103Row)(this.Rows[index]));
                }
            }
            
            public event EXT00103RowChangeEventHandler EXT00103RowChanging;
            
            public event EXT00103RowChangeEventHandler EXT00103RowChanged;
            
            public event EXT00103RowChangeEventHandler EXT00103RowDeleting;
            
            public event EXT00103RowChangeEventHandler EXT00103RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddEXT00103Row(EXT00103Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103Row AddEXT00103Row(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, decimal TOTAL) {
                EXT00103Row rowEXT00103Row = ((EXT00103Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PT_Window_ID,
                        PT_UD_Key,
                        PT_UD_Number,
                        TOTAL,
                        null};
                rowEXT00103Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXT00103Row);
                return rowEXT00103Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103Row FindByPT_Window_IDPT_UD_KeyPT_UD_Number(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number) {
                return ((EXT00103Row)(this.Rows.Find(new object[] {
                            PT_Window_ID,
                            PT_UD_Key,
                            PT_UD_Number})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                EXT00103DataTable cln = ((EXT00103DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXT00103DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPT_Window_ID = base.Columns["PT_Window_ID"];
                this.columnPT_UD_Key = base.Columns["PT_UD_Key"];
                this.columnPT_UD_Number = base.Columns["PT_UD_Number"];
                this.columnTOTAL = base.Columns["TOTAL"];
                this.columnDEX_ROW_ID = base.Columns["DEX_ROW_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPT_Window_ID = new global::System.Data.DataColumn("PT_Window_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_Window_ID);
                this.columnPT_UD_Key = new global::System.Data.DataColumn("PT_UD_Key", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_UD_Key);
                this.columnPT_UD_Number = new global::System.Data.DataColumn("PT_UD_Number", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPT_UD_Number);
                this.columnTOTAL = new global::System.Data.DataColumn("TOTAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL);
                this.columnDEX_ROW_ID = new global::System.Data.DataColumn("DEX_ROW_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEX_ROW_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPT_Window_ID,
                                this.columnPT_UD_Key,
                                this.columnPT_UD_Number}, true));
                this.columnPT_Window_ID.AllowDBNull = false;
                this.columnPT_Window_ID.MaxLength = 15;
                this.columnPT_UD_Key.AllowDBNull = false;
                this.columnPT_UD_Key.MaxLength = 201;
                this.columnPT_UD_Number.AllowDBNull = false;
                this.columnTOTAL.AllowDBNull = false;
                this.columnDEX_ROW_ID.AutoIncrement = true;
                this.columnDEX_ROW_ID.AutoIncrementSeed = -1;
                this.columnDEX_ROW_ID.AutoIncrementStep = -1;
                this.columnDEX_ROW_ID.AllowDBNull = false;
                this.columnDEX_ROW_ID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103Row NewEXT00103Row() {
                return ((EXT00103Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXT00103Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(EXT00103Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXT00103RowChanged != null)) {
                    this.EXT00103RowChanged(this, new EXT00103RowChangeEvent(((EXT00103Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXT00103RowChanging != null)) {
                    this.EXT00103RowChanging(this, new EXT00103RowChangeEvent(((EXT00103Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXT00103RowDeleted != null)) {
                    this.EXT00103RowDeleted(this, new EXT00103RowChangeEvent(((EXT00103Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXT00103RowDeleting != null)) {
                    this.EXT00103RowDeleting(this, new EXT00103RowChangeEvent(((EXT00103Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveEXT00103Row(EXT00103Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SISCDataSet ds = new SISCDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXT00103DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RM00101DataTable : global::System.Data.TypedTableBase<RM00101Row> {
            
            private global::System.Data.DataColumn columnCUSTNMBR;
            
            private global::System.Data.DataColumn columnCUSTNAME;
            
            private global::System.Data.DataColumn columnCUSTCLAS;
            
            private global::System.Data.DataColumn columnCPRCSTNM;
            
            private global::System.Data.DataColumn columnCNTCPRSN;
            
            private global::System.Data.DataColumn columnSTMTNAME;
            
            private global::System.Data.DataColumn columnSHRTNAME;
            
            private global::System.Data.DataColumn columnADRSCODE;
            
            private global::System.Data.DataColumn columnUPSZONE;
            
            private global::System.Data.DataColumn columnSHIPMTHD;
            
            private global::System.Data.DataColumn columnTAXSCHID;
            
            private global::System.Data.DataColumn columnADDRESS1;
            
            private global::System.Data.DataColumn columnADDRESS2;
            
            private global::System.Data.DataColumn columnADDRESS3;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnCITY;
            
            private global::System.Data.DataColumn columnSTATE;
            
            private global::System.Data.DataColumn columnZIP;
            
            private global::System.Data.DataColumn columnPHONE1;
            
            private global::System.Data.DataColumn columnPHONE2;
            
            private global::System.Data.DataColumn columnPHONE3;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnPRBTADCD;
            
            private global::System.Data.DataColumn columnPRSTADCD;
            
            private global::System.Data.DataColumn columnSTADDRCD;
            
            private global::System.Data.DataColumn columnSLPRSNID;
            
            private global::System.Data.DataColumn columnCHEKBKID;
            
            private global::System.Data.DataColumn columnPYMTRMID;
            
            private global::System.Data.DataColumn columnCRLMTTYP;
            
            private global::System.Data.DataColumn columnCRLMTAMT;
            
            private global::System.Data.DataColumn columnCRLMTPER;
            
            private global::System.Data.DataColumn columnCRLMTPAM;
            
            private global::System.Data.DataColumn columnCURNCYID;
            
            private global::System.Data.DataColumn columnRATETPID;
            
            private global::System.Data.DataColumn columnCUSTDISC;
            
            private global::System.Data.DataColumn columnPRCLEVEL;
            
            private global::System.Data.DataColumn columnMINPYTYP;
            
            private global::System.Data.DataColumn columnMINPYDLR;
            
            private global::System.Data.DataColumn columnMINPYPCT;
            
            private global::System.Data.DataColumn columnFNCHATYP;
            
            private global::System.Data.DataColumn columnFNCHPCNT;
            
            private global::System.Data.DataColumn columnFINCHDLR;
            
            private global::System.Data.DataColumn columnMXWOFTYP;
            
            private global::System.Data.DataColumn columnMXWROFAM;
            
            private global::System.Data.DataColumn columnCOMMENT1;
            
            private global::System.Data.DataColumn columnCOMMENT2;
            
            private global::System.Data.DataColumn columnUSERDEF1;
            
            private global::System.Data.DataColumn columnUSERDEF2;
            
            private global::System.Data.DataColumn columnTAXEXMT1;
            
            private global::System.Data.DataColumn columnTAXEXMT2;
            
            private global::System.Data.DataColumn columnTXRGNNUM;
            
            private global::System.Data.DataColumn columnBALNCTYP;
            
            private global::System.Data.DataColumn columnSTMTCYCL;
            
            private global::System.Data.DataColumn columnBANKNAME;
            
            private global::System.Data.DataColumn columnBNKBRNCH;
            
            private global::System.Data.DataColumn columnSALSTERR;
            
            private global::System.Data.DataColumn columnDEFCACTY;
            
            private global::System.Data.DataColumn columnRMCSHACC;
            
            private global::System.Data.DataColumn columnRMARACC;
            
            private global::System.Data.DataColumn columnRMSLSACC;
            
            private global::System.Data.DataColumn columnRMIVACC;
            
            private global::System.Data.DataColumn columnRMCOSACC;
            
            private global::System.Data.DataColumn columnRMTAKACC;
            
            private global::System.Data.DataColumn columnRMAVACC;
            
            private global::System.Data.DataColumn columnRMFCGACC;
            
            private global::System.Data.DataColumn columnRMWRACC;
            
            private global::System.Data.DataColumn columnRMSORACC;
            
            private global::System.Data.DataColumn columnFRSTINDT;
            
            private global::System.Data.DataColumn columnINACTIVE;
            
            private global::System.Data.DataColumn columnHOLD;
            
            private global::System.Data.DataColumn columnCRCARDID;
            
            private global::System.Data.DataColumn columnCRCRDNUM;
            
            private global::System.Data.DataColumn columnCCRDXPDT;
            
            private global::System.Data.DataColumn columnKPDSTHST;
            
            private global::System.Data.DataColumn columnKPCALHST;
            
            private global::System.Data.DataColumn columnKPERHIST;
            
            private global::System.Data.DataColumn columnKPTRXHST;
            
            private global::System.Data.DataColumn columnNOTEINDX;
            
            private global::System.Data.DataColumn columnCREATDDT;
            
            private global::System.Data.DataColumn columnMODIFDT;
            
            private global::System.Data.DataColumn columnRevalue_Customer;
            
            private global::System.Data.DataColumn columnPost_Results_To;
            
            private global::System.Data.DataColumn columnFINCHID;
            
            private global::System.Data.DataColumn columnGOVCRPID;
            
            private global::System.Data.DataColumn columnGOVINDID;
            
            private global::System.Data.DataColumn columnDISGRPER;
            
            private global::System.Data.DataColumn columnDUEGRPER;
            
            private global::System.Data.DataColumn columnDOCFMTID;
            
            private global::System.Data.DataColumn columnSend_Email_Statements;
            
            private global::System.Data.DataColumn columnUSERLANG;
            
            private global::System.Data.DataColumn columnGPSFOINTEGRATIONID;
            
            private global::System.Data.DataColumn columnINTEGRATIONSOURCE;
            
            private global::System.Data.DataColumn columnINTEGRATIONID;
            
            private global::System.Data.DataColumn columnORDERFULFILLDEFAULT;
            
            private global::System.Data.DataColumn columnCUSTPRIORITY;
            
            private global::System.Data.DataColumn columnCCode;
            
            private global::System.Data.DataColumn columnDECLID;
            
            private global::System.Data.DataColumn columnRMOvrpymtWrtoffAcctIdx;
            
            private global::System.Data.DataColumn columnSHIPCOMPLETE;
            
            private global::System.Data.DataColumn columnCBVAT;
            
            private global::System.Data.DataColumn columnINCLUDEINDP;
            
            private global::System.Data.DataColumn columnDEX_ROW_TS;
            
            private global::System.Data.DataColumn columnDEX_ROW_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101DataTable() {
                this.TableName = "RM00101";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RM00101DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RM00101DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTNMBRColumn {
                get {
                    return this.columnCUSTNMBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTNAMEColumn {
                get {
                    return this.columnCUSTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTCLASColumn {
                get {
                    return this.columnCUSTCLAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CPRCSTNMColumn {
                get {
                    return this.columnCPRCSTNM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNTCPRSNColumn {
                get {
                    return this.columnCNTCPRSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STMTNAMEColumn {
                get {
                    return this.columnSTMTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHRTNAMEColumn {
                get {
                    return this.columnSHRTNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADRSCODEColumn {
                get {
                    return this.columnADRSCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPSZONEColumn {
                get {
                    return this.columnUPSZONE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPMTHDColumn {
                get {
                    return this.columnSHIPMTHD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXSCHIDColumn {
                get {
                    return this.columnTAXSCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS1Column {
                get {
                    return this.columnADDRESS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS2Column {
                get {
                    return this.columnADDRESS2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ADDRESS3Column {
                get {
                    return this.columnADDRESS3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CITYColumn {
                get {
                    return this.columnCITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATEColumn {
                get {
                    return this.columnSTATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZIPColumn {
                get {
                    return this.columnZIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHONE1Column {
                get {
                    return this.columnPHONE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHONE2Column {
                get {
                    return this.columnPHONE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PHONE3Column {
                get {
                    return this.columnPHONE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRBTADCDColumn {
                get {
                    return this.columnPRBTADCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRSTADCDColumn {
                get {
                    return this.columnPRSTADCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STADDRCDColumn {
                get {
                    return this.columnSTADDRCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLPRSNIDColumn {
                get {
                    return this.columnSLPRSNID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CHEKBKIDColumn {
                get {
                    return this.columnCHEKBKID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PYMTRMIDColumn {
                get {
                    return this.columnPYMTRMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRLMTTYPColumn {
                get {
                    return this.columnCRLMTTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRLMTAMTColumn {
                get {
                    return this.columnCRLMTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRLMTPERColumn {
                get {
                    return this.columnCRLMTPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRLMTPAMColumn {
                get {
                    return this.columnCRLMTPAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CURNCYIDColumn {
                get {
                    return this.columnCURNCYID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATETPIDColumn {
                get {
                    return this.columnRATETPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTDISCColumn {
                get {
                    return this.columnCUSTDISC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PRCLEVELColumn {
                get {
                    return this.columnPRCLEVEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINPYTYPColumn {
                get {
                    return this.columnMINPYTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINPYDLRColumn {
                get {
                    return this.columnMINPYDLR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MINPYPCTColumn {
                get {
                    return this.columnMINPYPCT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNCHATYPColumn {
                get {
                    return this.columnFNCHATYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNCHPCNTColumn {
                get {
                    return this.columnFNCHPCNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINCHDLRColumn {
                get {
                    return this.columnFINCHDLR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MXWOFTYPColumn {
                get {
                    return this.columnMXWOFTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MXWROFAMColumn {
                get {
                    return this.columnMXWROFAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENT1Column {
                get {
                    return this.columnCOMMENT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMENT2Column {
                get {
                    return this.columnCOMMENT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERDEF1Column {
                get {
                    return this.columnUSERDEF1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERDEF2Column {
                get {
                    return this.columnUSERDEF2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXEXMT1Column {
                get {
                    return this.columnTAXEXMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAXEXMT2Column {
                get {
                    return this.columnTAXEXMT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TXRGNNUMColumn {
                get {
                    return this.columnTXRGNNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BALNCTYPColumn {
                get {
                    return this.columnBALNCTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STMTCYCLColumn {
                get {
                    return this.columnSTMTCYCL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANKNAMEColumn {
                get {
                    return this.columnBANKNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BNKBRNCHColumn {
                get {
                    return this.columnBNKBRNCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SALSTERRColumn {
                get {
                    return this.columnSALSTERR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEFCACTYColumn {
                get {
                    return this.columnDEFCACTY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMCSHACCColumn {
                get {
                    return this.columnRMCSHACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMARACCColumn {
                get {
                    return this.columnRMARACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMSLSACCColumn {
                get {
                    return this.columnRMSLSACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMIVACCColumn {
                get {
                    return this.columnRMIVACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMCOSACCColumn {
                get {
                    return this.columnRMCOSACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMTAKACCColumn {
                get {
                    return this.columnRMTAKACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMAVACCColumn {
                get {
                    return this.columnRMAVACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMFCGACCColumn {
                get {
                    return this.columnRMFCGACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMWRACCColumn {
                get {
                    return this.columnRMWRACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMSORACCColumn {
                get {
                    return this.columnRMSORACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FRSTINDTColumn {
                get {
                    return this.columnFRSTINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INACTIVEColumn {
                get {
                    return this.columnINACTIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOLDColumn {
                get {
                    return this.columnHOLD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRCARDIDColumn {
                get {
                    return this.columnCRCARDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRCRDNUMColumn {
                get {
                    return this.columnCRCRDNUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCRDXPDTColumn {
                get {
                    return this.columnCCRDXPDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPDSTHSTColumn {
                get {
                    return this.columnKPDSTHST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPCALHSTColumn {
                get {
                    return this.columnKPCALHST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPERHISTColumn {
                get {
                    return this.columnKPERHIST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPTRXHSTColumn {
                get {
                    return this.columnKPTRXHST;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NOTEINDXColumn {
                get {
                    return this.columnNOTEINDX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATDDTColumn {
                get {
                    return this.columnCREATDDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MODIFDTColumn {
                get {
                    return this.columnMODIFDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Revalue_CustomerColumn {
                get {
                    return this.columnRevalue_Customer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Post_Results_ToColumn {
                get {
                    return this.columnPost_Results_To;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINCHIDColumn {
                get {
                    return this.columnFINCHID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GOVCRPIDColumn {
                get {
                    return this.columnGOVCRPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GOVINDIDColumn {
                get {
                    return this.columnGOVINDID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DISGRPERColumn {
                get {
                    return this.columnDISGRPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DUEGRPERColumn {
                get {
                    return this.columnDUEGRPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCFMTIDColumn {
                get {
                    return this.columnDOCFMTID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Send_Email_StatementsColumn {
                get {
                    return this.columnSend_Email_Statements;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERLANGColumn {
                get {
                    return this.columnUSERLANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GPSFOINTEGRATIONIDColumn {
                get {
                    return this.columnGPSFOINTEGRATIONID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTEGRATIONSOURCEColumn {
                get {
                    return this.columnINTEGRATIONSOURCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INTEGRATIONIDColumn {
                get {
                    return this.columnINTEGRATIONID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ORDERFULFILLDEFAULTColumn {
                get {
                    return this.columnORDERFULFILLDEFAULT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUSTPRIORITYColumn {
                get {
                    return this.columnCUSTPRIORITY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCodeColumn {
                get {
                    return this.columnCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DECLIDColumn {
                get {
                    return this.columnDECLID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMOvrpymtWrtoffAcctIdxColumn {
                get {
                    return this.columnRMOvrpymtWrtoffAcctIdx;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPCOMPLETEColumn {
                get {
                    return this.columnSHIPCOMPLETE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CBVATColumn {
                get {
                    return this.columnCBVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INCLUDEINDPColumn {
                get {
                    return this.columnINCLUDEINDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEX_ROW_TSColumn {
                get {
                    return this.columnDEX_ROW_TS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEX_ROW_IDColumn {
                get {
                    return this.columnDEX_ROW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101Row this[int index] {
                get {
                    return ((RM00101Row)(this.Rows[index]));
                }
            }
            
            public event RM00101RowChangeEventHandler RM00101RowChanging;
            
            public event RM00101RowChangeEventHandler RM00101RowChanged;
            
            public event RM00101RowChangeEventHandler RM00101RowDeleting;
            
            public event RM00101RowChangeEventHandler RM00101RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRM00101Row(RM00101Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101Row AddRM00101Row(
                        string CUSTNMBR, 
                        string CUSTNAME, 
                        string CUSTCLAS, 
                        string CPRCSTNM, 
                        string CNTCPRSN, 
                        string STMTNAME, 
                        string SHRTNAME, 
                        string ADRSCODE, 
                        string UPSZONE, 
                        string SHIPMTHD, 
                        string TAXSCHID, 
                        string ADDRESS1, 
                        string ADDRESS2, 
                        string ADDRESS3, 
                        string COUNTRY, 
                        string CITY, 
                        string STATE, 
                        string ZIP, 
                        string PHONE1, 
                        string PHONE2, 
                        string PHONE3, 
                        string FAX, 
                        string PRBTADCD, 
                        string PRSTADCD, 
                        string STADDRCD, 
                        string SLPRSNID, 
                        string CHEKBKID, 
                        string PYMTRMID, 
                        short CRLMTTYP, 
                        decimal CRLMTAMT, 
                        short CRLMTPER, 
                        decimal CRLMTPAM, 
                        string CURNCYID, 
                        string RATETPID, 
                        short CUSTDISC, 
                        string PRCLEVEL, 
                        short MINPYTYP, 
                        decimal MINPYDLR, 
                        short MINPYPCT, 
                        short FNCHATYP, 
                        short FNCHPCNT, 
                        decimal FINCHDLR, 
                        short MXWOFTYP, 
                        decimal MXWROFAM, 
                        string COMMENT1, 
                        string COMMENT2, 
                        string USERDEF1, 
                        string USERDEF2, 
                        string TAXEXMT1, 
                        string TAXEXMT2, 
                        string TXRGNNUM, 
                        short BALNCTYP, 
                        short STMTCYCL, 
                        string BANKNAME, 
                        string BNKBRNCH, 
                        string SALSTERR, 
                        short DEFCACTY, 
                        int RMCSHACC, 
                        int RMARACC, 
                        int RMSLSACC, 
                        int RMIVACC, 
                        int RMCOSACC, 
                        int RMTAKACC, 
                        int RMAVACC, 
                        int RMFCGACC, 
                        int RMWRACC, 
                        int RMSORACC, 
                        System.DateTime FRSTINDT, 
                        byte INACTIVE, 
                        byte HOLD, 
                        string CRCARDID, 
                        string CRCRDNUM, 
                        System.DateTime CCRDXPDT, 
                        byte KPDSTHST, 
                        byte KPCALHST, 
                        byte KPERHIST, 
                        byte KPTRXHST, 
                        decimal NOTEINDX, 
                        System.DateTime CREATDDT, 
                        System.DateTime MODIFDT, 
                        byte Revalue_Customer, 
                        short Post_Results_To, 
                        string FINCHID, 
                        string GOVCRPID, 
                        string GOVINDID, 
                        short DISGRPER, 
                        short DUEGRPER, 
                        string DOCFMTID, 
                        byte Send_Email_Statements, 
                        short USERLANG, 
                        string GPSFOINTEGRATIONID, 
                        short INTEGRATIONSOURCE, 
                        string INTEGRATIONID, 
                        short ORDERFULFILLDEFAULT, 
                        short CUSTPRIORITY, 
                        string CCode, 
                        string DECLID, 
                        int RMOvrpymtWrtoffAcctIdx, 
                        byte SHIPCOMPLETE, 
                        byte CBVAT, 
                        byte INCLUDEINDP, 
                        System.DateTime DEX_ROW_TS) {
                RM00101Row rowRM00101Row = ((RM00101Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CUSTNMBR,
                        CUSTNAME,
                        CUSTCLAS,
                        CPRCSTNM,
                        CNTCPRSN,
                        STMTNAME,
                        SHRTNAME,
                        ADRSCODE,
                        UPSZONE,
                        SHIPMTHD,
                        TAXSCHID,
                        ADDRESS1,
                        ADDRESS2,
                        ADDRESS3,
                        COUNTRY,
                        CITY,
                        STATE,
                        ZIP,
                        PHONE1,
                        PHONE2,
                        PHONE3,
                        FAX,
                        PRBTADCD,
                        PRSTADCD,
                        STADDRCD,
                        SLPRSNID,
                        CHEKBKID,
                        PYMTRMID,
                        CRLMTTYP,
                        CRLMTAMT,
                        CRLMTPER,
                        CRLMTPAM,
                        CURNCYID,
                        RATETPID,
                        CUSTDISC,
                        PRCLEVEL,
                        MINPYTYP,
                        MINPYDLR,
                        MINPYPCT,
                        FNCHATYP,
                        FNCHPCNT,
                        FINCHDLR,
                        MXWOFTYP,
                        MXWROFAM,
                        COMMENT1,
                        COMMENT2,
                        USERDEF1,
                        USERDEF2,
                        TAXEXMT1,
                        TAXEXMT2,
                        TXRGNNUM,
                        BALNCTYP,
                        STMTCYCL,
                        BANKNAME,
                        BNKBRNCH,
                        SALSTERR,
                        DEFCACTY,
                        RMCSHACC,
                        RMARACC,
                        RMSLSACC,
                        RMIVACC,
                        RMCOSACC,
                        RMTAKACC,
                        RMAVACC,
                        RMFCGACC,
                        RMWRACC,
                        RMSORACC,
                        FRSTINDT,
                        INACTIVE,
                        HOLD,
                        CRCARDID,
                        CRCRDNUM,
                        CCRDXPDT,
                        KPDSTHST,
                        KPCALHST,
                        KPERHIST,
                        KPTRXHST,
                        NOTEINDX,
                        CREATDDT,
                        MODIFDT,
                        Revalue_Customer,
                        Post_Results_To,
                        FINCHID,
                        GOVCRPID,
                        GOVINDID,
                        DISGRPER,
                        DUEGRPER,
                        DOCFMTID,
                        Send_Email_Statements,
                        USERLANG,
                        GPSFOINTEGRATIONID,
                        INTEGRATIONSOURCE,
                        INTEGRATIONID,
                        ORDERFULFILLDEFAULT,
                        CUSTPRIORITY,
                        CCode,
                        DECLID,
                        RMOvrpymtWrtoffAcctIdx,
                        SHIPCOMPLETE,
                        CBVAT,
                        INCLUDEINDP,
                        DEX_ROW_TS,
                        null};
                rowRM00101Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowRM00101Row);
                return rowRM00101Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101Row FindByCUSTNMBR(string CUSTNMBR) {
                return ((RM00101Row)(this.Rows.Find(new object[] {
                            CUSTNMBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RM00101DataTable cln = ((RM00101DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RM00101DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCUSTNMBR = base.Columns["CUSTNMBR"];
                this.columnCUSTNAME = base.Columns["CUSTNAME"];
                this.columnCUSTCLAS = base.Columns["CUSTCLAS"];
                this.columnCPRCSTNM = base.Columns["CPRCSTNM"];
                this.columnCNTCPRSN = base.Columns["CNTCPRSN"];
                this.columnSTMTNAME = base.Columns["STMTNAME"];
                this.columnSHRTNAME = base.Columns["SHRTNAME"];
                this.columnADRSCODE = base.Columns["ADRSCODE"];
                this.columnUPSZONE = base.Columns["UPSZONE"];
                this.columnSHIPMTHD = base.Columns["SHIPMTHD"];
                this.columnTAXSCHID = base.Columns["TAXSCHID"];
                this.columnADDRESS1 = base.Columns["ADDRESS1"];
                this.columnADDRESS2 = base.Columns["ADDRESS2"];
                this.columnADDRESS3 = base.Columns["ADDRESS3"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnCITY = base.Columns["CITY"];
                this.columnSTATE = base.Columns["STATE"];
                this.columnZIP = base.Columns["ZIP"];
                this.columnPHONE1 = base.Columns["PHONE1"];
                this.columnPHONE2 = base.Columns["PHONE2"];
                this.columnPHONE3 = base.Columns["PHONE3"];
                this.columnFAX = base.Columns["FAX"];
                this.columnPRBTADCD = base.Columns["PRBTADCD"];
                this.columnPRSTADCD = base.Columns["PRSTADCD"];
                this.columnSTADDRCD = base.Columns["STADDRCD"];
                this.columnSLPRSNID = base.Columns["SLPRSNID"];
                this.columnCHEKBKID = base.Columns["CHEKBKID"];
                this.columnPYMTRMID = base.Columns["PYMTRMID"];
                this.columnCRLMTTYP = base.Columns["CRLMTTYP"];
                this.columnCRLMTAMT = base.Columns["CRLMTAMT"];
                this.columnCRLMTPER = base.Columns["CRLMTPER"];
                this.columnCRLMTPAM = base.Columns["CRLMTPAM"];
                this.columnCURNCYID = base.Columns["CURNCYID"];
                this.columnRATETPID = base.Columns["RATETPID"];
                this.columnCUSTDISC = base.Columns["CUSTDISC"];
                this.columnPRCLEVEL = base.Columns["PRCLEVEL"];
                this.columnMINPYTYP = base.Columns["MINPYTYP"];
                this.columnMINPYDLR = base.Columns["MINPYDLR"];
                this.columnMINPYPCT = base.Columns["MINPYPCT"];
                this.columnFNCHATYP = base.Columns["FNCHATYP"];
                this.columnFNCHPCNT = base.Columns["FNCHPCNT"];
                this.columnFINCHDLR = base.Columns["FINCHDLR"];
                this.columnMXWOFTYP = base.Columns["MXWOFTYP"];
                this.columnMXWROFAM = base.Columns["MXWROFAM"];
                this.columnCOMMENT1 = base.Columns["COMMENT1"];
                this.columnCOMMENT2 = base.Columns["COMMENT2"];
                this.columnUSERDEF1 = base.Columns["USERDEF1"];
                this.columnUSERDEF2 = base.Columns["USERDEF2"];
                this.columnTAXEXMT1 = base.Columns["TAXEXMT1"];
                this.columnTAXEXMT2 = base.Columns["TAXEXMT2"];
                this.columnTXRGNNUM = base.Columns["TXRGNNUM"];
                this.columnBALNCTYP = base.Columns["BALNCTYP"];
                this.columnSTMTCYCL = base.Columns["STMTCYCL"];
                this.columnBANKNAME = base.Columns["BANKNAME"];
                this.columnBNKBRNCH = base.Columns["BNKBRNCH"];
                this.columnSALSTERR = base.Columns["SALSTERR"];
                this.columnDEFCACTY = base.Columns["DEFCACTY"];
                this.columnRMCSHACC = base.Columns["RMCSHACC"];
                this.columnRMARACC = base.Columns["RMARACC"];
                this.columnRMSLSACC = base.Columns["RMSLSACC"];
                this.columnRMIVACC = base.Columns["RMIVACC"];
                this.columnRMCOSACC = base.Columns["RMCOSACC"];
                this.columnRMTAKACC = base.Columns["RMTAKACC"];
                this.columnRMAVACC = base.Columns["RMAVACC"];
                this.columnRMFCGACC = base.Columns["RMFCGACC"];
                this.columnRMWRACC = base.Columns["RMWRACC"];
                this.columnRMSORACC = base.Columns["RMSORACC"];
                this.columnFRSTINDT = base.Columns["FRSTINDT"];
                this.columnINACTIVE = base.Columns["INACTIVE"];
                this.columnHOLD = base.Columns["HOLD"];
                this.columnCRCARDID = base.Columns["CRCARDID"];
                this.columnCRCRDNUM = base.Columns["CRCRDNUM"];
                this.columnCCRDXPDT = base.Columns["CCRDXPDT"];
                this.columnKPDSTHST = base.Columns["KPDSTHST"];
                this.columnKPCALHST = base.Columns["KPCALHST"];
                this.columnKPERHIST = base.Columns["KPERHIST"];
                this.columnKPTRXHST = base.Columns["KPTRXHST"];
                this.columnNOTEINDX = base.Columns["NOTEINDX"];
                this.columnCREATDDT = base.Columns["CREATDDT"];
                this.columnMODIFDT = base.Columns["MODIFDT"];
                this.columnRevalue_Customer = base.Columns["Revalue_Customer"];
                this.columnPost_Results_To = base.Columns["Post_Results_To"];
                this.columnFINCHID = base.Columns["FINCHID"];
                this.columnGOVCRPID = base.Columns["GOVCRPID"];
                this.columnGOVINDID = base.Columns["GOVINDID"];
                this.columnDISGRPER = base.Columns["DISGRPER"];
                this.columnDUEGRPER = base.Columns["DUEGRPER"];
                this.columnDOCFMTID = base.Columns["DOCFMTID"];
                this.columnSend_Email_Statements = base.Columns["Send_Email_Statements"];
                this.columnUSERLANG = base.Columns["USERLANG"];
                this.columnGPSFOINTEGRATIONID = base.Columns["GPSFOINTEGRATIONID"];
                this.columnINTEGRATIONSOURCE = base.Columns["INTEGRATIONSOURCE"];
                this.columnINTEGRATIONID = base.Columns["INTEGRATIONID"];
                this.columnORDERFULFILLDEFAULT = base.Columns["ORDERFULFILLDEFAULT"];
                this.columnCUSTPRIORITY = base.Columns["CUSTPRIORITY"];
                this.columnCCode = base.Columns["CCode"];
                this.columnDECLID = base.Columns["DECLID"];
                this.columnRMOvrpymtWrtoffAcctIdx = base.Columns["RMOvrpymtWrtoffAcctIdx"];
                this.columnSHIPCOMPLETE = base.Columns["SHIPCOMPLETE"];
                this.columnCBVAT = base.Columns["CBVAT"];
                this.columnINCLUDEINDP = base.Columns["INCLUDEINDP"];
                this.columnDEX_ROW_TS = base.Columns["DEX_ROW_TS"];
                this.columnDEX_ROW_ID = base.Columns["DEX_ROW_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCUSTNMBR = new global::System.Data.DataColumn("CUSTNMBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTNMBR);
                this.columnCUSTNAME = new global::System.Data.DataColumn("CUSTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTNAME);
                this.columnCUSTCLAS = new global::System.Data.DataColumn("CUSTCLAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTCLAS);
                this.columnCPRCSTNM = new global::System.Data.DataColumn("CPRCSTNM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPRCSTNM);
                this.columnCNTCPRSN = new global::System.Data.DataColumn("CNTCPRSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNTCPRSN);
                this.columnSTMTNAME = new global::System.Data.DataColumn("STMTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTMTNAME);
                this.columnSHRTNAME = new global::System.Data.DataColumn("SHRTNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHRTNAME);
                this.columnADRSCODE = new global::System.Data.DataColumn("ADRSCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADRSCODE);
                this.columnUPSZONE = new global::System.Data.DataColumn("UPSZONE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPSZONE);
                this.columnSHIPMTHD = new global::System.Data.DataColumn("SHIPMTHD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPMTHD);
                this.columnTAXSCHID = new global::System.Data.DataColumn("TAXSCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXSCHID);
                this.columnADDRESS1 = new global::System.Data.DataColumn("ADDRESS1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS1);
                this.columnADDRESS2 = new global::System.Data.DataColumn("ADDRESS2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS2);
                this.columnADDRESS3 = new global::System.Data.DataColumn("ADDRESS3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS3);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnCITY = new global::System.Data.DataColumn("CITY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCITY);
                this.columnSTATE = new global::System.Data.DataColumn("STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATE);
                this.columnZIP = new global::System.Data.DataColumn("ZIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZIP);
                this.columnPHONE1 = new global::System.Data.DataColumn("PHONE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE1);
                this.columnPHONE2 = new global::System.Data.DataColumn("PHONE2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE2);
                this.columnPHONE3 = new global::System.Data.DataColumn("PHONE3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPHONE3);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnPRBTADCD = new global::System.Data.DataColumn("PRBTADCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRBTADCD);
                this.columnPRSTADCD = new global::System.Data.DataColumn("PRSTADCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRSTADCD);
                this.columnSTADDRCD = new global::System.Data.DataColumn("STADDRCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTADDRCD);
                this.columnSLPRSNID = new global::System.Data.DataColumn("SLPRSNID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSLPRSNID);
                this.columnCHEKBKID = new global::System.Data.DataColumn("CHEKBKID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHEKBKID);
                this.columnPYMTRMID = new global::System.Data.DataColumn("PYMTRMID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPYMTRMID);
                this.columnCRLMTTYP = new global::System.Data.DataColumn("CRLMTTYP", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRLMTTYP);
                this.columnCRLMTAMT = new global::System.Data.DataColumn("CRLMTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRLMTAMT);
                this.columnCRLMTPER = new global::System.Data.DataColumn("CRLMTPER", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRLMTPER);
                this.columnCRLMTPAM = new global::System.Data.DataColumn("CRLMTPAM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRLMTPAM);
                this.columnCURNCYID = new global::System.Data.DataColumn("CURNCYID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCURNCYID);
                this.columnRATETPID = new global::System.Data.DataColumn("RATETPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATETPID);
                this.columnCUSTDISC = new global::System.Data.DataColumn("CUSTDISC", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTDISC);
                this.columnPRCLEVEL = new global::System.Data.DataColumn("PRCLEVEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPRCLEVEL);
                this.columnMINPYTYP = new global::System.Data.DataColumn("MINPYTYP", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINPYTYP);
                this.columnMINPYDLR = new global::System.Data.DataColumn("MINPYDLR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINPYDLR);
                this.columnMINPYPCT = new global::System.Data.DataColumn("MINPYPCT", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMINPYPCT);
                this.columnFNCHATYP = new global::System.Data.DataColumn("FNCHATYP", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNCHATYP);
                this.columnFNCHPCNT = new global::System.Data.DataColumn("FNCHPCNT", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNCHPCNT);
                this.columnFINCHDLR = new global::System.Data.DataColumn("FINCHDLR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINCHDLR);
                this.columnMXWOFTYP = new global::System.Data.DataColumn("MXWOFTYP", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMXWOFTYP);
                this.columnMXWROFAM = new global::System.Data.DataColumn("MXWROFAM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMXWROFAM);
                this.columnCOMMENT1 = new global::System.Data.DataColumn("COMMENT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENT1);
                this.columnCOMMENT2 = new global::System.Data.DataColumn("COMMENT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMENT2);
                this.columnUSERDEF1 = new global::System.Data.DataColumn("USERDEF1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERDEF1);
                this.columnUSERDEF2 = new global::System.Data.DataColumn("USERDEF2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERDEF2);
                this.columnTAXEXMT1 = new global::System.Data.DataColumn("TAXEXMT1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXEXMT1);
                this.columnTAXEXMT2 = new global::System.Data.DataColumn("TAXEXMT2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXEXMT2);
                this.columnTXRGNNUM = new global::System.Data.DataColumn("TXRGNNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXRGNNUM);
                this.columnBALNCTYP = new global::System.Data.DataColumn("BALNCTYP", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBALNCTYP);
                this.columnSTMTCYCL = new global::System.Data.DataColumn("STMTCYCL", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTMTCYCL);
                this.columnBANKNAME = new global::System.Data.DataColumn("BANKNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANKNAME);
                this.columnBNKBRNCH = new global::System.Data.DataColumn("BNKBRNCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBNKBRNCH);
                this.columnSALSTERR = new global::System.Data.DataColumn("SALSTERR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALSTERR);
                this.columnDEFCACTY = new global::System.Data.DataColumn("DEFCACTY", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFCACTY);
                this.columnRMCSHACC = new global::System.Data.DataColumn("RMCSHACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMCSHACC);
                this.columnRMARACC = new global::System.Data.DataColumn("RMARACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMARACC);
                this.columnRMSLSACC = new global::System.Data.DataColumn("RMSLSACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMSLSACC);
                this.columnRMIVACC = new global::System.Data.DataColumn("RMIVACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMIVACC);
                this.columnRMCOSACC = new global::System.Data.DataColumn("RMCOSACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMCOSACC);
                this.columnRMTAKACC = new global::System.Data.DataColumn("RMTAKACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMTAKACC);
                this.columnRMAVACC = new global::System.Data.DataColumn("RMAVACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMAVACC);
                this.columnRMFCGACC = new global::System.Data.DataColumn("RMFCGACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMFCGACC);
                this.columnRMWRACC = new global::System.Data.DataColumn("RMWRACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMWRACC);
                this.columnRMSORACC = new global::System.Data.DataColumn("RMSORACC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMSORACC);
                this.columnFRSTINDT = new global::System.Data.DataColumn("FRSTINDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFRSTINDT);
                this.columnINACTIVE = new global::System.Data.DataColumn("INACTIVE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINACTIVE);
                this.columnHOLD = new global::System.Data.DataColumn("HOLD", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLD);
                this.columnCRCARDID = new global::System.Data.DataColumn("CRCARDID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRCARDID);
                this.columnCRCRDNUM = new global::System.Data.DataColumn("CRCRDNUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCRCRDNUM);
                this.columnCCRDXPDT = new global::System.Data.DataColumn("CCRDXPDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCRDXPDT);
                this.columnKPDSTHST = new global::System.Data.DataColumn("KPDSTHST", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPDSTHST);
                this.columnKPCALHST = new global::System.Data.DataColumn("KPCALHST", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPCALHST);
                this.columnKPERHIST = new global::System.Data.DataColumn("KPERHIST", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPERHIST);
                this.columnKPTRXHST = new global::System.Data.DataColumn("KPTRXHST", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPTRXHST);
                this.columnNOTEINDX = new global::System.Data.DataColumn("NOTEINDX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTEINDX);
                this.columnCREATDDT = new global::System.Data.DataColumn("CREATDDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATDDT);
                this.columnMODIFDT = new global::System.Data.DataColumn("MODIFDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMODIFDT);
                this.columnRevalue_Customer = new global::System.Data.DataColumn("Revalue_Customer", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRevalue_Customer);
                this.columnPost_Results_To = new global::System.Data.DataColumn("Post_Results_To", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPost_Results_To);
                this.columnFINCHID = new global::System.Data.DataColumn("FINCHID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINCHID);
                this.columnGOVCRPID = new global::System.Data.DataColumn("GOVCRPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOVCRPID);
                this.columnGOVINDID = new global::System.Data.DataColumn("GOVINDID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGOVINDID);
                this.columnDISGRPER = new global::System.Data.DataColumn("DISGRPER", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISGRPER);
                this.columnDUEGRPER = new global::System.Data.DataColumn("DUEGRPER", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDUEGRPER);
                this.columnDOCFMTID = new global::System.Data.DataColumn("DOCFMTID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCFMTID);
                this.columnSend_Email_Statements = new global::System.Data.DataColumn("Send_Email_Statements", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSend_Email_Statements);
                this.columnUSERLANG = new global::System.Data.DataColumn("USERLANG", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERLANG);
                this.columnGPSFOINTEGRATIONID = new global::System.Data.DataColumn("GPSFOINTEGRATIONID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGPSFOINTEGRATIONID);
                this.columnINTEGRATIONSOURCE = new global::System.Data.DataColumn("INTEGRATIONSOURCE", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTEGRATIONSOURCE);
                this.columnINTEGRATIONID = new global::System.Data.DataColumn("INTEGRATIONID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINTEGRATIONID);
                this.columnORDERFULFILLDEFAULT = new global::System.Data.DataColumn("ORDERFULFILLDEFAULT", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnORDERFULFILLDEFAULT);
                this.columnCUSTPRIORITY = new global::System.Data.DataColumn("CUSTPRIORITY", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUSTPRIORITY);
                this.columnCCode = new global::System.Data.DataColumn("CCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCode);
                this.columnDECLID = new global::System.Data.DataColumn("DECLID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDECLID);
                this.columnRMOvrpymtWrtoffAcctIdx = new global::System.Data.DataColumn("RMOvrpymtWrtoffAcctIdx", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMOvrpymtWrtoffAcctIdx);
                this.columnSHIPCOMPLETE = new global::System.Data.DataColumn("SHIPCOMPLETE", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPCOMPLETE);
                this.columnCBVAT = new global::System.Data.DataColumn("CBVAT", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCBVAT);
                this.columnINCLUDEINDP = new global::System.Data.DataColumn("INCLUDEINDP", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINCLUDEINDP);
                this.columnDEX_ROW_TS = new global::System.Data.DataColumn("DEX_ROW_TS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEX_ROW_TS);
                this.columnDEX_ROW_ID = new global::System.Data.DataColumn("DEX_ROW_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEX_ROW_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCUSTNMBR}, true));
                this.columnCUSTNMBR.AllowDBNull = false;
                this.columnCUSTNMBR.Unique = true;
                this.columnCUSTNMBR.MaxLength = 15;
                this.columnCUSTNAME.AllowDBNull = false;
                this.columnCUSTNAME.MaxLength = 65;
                this.columnCUSTCLAS.AllowDBNull = false;
                this.columnCUSTCLAS.MaxLength = 15;
                this.columnCPRCSTNM.AllowDBNull = false;
                this.columnCPRCSTNM.MaxLength = 15;
                this.columnCNTCPRSN.AllowDBNull = false;
                this.columnCNTCPRSN.MaxLength = 61;
                this.columnSTMTNAME.AllowDBNull = false;
                this.columnSTMTNAME.MaxLength = 65;
                this.columnSHRTNAME.AllowDBNull = false;
                this.columnSHRTNAME.MaxLength = 15;
                this.columnADRSCODE.AllowDBNull = false;
                this.columnADRSCODE.MaxLength = 15;
                this.columnUPSZONE.AllowDBNull = false;
                this.columnUPSZONE.MaxLength = 3;
                this.columnSHIPMTHD.AllowDBNull = false;
                this.columnSHIPMTHD.MaxLength = 15;
                this.columnTAXSCHID.AllowDBNull = false;
                this.columnTAXSCHID.MaxLength = 15;
                this.columnADDRESS1.AllowDBNull = false;
                this.columnADDRESS1.MaxLength = 61;
                this.columnADDRESS2.AllowDBNull = false;
                this.columnADDRESS2.MaxLength = 61;
                this.columnADDRESS3.AllowDBNull = false;
                this.columnADDRESS3.MaxLength = 61;
                this.columnCOUNTRY.AllowDBNull = false;
                this.columnCOUNTRY.MaxLength = 61;
                this.columnCITY.AllowDBNull = false;
                this.columnCITY.MaxLength = 35;
                this.columnSTATE.AllowDBNull = false;
                this.columnSTATE.MaxLength = 29;
                this.columnZIP.AllowDBNull = false;
                this.columnZIP.MaxLength = 11;
                this.columnPHONE1.AllowDBNull = false;
                this.columnPHONE1.MaxLength = 21;
                this.columnPHONE2.AllowDBNull = false;
                this.columnPHONE2.MaxLength = 21;
                this.columnPHONE3.AllowDBNull = false;
                this.columnPHONE3.MaxLength = 21;
                this.columnFAX.AllowDBNull = false;
                this.columnFAX.MaxLength = 21;
                this.columnPRBTADCD.AllowDBNull = false;
                this.columnPRBTADCD.MaxLength = 15;
                this.columnPRSTADCD.AllowDBNull = false;
                this.columnPRSTADCD.MaxLength = 15;
                this.columnSTADDRCD.AllowDBNull = false;
                this.columnSTADDRCD.MaxLength = 15;
                this.columnSLPRSNID.AllowDBNull = false;
                this.columnSLPRSNID.MaxLength = 15;
                this.columnCHEKBKID.AllowDBNull = false;
                this.columnCHEKBKID.MaxLength = 15;
                this.columnPYMTRMID.AllowDBNull = false;
                this.columnPYMTRMID.MaxLength = 21;
                this.columnCRLMTTYP.AllowDBNull = false;
                this.columnCRLMTAMT.AllowDBNull = false;
                this.columnCRLMTPER.AllowDBNull = false;
                this.columnCRLMTPAM.AllowDBNull = false;
                this.columnCURNCYID.AllowDBNull = false;
                this.columnCURNCYID.MaxLength = 15;
                this.columnRATETPID.AllowDBNull = false;
                this.columnRATETPID.MaxLength = 15;
                this.columnCUSTDISC.AllowDBNull = false;
                this.columnPRCLEVEL.AllowDBNull = false;
                this.columnPRCLEVEL.MaxLength = 11;
                this.columnMINPYTYP.AllowDBNull = false;
                this.columnMINPYDLR.AllowDBNull = false;
                this.columnMINPYPCT.AllowDBNull = false;
                this.columnFNCHATYP.AllowDBNull = false;
                this.columnFNCHPCNT.AllowDBNull = false;
                this.columnFINCHDLR.AllowDBNull = false;
                this.columnMXWOFTYP.AllowDBNull = false;
                this.columnMXWROFAM.AllowDBNull = false;
                this.columnCOMMENT1.AllowDBNull = false;
                this.columnCOMMENT1.MaxLength = 31;
                this.columnCOMMENT2.AllowDBNull = false;
                this.columnCOMMENT2.MaxLength = 31;
                this.columnUSERDEF1.AllowDBNull = false;
                this.columnUSERDEF1.MaxLength = 21;
                this.columnUSERDEF2.AllowDBNull = false;
                this.columnUSERDEF2.MaxLength = 21;
                this.columnTAXEXMT1.AllowDBNull = false;
                this.columnTAXEXMT1.MaxLength = 25;
                this.columnTAXEXMT2.AllowDBNull = false;
                this.columnTAXEXMT2.MaxLength = 25;
                this.columnTXRGNNUM.AllowDBNull = false;
                this.columnTXRGNNUM.MaxLength = 25;
                this.columnBALNCTYP.AllowDBNull = false;
                this.columnSTMTCYCL.AllowDBNull = false;
                this.columnBANKNAME.AllowDBNull = false;
                this.columnBANKNAME.MaxLength = 31;
                this.columnBNKBRNCH.AllowDBNull = false;
                this.columnBNKBRNCH.MaxLength = 21;
                this.columnSALSTERR.AllowDBNull = false;
                this.columnSALSTERR.MaxLength = 15;
                this.columnDEFCACTY.AllowDBNull = false;
                this.columnRMCSHACC.AllowDBNull = false;
                this.columnRMARACC.AllowDBNull = false;
                this.columnRMSLSACC.AllowDBNull = false;
                this.columnRMIVACC.AllowDBNull = false;
                this.columnRMCOSACC.AllowDBNull = false;
                this.columnRMTAKACC.AllowDBNull = false;
                this.columnRMAVACC.AllowDBNull = false;
                this.columnRMFCGACC.AllowDBNull = false;
                this.columnRMWRACC.AllowDBNull = false;
                this.columnRMSORACC.AllowDBNull = false;
                this.columnFRSTINDT.AllowDBNull = false;
                this.columnINACTIVE.AllowDBNull = false;
                this.columnHOLD.AllowDBNull = false;
                this.columnCRCARDID.AllowDBNull = false;
                this.columnCRCARDID.MaxLength = 15;
                this.columnCRCRDNUM.AllowDBNull = false;
                this.columnCRCRDNUM.MaxLength = 21;
                this.columnCCRDXPDT.AllowDBNull = false;
                this.columnKPDSTHST.AllowDBNull = false;
                this.columnKPCALHST.AllowDBNull = false;
                this.columnKPERHIST.AllowDBNull = false;
                this.columnKPTRXHST.AllowDBNull = false;
                this.columnNOTEINDX.AllowDBNull = false;
                this.columnCREATDDT.AllowDBNull = false;
                this.columnMODIFDT.AllowDBNull = false;
                this.columnRevalue_Customer.AllowDBNull = false;
                this.columnPost_Results_To.AllowDBNull = false;
                this.columnFINCHID.AllowDBNull = false;
                this.columnFINCHID.MaxLength = 15;
                this.columnGOVCRPID.AllowDBNull = false;
                this.columnGOVCRPID.MaxLength = 31;
                this.columnGOVINDID.AllowDBNull = false;
                this.columnGOVINDID.MaxLength = 31;
                this.columnDISGRPER.AllowDBNull = false;
                this.columnDUEGRPER.AllowDBNull = false;
                this.columnDOCFMTID.AllowDBNull = false;
                this.columnDOCFMTID.MaxLength = 15;
                this.columnSend_Email_Statements.AllowDBNull = false;
                this.columnUSERLANG.AllowDBNull = false;
                this.columnGPSFOINTEGRATIONID.AllowDBNull = false;
                this.columnGPSFOINTEGRATIONID.MaxLength = 31;
                this.columnINTEGRATIONSOURCE.AllowDBNull = false;
                this.columnINTEGRATIONID.AllowDBNull = false;
                this.columnINTEGRATIONID.MaxLength = 31;
                this.columnORDERFULFILLDEFAULT.AllowDBNull = false;
                this.columnCUSTPRIORITY.AllowDBNull = false;
                this.columnCCode.AllowDBNull = false;
                this.columnCCode.MaxLength = 7;
                this.columnDECLID.AllowDBNull = false;
                this.columnDECLID.MaxLength = 15;
                this.columnRMOvrpymtWrtoffAcctIdx.AllowDBNull = false;
                this.columnSHIPCOMPLETE.AllowDBNull = false;
                this.columnCBVAT.AllowDBNull = false;
                this.columnINCLUDEINDP.AllowDBNull = false;
                this.columnDEX_ROW_TS.AllowDBNull = false;
                this.columnDEX_ROW_ID.AutoIncrement = true;
                this.columnDEX_ROW_ID.AutoIncrementSeed = -1;
                this.columnDEX_ROW_ID.AutoIncrementStep = -1;
                this.columnDEX_ROW_ID.AllowDBNull = false;
                this.columnDEX_ROW_ID.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101Row NewRM00101Row() {
                return ((RM00101Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RM00101Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RM00101Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RM00101RowChanged != null)) {
                    this.RM00101RowChanged(this, new RM00101RowChangeEvent(((RM00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RM00101RowChanging != null)) {
                    this.RM00101RowChanging(this, new RM00101RowChangeEvent(((RM00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RM00101RowDeleted != null)) {
                    this.RM00101RowDeleted(this, new RM00101RowChangeEvent(((RM00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RM00101RowDeleting != null)) {
                    this.RM00101RowDeleting(this, new RM00101RowChangeEvent(((RM00101Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRM00101Row(RM00101Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SISCDataSet ds = new SISCDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RM00101DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EXT00101Row : global::System.Data.DataRow {
            
            private EXT00101DataTable tableEXT00101;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXT00101Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXT00101 = ((EXT00101DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PT_Window_ID {
                get {
                    return ((string)(this[this.tableEXT00101.PT_Window_IDColumn]));
                }
                set {
                    this[this.tableEXT00101.PT_Window_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PT_UD_Key {
                get {
                    return ((string)(this[this.tableEXT00101.PT_UD_KeyColumn]));
                }
                set {
                    this[this.tableEXT00101.PT_UD_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PT_UD_Number {
                get {
                    return ((short)(this[this.tableEXT00101.PT_UD_NumberColumn]));
                }
                set {
                    this[this.tableEXT00101.PT_UD_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STRGA255 {
                get {
                    return ((string)(this[this.tableEXT00101.STRGA255Column]));
                }
                set {
                    this[this.tableEXT00101.STRGA255Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEX_ROW_ID {
                get {
                    return ((int)(this[this.tableEXT00101.DEX_ROW_IDColumn]));
                }
                set {
                    this[this.tableEXT00101.DEX_ROW_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EXT00102Row : global::System.Data.DataRow {
            
            private EXT00102DataTable tableEXT00102;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXT00102Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXT00102 = ((EXT00102DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PT_Window_ID {
                get {
                    return ((string)(this[this.tableEXT00102.PT_Window_IDColumn]));
                }
                set {
                    this[this.tableEXT00102.PT_Window_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PT_UD_Key {
                get {
                    return ((string)(this[this.tableEXT00102.PT_UD_KeyColumn]));
                }
                set {
                    this[this.tableEXT00102.PT_UD_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PT_UD_Number {
                get {
                    return ((short)(this[this.tableEXT00102.PT_UD_NumberColumn]));
                }
                set {
                    this[this.tableEXT00102.PT_UD_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DATE1 {
                get {
                    return ((global::System.DateTime)(this[this.tableEXT00102.DATE1Column]));
                }
                set {
                    this[this.tableEXT00102.DATE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEX_ROW_ID {
                get {
                    return ((int)(this[this.tableEXT00102.DEX_ROW_IDColumn]));
                }
                set {
                    this[this.tableEXT00102.DEX_ROW_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class EXT00103Row : global::System.Data.DataRow {
            
            private EXT00103DataTable tableEXT00103;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal EXT00103Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXT00103 = ((EXT00103DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PT_Window_ID {
                get {
                    return ((string)(this[this.tableEXT00103.PT_Window_IDColumn]));
                }
                set {
                    this[this.tableEXT00103.PT_Window_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PT_UD_Key {
                get {
                    return ((string)(this[this.tableEXT00103.PT_UD_KeyColumn]));
                }
                set {
                    this[this.tableEXT00103.PT_UD_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short PT_UD_Number {
                get {
                    return ((short)(this[this.tableEXT00103.PT_UD_NumberColumn]));
                }
                set {
                    this[this.tableEXT00103.PT_UD_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TOTAL {
                get {
                    return ((decimal)(this[this.tableEXT00103.TOTALColumn]));
                }
                set {
                    this[this.tableEXT00103.TOTALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEX_ROW_ID {
                get {
                    return ((int)(this[this.tableEXT00103.DEX_ROW_IDColumn]));
                }
                set {
                    this[this.tableEXT00103.DEX_ROW_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RM00101Row : global::System.Data.DataRow {
            
            private RM00101DataTable tableRM00101;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RM00101Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRM00101 = ((RM00101DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTNMBR {
                get {
                    return ((string)(this[this.tableRM00101.CUSTNMBRColumn]));
                }
                set {
                    this[this.tableRM00101.CUSTNMBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTNAME {
                get {
                    return ((string)(this[this.tableRM00101.CUSTNAMEColumn]));
                }
                set {
                    this[this.tableRM00101.CUSTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUSTCLAS {
                get {
                    return ((string)(this[this.tableRM00101.CUSTCLASColumn]));
                }
                set {
                    this[this.tableRM00101.CUSTCLASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CPRCSTNM {
                get {
                    return ((string)(this[this.tableRM00101.CPRCSTNMColumn]));
                }
                set {
                    this[this.tableRM00101.CPRCSTNMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNTCPRSN {
                get {
                    return ((string)(this[this.tableRM00101.CNTCPRSNColumn]));
                }
                set {
                    this[this.tableRM00101.CNTCPRSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STMTNAME {
                get {
                    return ((string)(this[this.tableRM00101.STMTNAMEColumn]));
                }
                set {
                    this[this.tableRM00101.STMTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHRTNAME {
                get {
                    return ((string)(this[this.tableRM00101.SHRTNAMEColumn]));
                }
                set {
                    this[this.tableRM00101.SHRTNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADRSCODE {
                get {
                    return ((string)(this[this.tableRM00101.ADRSCODEColumn]));
                }
                set {
                    this[this.tableRM00101.ADRSCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPSZONE {
                get {
                    return ((string)(this[this.tableRM00101.UPSZONEColumn]));
                }
                set {
                    this[this.tableRM00101.UPSZONEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPMTHD {
                get {
                    return ((string)(this[this.tableRM00101.SHIPMTHDColumn]));
                }
                set {
                    this[this.tableRM00101.SHIPMTHDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXSCHID {
                get {
                    return ((string)(this[this.tableRM00101.TAXSCHIDColumn]));
                }
                set {
                    this[this.tableRM00101.TAXSCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS1 {
                get {
                    return ((string)(this[this.tableRM00101.ADDRESS1Column]));
                }
                set {
                    this[this.tableRM00101.ADDRESS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS2 {
                get {
                    return ((string)(this[this.tableRM00101.ADDRESS2Column]));
                }
                set {
                    this[this.tableRM00101.ADDRESS2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ADDRESS3 {
                get {
                    return ((string)(this[this.tableRM00101.ADDRESS3Column]));
                }
                set {
                    this[this.tableRM00101.ADDRESS3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COUNTRY {
                get {
                    return ((string)(this[this.tableRM00101.COUNTRYColumn]));
                }
                set {
                    this[this.tableRM00101.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CITY {
                get {
                    return ((string)(this[this.tableRM00101.CITYColumn]));
                }
                set {
                    this[this.tableRM00101.CITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATE {
                get {
                    return ((string)(this[this.tableRM00101.STATEColumn]));
                }
                set {
                    this[this.tableRM00101.STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZIP {
                get {
                    return ((string)(this[this.tableRM00101.ZIPColumn]));
                }
                set {
                    this[this.tableRM00101.ZIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHONE1 {
                get {
                    return ((string)(this[this.tableRM00101.PHONE1Column]));
                }
                set {
                    this[this.tableRM00101.PHONE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHONE2 {
                get {
                    return ((string)(this[this.tableRM00101.PHONE2Column]));
                }
                set {
                    this[this.tableRM00101.PHONE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PHONE3 {
                get {
                    return ((string)(this[this.tableRM00101.PHONE3Column]));
                }
                set {
                    this[this.tableRM00101.PHONE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FAX {
                get {
                    return ((string)(this[this.tableRM00101.FAXColumn]));
                }
                set {
                    this[this.tableRM00101.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRBTADCD {
                get {
                    return ((string)(this[this.tableRM00101.PRBTADCDColumn]));
                }
                set {
                    this[this.tableRM00101.PRBTADCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRSTADCD {
                get {
                    return ((string)(this[this.tableRM00101.PRSTADCDColumn]));
                }
                set {
                    this[this.tableRM00101.PRSTADCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STADDRCD {
                get {
                    return ((string)(this[this.tableRM00101.STADDRCDColumn]));
                }
                set {
                    this[this.tableRM00101.STADDRCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SLPRSNID {
                get {
                    return ((string)(this[this.tableRM00101.SLPRSNIDColumn]));
                }
                set {
                    this[this.tableRM00101.SLPRSNIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CHEKBKID {
                get {
                    return ((string)(this[this.tableRM00101.CHEKBKIDColumn]));
                }
                set {
                    this[this.tableRM00101.CHEKBKIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PYMTRMID {
                get {
                    return ((string)(this[this.tableRM00101.PYMTRMIDColumn]));
                }
                set {
                    this[this.tableRM00101.PYMTRMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CRLMTTYP {
                get {
                    return ((short)(this[this.tableRM00101.CRLMTTYPColumn]));
                }
                set {
                    this[this.tableRM00101.CRLMTTYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CRLMTAMT {
                get {
                    return ((decimal)(this[this.tableRM00101.CRLMTAMTColumn]));
                }
                set {
                    this[this.tableRM00101.CRLMTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CRLMTPER {
                get {
                    return ((short)(this[this.tableRM00101.CRLMTPERColumn]));
                }
                set {
                    this[this.tableRM00101.CRLMTPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CRLMTPAM {
                get {
                    return ((decimal)(this[this.tableRM00101.CRLMTPAMColumn]));
                }
                set {
                    this[this.tableRM00101.CRLMTPAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CURNCYID {
                get {
                    return ((string)(this[this.tableRM00101.CURNCYIDColumn]));
                }
                set {
                    this[this.tableRM00101.CURNCYIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RATETPID {
                get {
                    return ((string)(this[this.tableRM00101.RATETPIDColumn]));
                }
                set {
                    this[this.tableRM00101.RATETPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CUSTDISC {
                get {
                    return ((short)(this[this.tableRM00101.CUSTDISCColumn]));
                }
                set {
                    this[this.tableRM00101.CUSTDISCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PRCLEVEL {
                get {
                    return ((string)(this[this.tableRM00101.PRCLEVELColumn]));
                }
                set {
                    this[this.tableRM00101.PRCLEVELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MINPYTYP {
                get {
                    return ((short)(this[this.tableRM00101.MINPYTYPColumn]));
                }
                set {
                    this[this.tableRM00101.MINPYTYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MINPYDLR {
                get {
                    return ((decimal)(this[this.tableRM00101.MINPYDLRColumn]));
                }
                set {
                    this[this.tableRM00101.MINPYDLRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MINPYPCT {
                get {
                    return ((short)(this[this.tableRM00101.MINPYPCTColumn]));
                }
                set {
                    this[this.tableRM00101.MINPYPCTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FNCHATYP {
                get {
                    return ((short)(this[this.tableRM00101.FNCHATYPColumn]));
                }
                set {
                    this[this.tableRM00101.FNCHATYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short FNCHPCNT {
                get {
                    return ((short)(this[this.tableRM00101.FNCHPCNTColumn]));
                }
                set {
                    this[this.tableRM00101.FNCHPCNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FINCHDLR {
                get {
                    return ((decimal)(this[this.tableRM00101.FINCHDLRColumn]));
                }
                set {
                    this[this.tableRM00101.FINCHDLRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MXWOFTYP {
                get {
                    return ((short)(this[this.tableRM00101.MXWOFTYPColumn]));
                }
                set {
                    this[this.tableRM00101.MXWOFTYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MXWROFAM {
                get {
                    return ((decimal)(this[this.tableRM00101.MXWROFAMColumn]));
                }
                set {
                    this[this.tableRM00101.MXWROFAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENT1 {
                get {
                    return ((string)(this[this.tableRM00101.COMMENT1Column]));
                }
                set {
                    this[this.tableRM00101.COMMENT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMENT2 {
                get {
                    return ((string)(this[this.tableRM00101.COMMENT2Column]));
                }
                set {
                    this[this.tableRM00101.COMMENT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERDEF1 {
                get {
                    return ((string)(this[this.tableRM00101.USERDEF1Column]));
                }
                set {
                    this[this.tableRM00101.USERDEF1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERDEF2 {
                get {
                    return ((string)(this[this.tableRM00101.USERDEF2Column]));
                }
                set {
                    this[this.tableRM00101.USERDEF2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXEXMT1 {
                get {
                    return ((string)(this[this.tableRM00101.TAXEXMT1Column]));
                }
                set {
                    this[this.tableRM00101.TAXEXMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAXEXMT2 {
                get {
                    return ((string)(this[this.tableRM00101.TAXEXMT2Column]));
                }
                set {
                    this[this.tableRM00101.TAXEXMT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TXRGNNUM {
                get {
                    return ((string)(this[this.tableRM00101.TXRGNNUMColumn]));
                }
                set {
                    this[this.tableRM00101.TXRGNNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short BALNCTYP {
                get {
                    return ((short)(this[this.tableRM00101.BALNCTYPColumn]));
                }
                set {
                    this[this.tableRM00101.BALNCTYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short STMTCYCL {
                get {
                    return ((short)(this[this.tableRM00101.STMTCYCLColumn]));
                }
                set {
                    this[this.tableRM00101.STMTCYCLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANKNAME {
                get {
                    return ((string)(this[this.tableRM00101.BANKNAMEColumn]));
                }
                set {
                    this[this.tableRM00101.BANKNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BNKBRNCH {
                get {
                    return ((string)(this[this.tableRM00101.BNKBRNCHColumn]));
                }
                set {
                    this[this.tableRM00101.BNKBRNCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SALSTERR {
                get {
                    return ((string)(this[this.tableRM00101.SALSTERRColumn]));
                }
                set {
                    this[this.tableRM00101.SALSTERRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DEFCACTY {
                get {
                    return ((short)(this[this.tableRM00101.DEFCACTYColumn]));
                }
                set {
                    this[this.tableRM00101.DEFCACTYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMCSHACC {
                get {
                    return ((int)(this[this.tableRM00101.RMCSHACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMCSHACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMARACC {
                get {
                    return ((int)(this[this.tableRM00101.RMARACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMARACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMSLSACC {
                get {
                    return ((int)(this[this.tableRM00101.RMSLSACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMSLSACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMIVACC {
                get {
                    return ((int)(this[this.tableRM00101.RMIVACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMIVACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMCOSACC {
                get {
                    return ((int)(this[this.tableRM00101.RMCOSACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMCOSACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMTAKACC {
                get {
                    return ((int)(this[this.tableRM00101.RMTAKACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMTAKACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMAVACC {
                get {
                    return ((int)(this[this.tableRM00101.RMAVACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMAVACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMFCGACC {
                get {
                    return ((int)(this[this.tableRM00101.RMFCGACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMFCGACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMWRACC {
                get {
                    return ((int)(this[this.tableRM00101.RMWRACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMWRACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMSORACC {
                get {
                    return ((int)(this[this.tableRM00101.RMSORACCColumn]));
                }
                set {
                    this[this.tableRM00101.RMSORACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FRSTINDT {
                get {
                    return ((global::System.DateTime)(this[this.tableRM00101.FRSTINDTColumn]));
                }
                set {
                    this[this.tableRM00101.FRSTINDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte INACTIVE {
                get {
                    return ((byte)(this[this.tableRM00101.INACTIVEColumn]));
                }
                set {
                    this[this.tableRM00101.INACTIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte HOLD {
                get {
                    return ((byte)(this[this.tableRM00101.HOLDColumn]));
                }
                set {
                    this[this.tableRM00101.HOLDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CRCARDID {
                get {
                    return ((string)(this[this.tableRM00101.CRCARDIDColumn]));
                }
                set {
                    this[this.tableRM00101.CRCARDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CRCRDNUM {
                get {
                    return ((string)(this[this.tableRM00101.CRCRDNUMColumn]));
                }
                set {
                    this[this.tableRM00101.CRCRDNUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CCRDXPDT {
                get {
                    return ((global::System.DateTime)(this[this.tableRM00101.CCRDXPDTColumn]));
                }
                set {
                    this[this.tableRM00101.CCRDXPDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte KPDSTHST {
                get {
                    return ((byte)(this[this.tableRM00101.KPDSTHSTColumn]));
                }
                set {
                    this[this.tableRM00101.KPDSTHSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte KPCALHST {
                get {
                    return ((byte)(this[this.tableRM00101.KPCALHSTColumn]));
                }
                set {
                    this[this.tableRM00101.KPCALHSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte KPERHIST {
                get {
                    return ((byte)(this[this.tableRM00101.KPERHISTColumn]));
                }
                set {
                    this[this.tableRM00101.KPERHISTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte KPTRXHST {
                get {
                    return ((byte)(this[this.tableRM00101.KPTRXHSTColumn]));
                }
                set {
                    this[this.tableRM00101.KPTRXHSTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NOTEINDX {
                get {
                    return ((decimal)(this[this.tableRM00101.NOTEINDXColumn]));
                }
                set {
                    this[this.tableRM00101.NOTEINDXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATDDT {
                get {
                    return ((global::System.DateTime)(this[this.tableRM00101.CREATDDTColumn]));
                }
                set {
                    this[this.tableRM00101.CREATDDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MODIFDT {
                get {
                    return ((global::System.DateTime)(this[this.tableRM00101.MODIFDTColumn]));
                }
                set {
                    this[this.tableRM00101.MODIFDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Revalue_Customer {
                get {
                    return ((byte)(this[this.tableRM00101.Revalue_CustomerColumn]));
                }
                set {
                    this[this.tableRM00101.Revalue_CustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short Post_Results_To {
                get {
                    return ((short)(this[this.tableRM00101.Post_Results_ToColumn]));
                }
                set {
                    this[this.tableRM00101.Post_Results_ToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FINCHID {
                get {
                    return ((string)(this[this.tableRM00101.FINCHIDColumn]));
                }
                set {
                    this[this.tableRM00101.FINCHIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOVCRPID {
                get {
                    return ((string)(this[this.tableRM00101.GOVCRPIDColumn]));
                }
                set {
                    this[this.tableRM00101.GOVCRPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GOVINDID {
                get {
                    return ((string)(this[this.tableRM00101.GOVINDIDColumn]));
                }
                set {
                    this[this.tableRM00101.GOVINDIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DISGRPER {
                get {
                    return ((short)(this[this.tableRM00101.DISGRPERColumn]));
                }
                set {
                    this[this.tableRM00101.DISGRPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short DUEGRPER {
                get {
                    return ((short)(this[this.tableRM00101.DUEGRPERColumn]));
                }
                set {
                    this[this.tableRM00101.DUEGRPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DOCFMTID {
                get {
                    return ((string)(this[this.tableRM00101.DOCFMTIDColumn]));
                }
                set {
                    this[this.tableRM00101.DOCFMTIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Send_Email_Statements {
                get {
                    return ((byte)(this[this.tableRM00101.Send_Email_StatementsColumn]));
                }
                set {
                    this[this.tableRM00101.Send_Email_StatementsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short USERLANG {
                get {
                    return ((short)(this[this.tableRM00101.USERLANGColumn]));
                }
                set {
                    this[this.tableRM00101.USERLANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GPSFOINTEGRATIONID {
                get {
                    return ((string)(this[this.tableRM00101.GPSFOINTEGRATIONIDColumn]));
                }
                set {
                    this[this.tableRM00101.GPSFOINTEGRATIONIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short INTEGRATIONSOURCE {
                get {
                    return ((short)(this[this.tableRM00101.INTEGRATIONSOURCEColumn]));
                }
                set {
                    this[this.tableRM00101.INTEGRATIONSOURCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INTEGRATIONID {
                get {
                    return ((string)(this[this.tableRM00101.INTEGRATIONIDColumn]));
                }
                set {
                    this[this.tableRM00101.INTEGRATIONIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short ORDERFULFILLDEFAULT {
                get {
                    return ((short)(this[this.tableRM00101.ORDERFULFILLDEFAULTColumn]));
                }
                set {
                    this[this.tableRM00101.ORDERFULFILLDEFAULTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short CUSTPRIORITY {
                get {
                    return ((short)(this[this.tableRM00101.CUSTPRIORITYColumn]));
                }
                set {
                    this[this.tableRM00101.CUSTPRIORITYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CCode {
                get {
                    return ((string)(this[this.tableRM00101.CCodeColumn]));
                }
                set {
                    this[this.tableRM00101.CCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DECLID {
                get {
                    return ((string)(this[this.tableRM00101.DECLIDColumn]));
                }
                set {
                    this[this.tableRM00101.DECLIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int RMOvrpymtWrtoffAcctIdx {
                get {
                    return ((int)(this[this.tableRM00101.RMOvrpymtWrtoffAcctIdxColumn]));
                }
                set {
                    this[this.tableRM00101.RMOvrpymtWrtoffAcctIdxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte SHIPCOMPLETE {
                get {
                    return ((byte)(this[this.tableRM00101.SHIPCOMPLETEColumn]));
                }
                set {
                    this[this.tableRM00101.SHIPCOMPLETEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte CBVAT {
                get {
                    return ((byte)(this[this.tableRM00101.CBVATColumn]));
                }
                set {
                    this[this.tableRM00101.CBVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte INCLUDEINDP {
                get {
                    return ((byte)(this[this.tableRM00101.INCLUDEINDPColumn]));
                }
                set {
                    this[this.tableRM00101.INCLUDEINDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DEX_ROW_TS {
                get {
                    return ((global::System.DateTime)(this[this.tableRM00101.DEX_ROW_TSColumn]));
                }
                set {
                    this[this.tableRM00101.DEX_ROW_TSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int DEX_ROW_ID {
                get {
                    return ((int)(this[this.tableRM00101.DEX_ROW_IDColumn]));
                }
                set {
                    this[this.tableRM00101.DEX_ROW_IDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EXT00101RowChangeEvent : global::System.EventArgs {
            
            private EXT00101Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101RowChangeEvent(EXT00101Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00101Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EXT00102RowChangeEvent : global::System.EventArgs {
            
            private EXT00102Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102RowChangeEvent(EXT00102Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00102Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class EXT00103RowChangeEvent : global::System.EventArgs {
            
            private EXT00103Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103RowChangeEvent(EXT00103Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public EXT00103Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RM00101RowChangeEvent : global::System.EventArgs {
            
            private RM00101Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101RowChangeEvent(RM00101Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RM00101Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace StudentInformation.SISCDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXT00101TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EXT00101TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXT00101";
            tableMapping.ColumnMappings.Add("PT_Window_ID", "PT_Window_ID");
            tableMapping.ColumnMappings.Add("PT_UD_Key", "PT_UD_Key");
            tableMapping.ColumnMappings.Add("PT_UD_Number", "PT_UD_Number");
            tableMapping.ColumnMappings.Add("STRGA255", "STRGA255");
            tableMapping.ColumnMappings.Add("DEX_ROW_ID", "DEX_ROW_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[EXT00101] WHERE (([PT_Window_ID] = @Original_PT_Window_ID) AND" +
                " ([PT_UD_Key] = @Original_PT_UD_Key) AND ([PT_UD_Number] = @Original_PT_UD_Numbe" +
                "r) AND ([STRGA255] = @Original_STRGA255) AND ([DEX_ROW_ID] = @Original_DEX_ROW_I" +
                "D))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STRGA255", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STRGA255", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EXT00101] ([PT_Window_ID], [PT_UD_Key], [PT_UD_Number], [STRGA255]) VALUES (@PT_Window_ID, @PT_UD_Key, @PT_UD_Number, @STRGA255);
SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, STRGA255, DEX_ROW_ID FROM EXT00101 WHERE (PT_UD_Key = @PT_UD_Key) AND (PT_UD_Number = @PT_UD_Number) AND (PT_Window_ID = @PT_Window_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STRGA255", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STRGA255", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EXT00101] SET [PT_Window_ID] = @PT_Window_ID, [PT_UD_Key] = @PT_UD_Key, [PT_UD_Number] = @PT_UD_Number, [STRGA255] = @STRGA255 WHERE (([PT_Window_ID] = @Original_PT_Window_ID) AND ([PT_UD_Key] = @Original_PT_UD_Key) AND ([PT_UD_Number] = @Original_PT_UD_Number) AND ([STRGA255] = @Original_STRGA255) AND ([DEX_ROW_ID] = @Original_DEX_ROW_ID));
SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, STRGA255, DEX_ROW_ID FROM EXT00101 WHERE (PT_UD_Key = @PT_UD_Key) AND (PT_UD_Number = @PT_UD_Number) AND (PT_Window_ID = @PT_Window_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STRGA255", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STRGA255", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STRGA255", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STRGA255", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::StudentInformation.Properties.Settings.Default.SISCConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, STRGA255, DEX_ROW_ID FROM dbo.EXT00" +
                "101";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SISCDataSet.EXT00101DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SISCDataSet.EXT00101DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SISCDataSet.EXT00101DataTable dataTable = new SISCDataSet.EXT00101DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet.EXT00101DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EXT00101");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, string Original_STRGA255, int Original_DEX_ROW_ID) {
            if ((Original_PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PT_Window_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PT_Window_ID));
            }
            if ((Original_PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("Original_PT_UD_Key");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PT_UD_Key));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_PT_UD_Number));
            if ((Original_STRGA255 == null)) {
                throw new global::System.ArgumentNullException("Original_STRGA255");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_STRGA255));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, string STRGA255) {
            if ((PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("PT_Window_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PT_Window_ID));
            }
            if ((PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("PT_UD_Key");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PT_UD_Key));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(PT_UD_Number));
            if ((STRGA255 == null)) {
                throw new global::System.ArgumentNullException("STRGA255");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(STRGA255));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, string STRGA255, string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, string Original_STRGA255, int Original_DEX_ROW_ID) {
            if ((PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("PT_Window_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PT_Window_ID));
            }
            if ((PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("PT_UD_Key");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PT_UD_Key));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(PT_UD_Number));
            if ((STRGA255 == null)) {
                throw new global::System.ArgumentNullException("STRGA255");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(STRGA255));
            }
            if ((Original_PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PT_Window_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PT_Window_ID));
            }
            if ((Original_PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("Original_PT_UD_Key");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_PT_UD_Key));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_PT_UD_Number));
            if ((Original_STRGA255 == null)) {
                throw new global::System.ArgumentNullException("Original_STRGA255");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_STRGA255));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string STRGA255, string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, string Original_STRGA255, int Original_DEX_ROW_ID) {
            return this.Update(Original_PT_Window_ID, Original_PT_UD_Key, Original_PT_UD_Number, STRGA255, Original_PT_Window_ID, Original_PT_UD_Key, Original_PT_UD_Number, Original_STRGA255, Original_DEX_ROW_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXT00102TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EXT00102TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXT00102";
            tableMapping.ColumnMappings.Add("PT_Window_ID", "PT_Window_ID");
            tableMapping.ColumnMappings.Add("PT_UD_Key", "PT_UD_Key");
            tableMapping.ColumnMappings.Add("PT_UD_Number", "PT_UD_Number");
            tableMapping.ColumnMappings.Add("DATE1", "DATE1");
            tableMapping.ColumnMappings.Add("DEX_ROW_ID", "DEX_ROW_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[EXT00102] WHERE (([PT_Window_ID] = @Original_PT_Window_ID) AND" +
                " ([PT_UD_Key] = @Original_PT_UD_Key) AND ([PT_UD_Number] = @Original_PT_UD_Numbe" +
                "r) AND ([DATE1] = @Original_DATE1) AND ([DEX_ROW_ID] = @Original_DEX_ROW_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EXT00102] ([PT_Window_ID], [PT_UD_Key], [PT_UD_Number], [DATE1]) VALUES (@PT_Window_ID, @PT_UD_Key, @PT_UD_Number, @DATE1);
SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, DATE1, DEX_ROW_ID FROM EXT00102 WHERE (PT_UD_Key = @PT_UD_Key) AND (PT_UD_Number = @PT_UD_Number) AND (PT_Window_ID = @PT_Window_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EXT00102] SET [PT_Window_ID] = @PT_Window_ID, [PT_UD_Key] = @PT_UD_Key, [PT_UD_Number] = @PT_UD_Number, [DATE1] = @DATE1 WHERE (([PT_Window_ID] = @Original_PT_Window_ID) AND ([PT_UD_Key] = @Original_PT_UD_Key) AND ([PT_UD_Number] = @Original_PT_UD_Number) AND ([DATE1] = @Original_DATE1) AND ([DEX_ROW_ID] = @Original_DEX_ROW_ID));
SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, DATE1, DEX_ROW_ID FROM EXT00102 WHERE (PT_UD_Key = @PT_UD_Key) AND (PT_UD_Number = @PT_UD_Number) AND (PT_Window_ID = @PT_Window_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::StudentInformation.Properties.Settings.Default.SISCConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, DATE1, DEX_ROW_ID FROM dbo.EXT00102" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SISCDataSet.EXT00102DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SISCDataSet.EXT00102DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SISCDataSet.EXT00102DataTable dataTable = new SISCDataSet.EXT00102DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet.EXT00102DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EXT00102");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, System.DateTime Original_DATE1, int Original_DEX_ROW_ID) {
            if ((Original_PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PT_Window_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PT_Window_ID));
            }
            if ((Original_PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("Original_PT_UD_Key");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PT_UD_Key));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_PT_UD_Number));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATE1));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, System.DateTime DATE1) {
            if ((PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("PT_Window_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PT_Window_ID));
            }
            if ((PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("PT_UD_Key");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PT_UD_Key));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(PT_UD_Number));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DATE1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, System.DateTime DATE1, string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, System.DateTime Original_DATE1, int Original_DEX_ROW_ID) {
            if ((PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("PT_Window_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PT_Window_ID));
            }
            if ((PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("PT_UD_Key");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PT_UD_Key));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(PT_UD_Number));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DATE1));
            if ((Original_PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PT_Window_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PT_Window_ID));
            }
            if ((Original_PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("Original_PT_UD_Key");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_PT_UD_Key));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_PT_UD_Number));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_DATE1));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime DATE1, string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, System.DateTime Original_DATE1, int Original_DEX_ROW_ID) {
            return this.Update(Original_PT_Window_ID, Original_PT_UD_Key, Original_PT_UD_Number, DATE1, Original_PT_Window_ID, Original_PT_UD_Key, Original_PT_UD_Number, Original_DATE1, Original_DEX_ROW_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXT00103TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public EXT00103TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXT00103";
            tableMapping.ColumnMappings.Add("PT_Window_ID", "PT_Window_ID");
            tableMapping.ColumnMappings.Add("PT_UD_Key", "PT_UD_Key");
            tableMapping.ColumnMappings.Add("PT_UD_Number", "PT_UD_Number");
            tableMapping.ColumnMappings.Add("TOTAL", "TOTAL");
            tableMapping.ColumnMappings.Add("DEX_ROW_ID", "DEX_ROW_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[EXT00103] WHERE (([PT_Window_ID] = @Original_PT_Window_ID) AND" +
                " ([PT_UD_Key] = @Original_PT_UD_Key) AND ([PT_UD_Number] = @Original_PT_UD_Numbe" +
                "r) AND ([TOTAL] = @Original_TOTAL) AND ([DEX_ROW_ID] = @Original_DEX_ROW_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "TOTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[EXT00103] ([PT_Window_ID], [PT_UD_Key], [PT_UD_Number], [TOTAL]) VALUES (@PT_Window_ID, @PT_UD_Key, @PT_UD_Number, @TOTAL);
SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, TOTAL, DEX_ROW_ID FROM EXT00103 WHERE (PT_UD_Key = @PT_UD_Key) AND (PT_UD_Number = @PT_UD_Number) AND (PT_Window_ID = @PT_Window_ID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "TOTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[EXT00103] SET [PT_Window_ID] = @PT_Window_ID, [PT_UD_Key] = @PT_UD_Key, [PT_UD_Number] = @PT_UD_Number, [TOTAL] = @TOTAL WHERE (([PT_Window_ID] = @Original_PT_Window_ID) AND ([PT_UD_Key] = @Original_PT_UD_Key) AND ([PT_UD_Number] = @Original_PT_UD_Number) AND ([TOTAL] = @Original_TOTAL) AND ([DEX_ROW_ID] = @Original_DEX_ROW_ID));
SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, TOTAL, DEX_ROW_ID FROM EXT00103 WHERE (PT_UD_Key = @PT_UD_Key) AND (PT_UD_Number = @PT_UD_Number) AND (PT_Window_ID = @PT_Window_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "TOTAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_Window_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_Window_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Key", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Key", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PT_UD_Number", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PT_UD_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOTAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "TOTAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::StudentInformation.Properties.Settings.Default.SISCConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT PT_Window_ID, PT_UD_Key, PT_UD_Number, TOTAL, DEX_ROW_ID FROM dbo.EXT00103" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SISCDataSet.EXT00103DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SISCDataSet.EXT00103DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SISCDataSet.EXT00103DataTable dataTable = new SISCDataSet.EXT00103DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet.EXT00103DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EXT00103");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, decimal Original_TOTAL, int Original_DEX_ROW_ID) {
            if ((Original_PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PT_Window_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PT_Window_ID));
            }
            if ((Original_PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("Original_PT_UD_Key");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_PT_UD_Key));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((short)(Original_PT_UD_Number));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_TOTAL));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, decimal TOTAL) {
            if ((PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("PT_Window_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PT_Window_ID));
            }
            if ((PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("PT_UD_Key");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PT_UD_Key));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((short)(PT_UD_Number));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TOTAL));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PT_Window_ID, string PT_UD_Key, short PT_UD_Number, decimal TOTAL, string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, decimal Original_TOTAL, int Original_DEX_ROW_ID) {
            if ((PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("PT_Window_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PT_Window_ID));
            }
            if ((PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("PT_UD_Key");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PT_UD_Key));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((short)(PT_UD_Number));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TOTAL));
            if ((Original_PT_Window_ID == null)) {
                throw new global::System.ArgumentNullException("Original_PT_Window_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_PT_Window_ID));
            }
            if ((Original_PT_UD_Key == null)) {
                throw new global::System.ArgumentNullException("Original_PT_UD_Key");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_PT_UD_Key));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((short)(Original_PT_UD_Number));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_TOTAL));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal TOTAL, string Original_PT_Window_ID, string Original_PT_UD_Key, short Original_PT_UD_Number, decimal Original_TOTAL, int Original_DEX_ROW_ID) {
            return this.Update(Original_PT_Window_ID, Original_PT_UD_Key, Original_PT_UD_Number, TOTAL, Original_PT_Window_ID, Original_PT_UD_Key, Original_PT_UD_Number, Original_TOTAL, Original_DEX_ROW_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RM00101TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RM00101TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RM00101";
            tableMapping.ColumnMappings.Add("CUSTNMBR", "CUSTNMBR");
            tableMapping.ColumnMappings.Add("CUSTNAME", "CUSTNAME");
            tableMapping.ColumnMappings.Add("CUSTCLAS", "CUSTCLAS");
            tableMapping.ColumnMappings.Add("CPRCSTNM", "CPRCSTNM");
            tableMapping.ColumnMappings.Add("CNTCPRSN", "CNTCPRSN");
            tableMapping.ColumnMappings.Add("STMTNAME", "STMTNAME");
            tableMapping.ColumnMappings.Add("SHRTNAME", "SHRTNAME");
            tableMapping.ColumnMappings.Add("ADRSCODE", "ADRSCODE");
            tableMapping.ColumnMappings.Add("UPSZONE", "UPSZONE");
            tableMapping.ColumnMappings.Add("SHIPMTHD", "SHIPMTHD");
            tableMapping.ColumnMappings.Add("TAXSCHID", "TAXSCHID");
            tableMapping.ColumnMappings.Add("ADDRESS1", "ADDRESS1");
            tableMapping.ColumnMappings.Add("ADDRESS2", "ADDRESS2");
            tableMapping.ColumnMappings.Add("ADDRESS3", "ADDRESS3");
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY");
            tableMapping.ColumnMappings.Add("CITY", "CITY");
            tableMapping.ColumnMappings.Add("STATE", "STATE");
            tableMapping.ColumnMappings.Add("ZIP", "ZIP");
            tableMapping.ColumnMappings.Add("PHONE1", "PHONE1");
            tableMapping.ColumnMappings.Add("PHONE2", "PHONE2");
            tableMapping.ColumnMappings.Add("PHONE3", "PHONE3");
            tableMapping.ColumnMappings.Add("FAX", "FAX");
            tableMapping.ColumnMappings.Add("PRBTADCD", "PRBTADCD");
            tableMapping.ColumnMappings.Add("PRSTADCD", "PRSTADCD");
            tableMapping.ColumnMappings.Add("STADDRCD", "STADDRCD");
            tableMapping.ColumnMappings.Add("SLPRSNID", "SLPRSNID");
            tableMapping.ColumnMappings.Add("CHEKBKID", "CHEKBKID");
            tableMapping.ColumnMappings.Add("PYMTRMID", "PYMTRMID");
            tableMapping.ColumnMappings.Add("CRLMTTYP", "CRLMTTYP");
            tableMapping.ColumnMappings.Add("CRLMTAMT", "CRLMTAMT");
            tableMapping.ColumnMappings.Add("CRLMTPER", "CRLMTPER");
            tableMapping.ColumnMappings.Add("CRLMTPAM", "CRLMTPAM");
            tableMapping.ColumnMappings.Add("CURNCYID", "CURNCYID");
            tableMapping.ColumnMappings.Add("RATETPID", "RATETPID");
            tableMapping.ColumnMappings.Add("CUSTDISC", "CUSTDISC");
            tableMapping.ColumnMappings.Add("PRCLEVEL", "PRCLEVEL");
            tableMapping.ColumnMappings.Add("MINPYTYP", "MINPYTYP");
            tableMapping.ColumnMappings.Add("MINPYDLR", "MINPYDLR");
            tableMapping.ColumnMappings.Add("MINPYPCT", "MINPYPCT");
            tableMapping.ColumnMappings.Add("FNCHATYP", "FNCHATYP");
            tableMapping.ColumnMappings.Add("FNCHPCNT", "FNCHPCNT");
            tableMapping.ColumnMappings.Add("FINCHDLR", "FINCHDLR");
            tableMapping.ColumnMappings.Add("MXWOFTYP", "MXWOFTYP");
            tableMapping.ColumnMappings.Add("MXWROFAM", "MXWROFAM");
            tableMapping.ColumnMappings.Add("COMMENT1", "COMMENT1");
            tableMapping.ColumnMappings.Add("COMMENT2", "COMMENT2");
            tableMapping.ColumnMappings.Add("USERDEF1", "USERDEF1");
            tableMapping.ColumnMappings.Add("USERDEF2", "USERDEF2");
            tableMapping.ColumnMappings.Add("TAXEXMT1", "TAXEXMT1");
            tableMapping.ColumnMappings.Add("TAXEXMT2", "TAXEXMT2");
            tableMapping.ColumnMappings.Add("TXRGNNUM", "TXRGNNUM");
            tableMapping.ColumnMappings.Add("BALNCTYP", "BALNCTYP");
            tableMapping.ColumnMappings.Add("STMTCYCL", "STMTCYCL");
            tableMapping.ColumnMappings.Add("BANKNAME", "BANKNAME");
            tableMapping.ColumnMappings.Add("BNKBRNCH", "BNKBRNCH");
            tableMapping.ColumnMappings.Add("SALSTERR", "SALSTERR");
            tableMapping.ColumnMappings.Add("DEFCACTY", "DEFCACTY");
            tableMapping.ColumnMappings.Add("RMCSHACC", "RMCSHACC");
            tableMapping.ColumnMappings.Add("RMARACC", "RMARACC");
            tableMapping.ColumnMappings.Add("RMSLSACC", "RMSLSACC");
            tableMapping.ColumnMappings.Add("RMIVACC", "RMIVACC");
            tableMapping.ColumnMappings.Add("RMCOSACC", "RMCOSACC");
            tableMapping.ColumnMappings.Add("RMTAKACC", "RMTAKACC");
            tableMapping.ColumnMappings.Add("RMAVACC", "RMAVACC");
            tableMapping.ColumnMappings.Add("RMFCGACC", "RMFCGACC");
            tableMapping.ColumnMappings.Add("RMWRACC", "RMWRACC");
            tableMapping.ColumnMappings.Add("RMSORACC", "RMSORACC");
            tableMapping.ColumnMappings.Add("FRSTINDT", "FRSTINDT");
            tableMapping.ColumnMappings.Add("INACTIVE", "INACTIVE");
            tableMapping.ColumnMappings.Add("HOLD", "HOLD");
            tableMapping.ColumnMappings.Add("CRCARDID", "CRCARDID");
            tableMapping.ColumnMappings.Add("CRCRDNUM", "CRCRDNUM");
            tableMapping.ColumnMappings.Add("CCRDXPDT", "CCRDXPDT");
            tableMapping.ColumnMappings.Add("KPDSTHST", "KPDSTHST");
            tableMapping.ColumnMappings.Add("KPCALHST", "KPCALHST");
            tableMapping.ColumnMappings.Add("KPERHIST", "KPERHIST");
            tableMapping.ColumnMappings.Add("KPTRXHST", "KPTRXHST");
            tableMapping.ColumnMappings.Add("NOTEINDX", "NOTEINDX");
            tableMapping.ColumnMappings.Add("CREATDDT", "CREATDDT");
            tableMapping.ColumnMappings.Add("MODIFDT", "MODIFDT");
            tableMapping.ColumnMappings.Add("Revalue_Customer", "Revalue_Customer");
            tableMapping.ColumnMappings.Add("Post_Results_To", "Post_Results_To");
            tableMapping.ColumnMappings.Add("FINCHID", "FINCHID");
            tableMapping.ColumnMappings.Add("GOVCRPID", "GOVCRPID");
            tableMapping.ColumnMappings.Add("GOVINDID", "GOVINDID");
            tableMapping.ColumnMappings.Add("DISGRPER", "DISGRPER");
            tableMapping.ColumnMappings.Add("DUEGRPER", "DUEGRPER");
            tableMapping.ColumnMappings.Add("DOCFMTID", "DOCFMTID");
            tableMapping.ColumnMappings.Add("Send_Email_Statements", "Send_Email_Statements");
            tableMapping.ColumnMappings.Add("USERLANG", "USERLANG");
            tableMapping.ColumnMappings.Add("GPSFOINTEGRATIONID", "GPSFOINTEGRATIONID");
            tableMapping.ColumnMappings.Add("INTEGRATIONSOURCE", "INTEGRATIONSOURCE");
            tableMapping.ColumnMappings.Add("INTEGRATIONID", "INTEGRATIONID");
            tableMapping.ColumnMappings.Add("ORDERFULFILLDEFAULT", "ORDERFULFILLDEFAULT");
            tableMapping.ColumnMappings.Add("CUSTPRIORITY", "CUSTPRIORITY");
            tableMapping.ColumnMappings.Add("CCode", "CCode");
            tableMapping.ColumnMappings.Add("DECLID", "DECLID");
            tableMapping.ColumnMappings.Add("RMOvrpymtWrtoffAcctIdx", "RMOvrpymtWrtoffAcctIdx");
            tableMapping.ColumnMappings.Add("SHIPCOMPLETE", "SHIPCOMPLETE");
            tableMapping.ColumnMappings.Add("CBVAT", "CBVAT");
            tableMapping.ColumnMappings.Add("INCLUDEINDP", "INCLUDEINDP");
            tableMapping.ColumnMappings.Add("DEX_ROW_TS", "DEX_ROW_TS");
            tableMapping.ColumnMappings.Add("DEX_ROW_ID", "DEX_ROW_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[RM00101] WHERE (([CUSTNMBR] = @Original_CUSTNMBR) AND ([CUSTNA" +
                "ME] = @Original_CUSTNAME) AND ([CUSTCLAS] = @Original_CUSTCLAS) AND ([CPRCSTNM] " +
                "= @Original_CPRCSTNM) AND ([CNTCPRSN] = @Original_CNTCPRSN) AND ([STMTNAME] = @O" +
                "riginal_STMTNAME) AND ([SHRTNAME] = @Original_SHRTNAME) AND ([ADRSCODE] = @Origi" +
                "nal_ADRSCODE) AND ([UPSZONE] = @Original_UPSZONE) AND ([SHIPMTHD] = @Original_SH" +
                "IPMTHD) AND ([TAXSCHID] = @Original_TAXSCHID) AND ([ADDRESS1] = @Original_ADDRES" +
                "S1) AND ([ADDRESS2] = @Original_ADDRESS2) AND ([ADDRESS3] = @Original_ADDRESS3) " +
                "AND ([COUNTRY] = @Original_COUNTRY) AND ([CITY] = @Original_CITY) AND ([STATE] =" +
                " @Original_STATE) AND ([ZIP] = @Original_ZIP) AND ([PHONE1] = @Original_PHONE1) " +
                "AND ([PHONE2] = @Original_PHONE2) AND ([PHONE3] = @Original_PHONE3) AND ([FAX] =" +
                " @Original_FAX) AND ([PRBTADCD] = @Original_PRBTADCD) AND ([PRSTADCD] = @Origina" +
                "l_PRSTADCD) AND ([STADDRCD] = @Original_STADDRCD) AND ([SLPRSNID] = @Original_SL" +
                "PRSNID) AND ([CHEKBKID] = @Original_CHEKBKID) AND ([PYMTRMID] = @Original_PYMTRM" +
                "ID) AND ([CRLMTTYP] = @Original_CRLMTTYP) AND ([CRLMTAMT] = @Original_CRLMTAMT) " +
                "AND ([CRLMTPER] = @Original_CRLMTPER) AND ([CRLMTPAM] = @Original_CRLMTPAM) AND " +
                "([CURNCYID] = @Original_CURNCYID) AND ([RATETPID] = @Original_RATETPID) AND ([CU" +
                "STDISC] = @Original_CUSTDISC) AND ([PRCLEVEL] = @Original_PRCLEVEL) AND ([MINPYT" +
                "YP] = @Original_MINPYTYP) AND ([MINPYDLR] = @Original_MINPYDLR) AND ([MINPYPCT] " +
                "= @Original_MINPYPCT) AND ([FNCHATYP] = @Original_FNCHATYP) AND ([FNCHPCNT] = @O" +
                "riginal_FNCHPCNT) AND ([FINCHDLR] = @Original_FINCHDLR) AND ([MXWOFTYP] = @Origi" +
                "nal_MXWOFTYP) AND ([MXWROFAM] = @Original_MXWROFAM) AND ([COMMENT1] = @Original_" +
                "COMMENT1) AND ([COMMENT2] = @Original_COMMENT2) AND ([USERDEF1] = @Original_USER" +
                "DEF1) AND ([USERDEF2] = @Original_USERDEF2) AND ([TAXEXMT1] = @Original_TAXEXMT1" +
                ") AND ([TAXEXMT2] = @Original_TAXEXMT2) AND ([TXRGNNUM] = @Original_TXRGNNUM) AN" +
                "D ([BALNCTYP] = @Original_BALNCTYP) AND ([STMTCYCL] = @Original_STMTCYCL) AND ([" +
                "BANKNAME] = @Original_BANKNAME) AND ([BNKBRNCH] = @Original_BNKBRNCH) AND ([SALS" +
                "TERR] = @Original_SALSTERR) AND ([DEFCACTY] = @Original_DEFCACTY) AND ([RMCSHACC" +
                "] = @Original_RMCSHACC) AND ([RMARACC] = @Original_RMARACC) AND ([RMSLSACC] = @O" +
                "riginal_RMSLSACC) AND ([RMIVACC] = @Original_RMIVACC) AND ([RMCOSACC] = @Origina" +
                "l_RMCOSACC) AND ([RMTAKACC] = @Original_RMTAKACC) AND ([RMAVACC] = @Original_RMA" +
                "VACC) AND ([RMFCGACC] = @Original_RMFCGACC) AND ([RMWRACC] = @Original_RMWRACC) " +
                "AND ([RMSORACC] = @Original_RMSORACC) AND ([FRSTINDT] = @Original_FRSTINDT) AND " +
                "([INACTIVE] = @Original_INACTIVE) AND ([HOLD] = @Original_HOLD) AND ([CRCARDID] " +
                "= @Original_CRCARDID) AND ([CRCRDNUM] = @Original_CRCRDNUM) AND ([CCRDXPDT] = @O" +
                "riginal_CCRDXPDT) AND ([KPDSTHST] = @Original_KPDSTHST) AND ([KPCALHST] = @Origi" +
                "nal_KPCALHST) AND ([KPERHIST] = @Original_KPERHIST) AND ([KPTRXHST] = @Original_" +
                "KPTRXHST) AND ([NOTEINDX] = @Original_NOTEINDX) AND ([CREATDDT] = @Original_CREA" +
                "TDDT) AND ([MODIFDT] = @Original_MODIFDT) AND ([Revalue_Customer] = @Original_Re" +
                "value_Customer) AND ([Post_Results_To] = @Original_Post_Results_To) AND ([FINCHI" +
                "D] = @Original_FINCHID) AND ([GOVCRPID] = @Original_GOVCRPID) AND ([GOVINDID] = " +
                "@Original_GOVINDID) AND ([DISGRPER] = @Original_DISGRPER) AND ([DUEGRPER] = @Ori" +
                "ginal_DUEGRPER) AND ([DOCFMTID] = @Original_DOCFMTID) AND ([Send_Email_Statement" +
                "s] = @Original_Send_Email_Statements) AND ([USERLANG] = @Original_USERLANG) AND " +
                "([GPSFOINTEGRATIONID] = @Original_GPSFOINTEGRATIONID) AND ([INTEGRATIONSOURCE] =" +
                " @Original_INTEGRATIONSOURCE) AND ([INTEGRATIONID] = @Original_INTEGRATIONID) AN" +
                "D ([ORDERFULFILLDEFAULT] = @Original_ORDERFULFILLDEFAULT) AND ([CUSTPRIORITY] = " +
                "@Original_CUSTPRIORITY) AND ([CCode] = @Original_CCode) AND ([DECLID] = @Origina" +
                "l_DECLID) AND ([RMOvrpymtWrtoffAcctIdx] = @Original_RMOvrpymtWrtoffAcctIdx) AND " +
                "([SHIPCOMPLETE] = @Original_SHIPCOMPLETE) AND ([CBVAT] = @Original_CBVAT) AND ([" +
                "INCLUDEINDP] = @Original_INCLUDEINDP) AND ([DEX_ROW_TS] = @Original_DEX_ROW_TS) " +
                "AND ([DEX_ROW_ID] = @Original_DEX_ROW_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTNMBR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNMBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTCLAS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTCLAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPRCSTNM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPRCSTNM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNTCPRSN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNTCPRSN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STMTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHRTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHRTNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADRSCODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPSZONE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPSZONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIPMTHD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPMTHD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXSCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXSCHID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CITY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZIP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PHONE1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PHONE2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PHONE3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRBTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRBTADCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRSTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRSTADCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STADDRCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STADDRCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLPRSNID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLPRSNID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHEKBKID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHEKBKID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PYMTRMID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PYMTRMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTPAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTPAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CURNCYID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CURNCYID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATETPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATETPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTDISC", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTDISC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRCLEVEL", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRCLEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINPYTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINPYDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MINPYDLR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINPYPCT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYPCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FNCHATYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHATYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FNCHPCNT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHPCNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FINCHDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "FINCHDLR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MXWOFTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MXWOFTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MXWROFAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MXWROFAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMENT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMENT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERDEF1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERDEF2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXEXMT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXEXMT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TXRGNNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TXRGNNUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BALNCTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALNCTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STMTCYCL", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTCYCL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BANKNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BNKBRNCH", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BNKBRNCH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALSTERR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSTERR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFCACTY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFCACTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMCSHACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCSHACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMARACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMARACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMSLSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSLSACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMIVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMIVACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMCOSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCOSACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMTAKACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMTAKACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAVACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMFCGACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMFCGACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMWRACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMWRACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMSORACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSORACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FRSTINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRSTINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INACTIVE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INACTIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOLD", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRCARDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCARDID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRCRDNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCRDNUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCRDXPDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCRDXPDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPDSTHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPDSTHST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPCALHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPCALHST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPERHIST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPERHIST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPTRXHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPTRXHST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTEINDX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "NOTEINDX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATDDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATDDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Revalue_Customer", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Revalue_Customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Post_Results_To", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post_Results_To", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FINCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FINCHID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GOVCRPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVCRPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GOVINDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVINDID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DISGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISGRPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DUEGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DUEGRPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOCFMTID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOCFMTID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Send_Email_Statements", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Send_Email_Statements", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERLANG", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERLANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GPSFOINTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GPSFOINTEGRATIONID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INTEGRATIONSOURCE", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONSOURCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDERFULFILLDEFAULT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERFULFILLDEFAULT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTPRIORITY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTPRIORITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DECLID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DECLID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMOvrpymtWrtoffAcctIdx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMOvrpymtWrtoffAcctIdx", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIPCOMPLETE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPCOMPLETE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBVAT", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBVAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INCLUDEINDP", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INCLUDEINDP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_TS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_TS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[RM00101] ([CUSTNMBR], [CUSTNAME], [CUSTCLAS], [CPRCSTNM], [CNT" +
                "CPRSN], [STMTNAME], [SHRTNAME], [ADRSCODE], [UPSZONE], [SHIPMTHD], [TAXSCHID], [" +
                "ADDRESS1], [ADDRESS2], [ADDRESS3], [COUNTRY], [CITY], [STATE], [ZIP], [PHONE1], " +
                "[PHONE2], [PHONE3], [FAX], [PRBTADCD], [PRSTADCD], [STADDRCD], [SLPRSNID], [CHEK" +
                "BKID], [PYMTRMID], [CRLMTTYP], [CRLMTAMT], [CRLMTPER], [CRLMTPAM], [CURNCYID], [" +
                "RATETPID], [CUSTDISC], [PRCLEVEL], [MINPYTYP], [MINPYDLR], [MINPYPCT], [FNCHATYP" +
                "], [FNCHPCNT], [FINCHDLR], [MXWOFTYP], [MXWROFAM], [COMMENT1], [COMMENT2], [USER" +
                "DEF1], [USERDEF2], [TAXEXMT1], [TAXEXMT2], [TXRGNNUM], [BALNCTYP], [STMTCYCL], [" +
                "BANKNAME], [BNKBRNCH], [SALSTERR], [DEFCACTY], [RMCSHACC], [RMARACC], [RMSLSACC]" +
                ", [RMIVACC], [RMCOSACC], [RMTAKACC], [RMAVACC], [RMFCGACC], [RMWRACC], [RMSORACC" +
                "], [FRSTINDT], [INACTIVE], [HOLD], [CRCARDID], [CRCRDNUM], [CCRDXPDT], [KPDSTHST" +
                "], [KPCALHST], [KPERHIST], [KPTRXHST], [NOTEINDX], [CREATDDT], [MODIFDT], [Reval" +
                "ue_Customer], [Post_Results_To], [FINCHID], [GOVCRPID], [GOVINDID], [DISGRPER], " +
                "[DUEGRPER], [DOCFMTID], [Send_Email_Statements], [USERLANG], [GPSFOINTEGRATIONID" +
                "], [INTEGRATIONSOURCE], [INTEGRATIONID], [ORDERFULFILLDEFAULT], [CUSTPRIORITY], " +
                "[CCode], [DECLID], [RMOvrpymtWrtoffAcctIdx], [SHIPCOMPLETE], [CBVAT], [INCLUDEIN" +
                "DP], [DEX_ROW_TS]) VALUES (@CUSTNMBR, @CUSTNAME, @CUSTCLAS, @CPRCSTNM, @CNTCPRSN" +
                ", @STMTNAME, @SHRTNAME, @ADRSCODE, @UPSZONE, @SHIPMTHD, @TAXSCHID, @ADDRESS1, @A" +
                "DDRESS2, @ADDRESS3, @COUNTRY, @CITY, @STATE, @ZIP, @PHONE1, @PHONE2, @PHONE3, @F" +
                "AX, @PRBTADCD, @PRSTADCD, @STADDRCD, @SLPRSNID, @CHEKBKID, @PYMTRMID, @CRLMTTYP," +
                " @CRLMTAMT, @CRLMTPER, @CRLMTPAM, @CURNCYID, @RATETPID, @CUSTDISC, @PRCLEVEL, @M" +
                "INPYTYP, @MINPYDLR, @MINPYPCT, @FNCHATYP, @FNCHPCNT, @FINCHDLR, @MXWOFTYP, @MXWR" +
                "OFAM, @COMMENT1, @COMMENT2, @USERDEF1, @USERDEF2, @TAXEXMT1, @TAXEXMT2, @TXRGNNU" +
                "M, @BALNCTYP, @STMTCYCL, @BANKNAME, @BNKBRNCH, @SALSTERR, @DEFCACTY, @RMCSHACC, " +
                "@RMARACC, @RMSLSACC, @RMIVACC, @RMCOSACC, @RMTAKACC, @RMAVACC, @RMFCGACC, @RMWRA" +
                "CC, @RMSORACC, @FRSTINDT, @INACTIVE, @HOLD, @CRCARDID, @CRCRDNUM, @CCRDXPDT, @KP" +
                "DSTHST, @KPCALHST, @KPERHIST, @KPTRXHST, @NOTEINDX, @CREATDDT, @MODIFDT, @Revalu" +
                "e_Customer, @Post_Results_To, @FINCHID, @GOVCRPID, @GOVINDID, @DISGRPER, @DUEGRP" +
                "ER, @DOCFMTID, @Send_Email_Statements, @USERLANG, @GPSFOINTEGRATIONID, @INTEGRAT" +
                "IONSOURCE, @INTEGRATIONID, @ORDERFULFILLDEFAULT, @CUSTPRIORITY, @CCode, @DECLID," +
                " @RMOvrpymtWrtoffAcctIdx, @SHIPCOMPLETE, @CBVAT, @INCLUDEINDP, @DEX_ROW_TS);\r\nSE" +
                "LECT CUSTNMBR, CUSTNAME, CUSTCLAS, CPRCSTNM, CNTCPRSN, STMTNAME, SHRTNAME, ADRSC" +
                "ODE, UPSZONE, SHIPMTHD, TAXSCHID, ADDRESS1, ADDRESS2, ADDRESS3, COUNTRY, CITY, S" +
                "TATE, ZIP, PHONE1, PHONE2, PHONE3, FAX, PRBTADCD, PRSTADCD, STADDRCD, SLPRSNID, " +
                "CHEKBKID, PYMTRMID, CRLMTTYP, CRLMTAMT, CRLMTPER, CRLMTPAM, CURNCYID, RATETPID, " +
                "CUSTDISC, PRCLEVEL, MINPYTYP, MINPYDLR, MINPYPCT, FNCHATYP, FNCHPCNT, FINCHDLR, " +
                "MXWOFTYP, MXWROFAM, COMMENT1, COMMENT2, USERDEF1, USERDEF2, TAXEXMT1, TAXEXMT2, " +
                "TXRGNNUM, BALNCTYP, STMTCYCL, BANKNAME, BNKBRNCH, SALSTERR, DEFCACTY, RMCSHACC, " +
                "RMARACC, RMSLSACC, RMIVACC, RMCOSACC, RMTAKACC, RMAVACC, RMFCGACC, RMWRACC, RMSO" +
                "RACC, FRSTINDT, INACTIVE, HOLD, CRCARDID, CRCRDNUM, CCRDXPDT, KPDSTHST, KPCALHST" +
                ", KPERHIST, KPTRXHST, NOTEINDX, CREATDDT, MODIFDT, Revalue_Customer, Post_Result" +
                "s_To, FINCHID, GOVCRPID, GOVINDID, DISGRPER, DUEGRPER, DOCFMTID, Send_Email_Stat" +
                "ements, USERLANG, GPSFOINTEGRATIONID, INTEGRATIONSOURCE, INTEGRATIONID, ORDERFUL" +
                "FILLDEFAULT, CUSTPRIORITY, CCode, DECLID, RMOvrpymtWrtoffAcctIdx, SHIPCOMPLETE, " +
                "CBVAT, INCLUDEINDP, DEX_ROW_TS, DEX_ROW_ID FROM RM00101 WHERE (CUSTNMBR = @CUSTN" +
                "MBR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTNMBR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNMBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTCLAS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTCLAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPRCSTNM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPRCSTNM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNTCPRSN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNTCPRSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STMTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHRTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHRTNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADRSCODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPSZONE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPSZONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIPMTHD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPMTHD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXSCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXSCHID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CITY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZIP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRBTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRBTADCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRSTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRSTADCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STADDRCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STADDRCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLPRSNID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLPRSNID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHEKBKID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHEKBKID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PYMTRMID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PYMTRMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTPAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTPAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CURNCYID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CURNCYID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATETPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATETPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTDISC", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTDISC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRCLEVEL", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRCLEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINPYTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINPYDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MINPYDLR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINPYPCT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYPCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNCHATYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHATYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNCHPCNT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHPCNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINCHDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "FINCHDLR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MXWOFTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MXWOFTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MXWROFAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MXWROFAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMENT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMENT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERDEF1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERDEF2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXEXMT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXEXMT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TXRGNNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TXRGNNUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALNCTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALNCTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STMTCYCL", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTCYCL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BNKBRNCH", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BNKBRNCH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALSTERR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSTERR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFCACTY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFCACTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMCSHACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCSHACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMARACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMARACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMSLSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSLSACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMIVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMIVACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMCOSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCOSACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMTAKACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMTAKACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAVACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMFCGACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMFCGACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMWRACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMWRACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMSORACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSORACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FRSTINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRSTINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INACTIVE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INACTIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLD", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRCARDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCARDID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRCRDNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCRDNUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCRDXPDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCRDXPDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPDSTHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPDSTHST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPCALHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPCALHST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPERHIST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPERHIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPTRXHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPTRXHST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTEINDX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "NOTEINDX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATDDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATDDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Revalue_Customer", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Revalue_Customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Post_Results_To", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post_Results_To", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FINCHID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVCRPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVCRPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVINDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVINDID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISGRPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DUEGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DUEGRPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOCFMTID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOCFMTID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Send_Email_Statements", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Send_Email_Statements", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERLANG", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERLANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GPSFOINTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GPSFOINTEGRATIONID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INTEGRATIONSOURCE", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONSOURCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDERFULFILLDEFAULT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERFULFILLDEFAULT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTPRIORITY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTPRIORITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DECLID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DECLID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMOvrpymtWrtoffAcctIdx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMOvrpymtWrtoffAcctIdx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIPCOMPLETE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPCOMPLETE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBVAT", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCLUDEINDP", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INCLUDEINDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEX_ROW_TS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_TS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[RM00101] SET [CUSTNMBR] = @CUSTNMBR, [CUSTNAME] = @CUSTNAME, [CUSTC" +
                "LAS] = @CUSTCLAS, [CPRCSTNM] = @CPRCSTNM, [CNTCPRSN] = @CNTCPRSN, [STMTNAME] = @" +
                "STMTNAME, [SHRTNAME] = @SHRTNAME, [ADRSCODE] = @ADRSCODE, [UPSZONE] = @UPSZONE, " +
                "[SHIPMTHD] = @SHIPMTHD, [TAXSCHID] = @TAXSCHID, [ADDRESS1] = @ADDRESS1, [ADDRESS" +
                "2] = @ADDRESS2, [ADDRESS3] = @ADDRESS3, [COUNTRY] = @COUNTRY, [CITY] = @CITY, [S" +
                "TATE] = @STATE, [ZIP] = @ZIP, [PHONE1] = @PHONE1, [PHONE2] = @PHONE2, [PHONE3] =" +
                " @PHONE3, [FAX] = @FAX, [PRBTADCD] = @PRBTADCD, [PRSTADCD] = @PRSTADCD, [STADDRC" +
                "D] = @STADDRCD, [SLPRSNID] = @SLPRSNID, [CHEKBKID] = @CHEKBKID, [PYMTRMID] = @PY" +
                "MTRMID, [CRLMTTYP] = @CRLMTTYP, [CRLMTAMT] = @CRLMTAMT, [CRLMTPER] = @CRLMTPER, " +
                "[CRLMTPAM] = @CRLMTPAM, [CURNCYID] = @CURNCYID, [RATETPID] = @RATETPID, [CUSTDIS" +
                "C] = @CUSTDISC, [PRCLEVEL] = @PRCLEVEL, [MINPYTYP] = @MINPYTYP, [MINPYDLR] = @MI" +
                "NPYDLR, [MINPYPCT] = @MINPYPCT, [FNCHATYP] = @FNCHATYP, [FNCHPCNT] = @FNCHPCNT, " +
                "[FINCHDLR] = @FINCHDLR, [MXWOFTYP] = @MXWOFTYP, [MXWROFAM] = @MXWROFAM, [COMMENT" +
                "1] = @COMMENT1, [COMMENT2] = @COMMENT2, [USERDEF1] = @USERDEF1, [USERDEF2] = @US" +
                "ERDEF2, [TAXEXMT1] = @TAXEXMT1, [TAXEXMT2] = @TAXEXMT2, [TXRGNNUM] = @TXRGNNUM, " +
                "[BALNCTYP] = @BALNCTYP, [STMTCYCL] = @STMTCYCL, [BANKNAME] = @BANKNAME, [BNKBRNC" +
                "H] = @BNKBRNCH, [SALSTERR] = @SALSTERR, [DEFCACTY] = @DEFCACTY, [RMCSHACC] = @RM" +
                "CSHACC, [RMARACC] = @RMARACC, [RMSLSACC] = @RMSLSACC, [RMIVACC] = @RMIVACC, [RMC" +
                "OSACC] = @RMCOSACC, [RMTAKACC] = @RMTAKACC, [RMAVACC] = @RMAVACC, [RMFCGACC] = @" +
                "RMFCGACC, [RMWRACC] = @RMWRACC, [RMSORACC] = @RMSORACC, [FRSTINDT] = @FRSTINDT, " +
                "[INACTIVE] = @INACTIVE, [HOLD] = @HOLD, [CRCARDID] = @CRCARDID, [CRCRDNUM] = @CR" +
                "CRDNUM, [CCRDXPDT] = @CCRDXPDT, [KPDSTHST] = @KPDSTHST, [KPCALHST] = @KPCALHST, " +
                "[KPERHIST] = @KPERHIST, [KPTRXHST] = @KPTRXHST, [NOTEINDX] = @NOTEINDX, [CREATDD" +
                "T] = @CREATDDT, [MODIFDT] = @MODIFDT, [Revalue_Customer] = @Revalue_Customer, [P" +
                "ost_Results_To] = @Post_Results_To, [FINCHID] = @FINCHID, [GOVCRPID] = @GOVCRPID" +
                ", [GOVINDID] = @GOVINDID, [DISGRPER] = @DISGRPER, [DUEGRPER] = @DUEGRPER, [DOCFM" +
                "TID] = @DOCFMTID, [Send_Email_Statements] = @Send_Email_Statements, [USERLANG] =" +
                " @USERLANG, [GPSFOINTEGRATIONID] = @GPSFOINTEGRATIONID, [INTEGRATIONSOURCE] = @I" +
                "NTEGRATIONSOURCE, [INTEGRATIONID] = @INTEGRATIONID, [ORDERFULFILLDEFAULT] = @ORD" +
                "ERFULFILLDEFAULT, [CUSTPRIORITY] = @CUSTPRIORITY, [CCode] = @CCode, [DECLID] = @" +
                "DECLID, [RMOvrpymtWrtoffAcctIdx] = @RMOvrpymtWrtoffAcctIdx, [SHIPCOMPLETE] = @SH" +
                "IPCOMPLETE, [CBVAT] = @CBVAT, [INCLUDEINDP] = @INCLUDEINDP, [DEX_ROW_TS] = @DEX_" +
                "ROW_TS WHERE (([CUSTNMBR] = @Original_CUSTNMBR) AND ([CUSTNAME] = @Original_CUST" +
                "NAME) AND ([CUSTCLAS] = @Original_CUSTCLAS) AND ([CPRCSTNM] = @Original_CPRCSTNM" +
                ") AND ([CNTCPRSN] = @Original_CNTCPRSN) AND ([STMTNAME] = @Original_STMTNAME) AN" +
                "D ([SHRTNAME] = @Original_SHRTNAME) AND ([ADRSCODE] = @Original_ADRSCODE) AND ([" +
                "UPSZONE] = @Original_UPSZONE) AND ([SHIPMTHD] = @Original_SHIPMTHD) AND ([TAXSCH" +
                "ID] = @Original_TAXSCHID) AND ([ADDRESS1] = @Original_ADDRESS1) AND ([ADDRESS2] " +
                "= @Original_ADDRESS2) AND ([ADDRESS3] = @Original_ADDRESS3) AND ([COUNTRY] = @Or" +
                "iginal_COUNTRY) AND ([CITY] = @Original_CITY) AND ([STATE] = @Original_STATE) AN" +
                "D ([ZIP] = @Original_ZIP) AND ([PHONE1] = @Original_PHONE1) AND ([PHONE2] = @Ori" +
                "ginal_PHONE2) AND ([PHONE3] = @Original_PHONE3) AND ([FAX] = @Original_FAX) AND " +
                "([PRBTADCD] = @Original_PRBTADCD) AND ([PRSTADCD] = @Original_PRSTADCD) AND ([ST" +
                "ADDRCD] = @Original_STADDRCD) AND ([SLPRSNID] = @Original_SLPRSNID) AND ([CHEKBK" +
                "ID] = @Original_CHEKBKID) AND ([PYMTRMID] = @Original_PYMTRMID) AND ([CRLMTTYP] " +
                "= @Original_CRLMTTYP) AND ([CRLMTAMT] = @Original_CRLMTAMT) AND ([CRLMTPER] = @O" +
                "riginal_CRLMTPER) AND ([CRLMTPAM] = @Original_CRLMTPAM) AND ([CURNCYID] = @Origi" +
                "nal_CURNCYID) AND ([RATETPID] = @Original_RATETPID) AND ([CUSTDISC] = @Original_" +
                "CUSTDISC) AND ([PRCLEVEL] = @Original_PRCLEVEL) AND ([MINPYTYP] = @Original_MINP" +
                "YTYP) AND ([MINPYDLR] = @Original_MINPYDLR) AND ([MINPYPCT] = @Original_MINPYPCT" +
                ") AND ([FNCHATYP] = @Original_FNCHATYP) AND ([FNCHPCNT] = @Original_FNCHPCNT) AN" +
                "D ([FINCHDLR] = @Original_FINCHDLR) AND ([MXWOFTYP] = @Original_MXWOFTYP) AND ([" +
                "MXWROFAM] = @Original_MXWROFAM) AND ([COMMENT1] = @Original_COMMENT1) AND ([COMM" +
                "ENT2] = @Original_COMMENT2) AND ([USERDEF1] = @Original_USERDEF1) AND ([USERDEF2" +
                "] = @Original_USERDEF2) AND ([TAXEXMT1] = @Original_TAXEXMT1) AND ([TAXEXMT2] = " +
                "@Original_TAXEXMT2) AND ([TXRGNNUM] = @Original_TXRGNNUM) AND ([BALNCTYP] = @Ori" +
                "ginal_BALNCTYP) AND ([STMTCYCL] = @Original_STMTCYCL) AND ([BANKNAME] = @Origina" +
                "l_BANKNAME) AND ([BNKBRNCH] = @Original_BNKBRNCH) AND ([SALSTERR] = @Original_SA" +
                "LSTERR) AND ([DEFCACTY] = @Original_DEFCACTY) AND ([RMCSHACC] = @Original_RMCSHA" +
                "CC) AND ([RMARACC] = @Original_RMARACC) AND ([RMSLSACC] = @Original_RMSLSACC) AN" +
                "D ([RMIVACC] = @Original_RMIVACC) AND ([RMCOSACC] = @Original_RMCOSACC) AND ([RM" +
                "TAKACC] = @Original_RMTAKACC) AND ([RMAVACC] = @Original_RMAVACC) AND ([RMFCGACC" +
                "] = @Original_RMFCGACC) AND ([RMWRACC] = @Original_RMWRACC) AND ([RMSORACC] = @O" +
                "riginal_RMSORACC) AND ([FRSTINDT] = @Original_FRSTINDT) AND ([INACTIVE] = @Origi" +
                "nal_INACTIVE) AND ([HOLD] = @Original_HOLD) AND ([CRCARDID] = @Original_CRCARDID" +
                ") AND ([CRCRDNUM] = @Original_CRCRDNUM) AND ([CCRDXPDT] = @Original_CCRDXPDT) AN" +
                "D ([KPDSTHST] = @Original_KPDSTHST) AND ([KPCALHST] = @Original_KPCALHST) AND ([" +
                "KPERHIST] = @Original_KPERHIST) AND ([KPTRXHST] = @Original_KPTRXHST) AND ([NOTE" +
                "INDX] = @Original_NOTEINDX) AND ([CREATDDT] = @Original_CREATDDT) AND ([MODIFDT]" +
                " = @Original_MODIFDT) AND ([Revalue_Customer] = @Original_Revalue_Customer) AND " +
                "([Post_Results_To] = @Original_Post_Results_To) AND ([FINCHID] = @Original_FINCH" +
                "ID) AND ([GOVCRPID] = @Original_GOVCRPID) AND ([GOVINDID] = @Original_GOVINDID) " +
                "AND ([DISGRPER] = @Original_DISGRPER) AND ([DUEGRPER] = @Original_DUEGRPER) AND " +
                "([DOCFMTID] = @Original_DOCFMTID) AND ([Send_Email_Statements] = @Original_Send_" +
                "Email_Statements) AND ([USERLANG] = @Original_USERLANG) AND ([GPSFOINTEGRATIONID" +
                "] = @Original_GPSFOINTEGRATIONID) AND ([INTEGRATIONSOURCE] = @Original_INTEGRATI" +
                "ONSOURCE) AND ([INTEGRATIONID] = @Original_INTEGRATIONID) AND ([ORDERFULFILLDEFA" +
                "ULT] = @Original_ORDERFULFILLDEFAULT) AND ([CUSTPRIORITY] = @Original_CUSTPRIORI" +
                "TY) AND ([CCode] = @Original_CCode) AND ([DECLID] = @Original_DECLID) AND ([RMOv" +
                "rpymtWrtoffAcctIdx] = @Original_RMOvrpymtWrtoffAcctIdx) AND ([SHIPCOMPLETE] = @O" +
                "riginal_SHIPCOMPLETE) AND ([CBVAT] = @Original_CBVAT) AND ([INCLUDEINDP] = @Orig" +
                "inal_INCLUDEINDP) AND ([DEX_ROW_TS] = @Original_DEX_ROW_TS) AND ([DEX_ROW_ID] = " +
                "@Original_DEX_ROW_ID));\r\nSELECT CUSTNMBR, CUSTNAME, CUSTCLAS, CPRCSTNM, CNTCPRSN" +
                ", STMTNAME, SHRTNAME, ADRSCODE, UPSZONE, SHIPMTHD, TAXSCHID, ADDRESS1, ADDRESS2," +
                " ADDRESS3, COUNTRY, CITY, STATE, ZIP, PHONE1, PHONE2, PHONE3, FAX, PRBTADCD, PRS" +
                "TADCD, STADDRCD, SLPRSNID, CHEKBKID, PYMTRMID, CRLMTTYP, CRLMTAMT, CRLMTPER, CRL" +
                "MTPAM, CURNCYID, RATETPID, CUSTDISC, PRCLEVEL, MINPYTYP, MINPYDLR, MINPYPCT, FNC" +
                "HATYP, FNCHPCNT, FINCHDLR, MXWOFTYP, MXWROFAM, COMMENT1, COMMENT2, USERDEF1, USE" +
                "RDEF2, TAXEXMT1, TAXEXMT2, TXRGNNUM, BALNCTYP, STMTCYCL, BANKNAME, BNKBRNCH, SAL" +
                "STERR, DEFCACTY, RMCSHACC, RMARACC, RMSLSACC, RMIVACC, RMCOSACC, RMTAKACC, RMAVA" +
                "CC, RMFCGACC, RMWRACC, RMSORACC, FRSTINDT, INACTIVE, HOLD, CRCARDID, CRCRDNUM, C" +
                "CRDXPDT, KPDSTHST, KPCALHST, KPERHIST, KPTRXHST, NOTEINDX, CREATDDT, MODIFDT, Re" +
                "value_Customer, Post_Results_To, FINCHID, GOVCRPID, GOVINDID, DISGRPER, DUEGRPER" +
                ", DOCFMTID, Send_Email_Statements, USERLANG, GPSFOINTEGRATIONID, INTEGRATIONSOUR" +
                "CE, INTEGRATIONID, ORDERFULFILLDEFAULT, CUSTPRIORITY, CCode, DECLID, RMOvrpymtWr" +
                "toffAcctIdx, SHIPCOMPLETE, CBVAT, INCLUDEINDP, DEX_ROW_TS, DEX_ROW_ID FROM RM001" +
                "01 WHERE (CUSTNMBR = @CUSTNMBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTNMBR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNMBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTCLAS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTCLAS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPRCSTNM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPRCSTNM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CNTCPRSN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNTCPRSN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STMTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHRTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHRTNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADRSCODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UPSZONE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPSZONE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIPMTHD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPMTHD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXSCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXSCHID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDRESS3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CITY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ZIP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PHONE3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRBTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRBTADCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRSTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRSTADCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STADDRCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STADDRCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SLPRSNID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLPRSNID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHEKBKID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHEKBKID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PYMTRMID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PYMTRMID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRLMTPAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTPAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CURNCYID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CURNCYID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATETPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATETPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTDISC", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTDISC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PRCLEVEL", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRCLEVEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINPYTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINPYDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MINPYDLR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MINPYPCT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYPCT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNCHATYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHATYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNCHPCNT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHPCNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINCHDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "FINCHDLR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MXWOFTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MXWOFTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MXWROFAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MXWROFAM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMENT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMENT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERDEF1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERDEF2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXEXMT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXEXMT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TXRGNNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TXRGNNUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BALNCTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALNCTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STMTCYCL", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTCYCL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BNKBRNCH", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BNKBRNCH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALSTERR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSTERR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFCACTY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFCACTY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMCSHACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCSHACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMARACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMARACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMSLSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSLSACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMIVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMIVACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMCOSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCOSACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMTAKACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMTAKACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMAVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAVACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMFCGACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMFCGACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMWRACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMWRACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMSORACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSORACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FRSTINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRSTINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INACTIVE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INACTIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLD", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRCARDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCARDID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CRCRDNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCRDNUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCRDXPDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCRDXPDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPDSTHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPDSTHST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPCALHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPCALHST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPERHIST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPERHIST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KPTRXHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPTRXHST", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTEINDX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "NOTEINDX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CREATDDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATDDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MODIFDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Revalue_Customer", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Revalue_Customer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Post_Results_To", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post_Results_To", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FINCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FINCHID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVCRPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVCRPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GOVINDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVINDID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISGRPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DUEGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DUEGRPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DOCFMTID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOCFMTID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Send_Email_Statements", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Send_Email_Statements", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERLANG", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERLANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GPSFOINTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GPSFOINTEGRATIONID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INTEGRATIONSOURCE", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONSOURCE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ORDERFULFILLDEFAULT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERFULFILLDEFAULT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUSTPRIORITY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTPRIORITY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DECLID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DECLID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RMOvrpymtWrtoffAcctIdx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMOvrpymtWrtoffAcctIdx", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SHIPCOMPLETE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPCOMPLETE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CBVAT", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBVAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INCLUDEINDP", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INCLUDEINDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEX_ROW_TS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_TS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTNMBR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNMBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTCLAS", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTCLAS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPRCSTNM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPRCSTNM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CNTCPRSN", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CNTCPRSN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STMTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHRTNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHRTNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADRSCODE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADRSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UPSZONE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UPSZONE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIPMTHD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPMTHD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXSCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXSCHID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDRESS3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDRESS3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CITY", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATE", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ZIP", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ZIP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PHONE1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PHONE2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PHONE3", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PHONE3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRBTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRBTADCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRSTADCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRSTADCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STADDRCD", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STADDRCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SLPRSNID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SLPRSNID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHEKBKID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHEKBKID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PYMTRMID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PYMTRMID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRLMTPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRLMTPAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "CRLMTPAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CURNCYID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CURNCYID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATETPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATETPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTDISC", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTDISC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PRCLEVEL", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PRCLEVEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINPYTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINPYDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MINPYDLR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MINPYPCT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MINPYPCT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FNCHATYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHATYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FNCHPCNT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FNCHPCNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FINCHDLR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "FINCHDLR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MXWOFTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MXWOFTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MXWROFAM", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "MXWROFAM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMENT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMENT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMENT2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERDEF1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERDEF2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERDEF2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXEXMT1", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXEXMT2", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXEXMT2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TXRGNNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TXRGNNUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BALNCTYP", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BALNCTYP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STMTCYCL", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STMTCYCL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BANKNAME", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BNKBRNCH", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BNKBRNCH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALSTERR", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSTERR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFCACTY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFCACTY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMCSHACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCSHACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMARACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMARACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMSLSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSLSACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMIVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMIVACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMCOSACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMCOSACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMTAKACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMTAKACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMAVACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMAVACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMFCGACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMFCGACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMWRACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMWRACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMSORACC", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMSORACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FRSTINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FRSTINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INACTIVE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INACTIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOLD", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRCARDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCARDID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CRCRDNUM", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CRCRDNUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCRDXPDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCRDXPDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPDSTHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPDSTHST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPCALHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPCALHST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPERHIST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPERHIST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KPTRXHST", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KPTRXHST", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTEINDX", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 5, "NOTEINDX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CREATDDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CREATDDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MODIFDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MODIFDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Revalue_Customer", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Revalue_Customer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Post_Results_To", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Post_Results_To", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FINCHID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FINCHID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GOVCRPID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVCRPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GOVINDID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GOVINDID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DISGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DISGRPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DUEGRPER", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DUEGRPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DOCFMTID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DOCFMTID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Send_Email_Statements", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Send_Email_Statements", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_USERLANG", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "USERLANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GPSFOINTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GPSFOINTEGRATIONID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INTEGRATIONSOURCE", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONSOURCE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INTEGRATIONID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INTEGRATIONID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ORDERFULFILLDEFAULT", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ORDERFULFILLDEFAULT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUSTPRIORITY", global::System.Data.SqlDbType.SmallInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUSTPRIORITY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCode", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DECLID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DECLID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RMOvrpymtWrtoffAcctIdx", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RMOvrpymtWrtoffAcctIdx", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SHIPCOMPLETE", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SHIPCOMPLETE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CBVAT", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CBVAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INCLUDEINDP", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INCLUDEINDP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_TS", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_TS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEX_ROW_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEX_ROW_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::StudentInformation.Properties.Settings.Default.SISCConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT CUSTNMBR, CUSTNAME, CUSTCLAS, CPRCSTNM, CNTCPRSN, STMTNAME, SHRTNAME, ADRSCODE, UPSZONE, SHIPMTHD, TAXSCHID, ADDRESS1, ADDRESS2, ADDRESS3, COUNTRY, CITY, STATE, ZIP, PHONE1, PHONE2, PHONE3, FAX, PRBTADCD, PRSTADCD, STADDRCD, SLPRSNID, CHEKBKID, PYMTRMID, CRLMTTYP, CRLMTAMT, CRLMTPER, CRLMTPAM, CURNCYID, RATETPID, CUSTDISC, PRCLEVEL, MINPYTYP, MINPYDLR, MINPYPCT, FNCHATYP, FNCHPCNT, FINCHDLR, MXWOFTYP, MXWROFAM, COMMENT1, COMMENT2, USERDEF1, USERDEF2, TAXEXMT1, TAXEXMT2, TXRGNNUM, BALNCTYP, STMTCYCL, BANKNAME, BNKBRNCH, SALSTERR, DEFCACTY, RMCSHACC, RMARACC, RMSLSACC, RMIVACC, RMCOSACC, RMTAKACC, RMAVACC, RMFCGACC, RMWRACC, RMSORACC, FRSTINDT, INACTIVE, HOLD, CRCARDID, CRCRDNUM, CCRDXPDT, KPDSTHST, KPCALHST, KPERHIST, KPTRXHST, NOTEINDX, CREATDDT, MODIFDT, Revalue_Customer, Post_Results_To, FINCHID, GOVCRPID, GOVINDID, DISGRPER, DUEGRPER, DOCFMTID, Send_Email_Statements, USERLANG, GPSFOINTEGRATIONID, INTEGRATIONSOURCE, INTEGRATIONID, ORDERFULFILLDEFAULT, CUSTPRIORITY, CCode, DECLID, RMOvrpymtWrtoffAcctIdx, SHIPCOMPLETE, CBVAT, INCLUDEINDP, DEX_ROW_TS, DEX_ROW_ID FROM dbo.RM00101";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SISCDataSet.RM00101DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SISCDataSet.RM00101DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SISCDataSet.RM00101DataTable dataTable = new SISCDataSet.RM00101DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet.RM00101DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SISCDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RM00101");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_CUSTNMBR, 
                    string Original_CUSTNAME, 
                    string Original_CUSTCLAS, 
                    string Original_CPRCSTNM, 
                    string Original_CNTCPRSN, 
                    string Original_STMTNAME, 
                    string Original_SHRTNAME, 
                    string Original_ADRSCODE, 
                    string Original_UPSZONE, 
                    string Original_SHIPMTHD, 
                    string Original_TAXSCHID, 
                    string Original_ADDRESS1, 
                    string Original_ADDRESS2, 
                    string Original_ADDRESS3, 
                    string Original_COUNTRY, 
                    string Original_CITY, 
                    string Original_STATE, 
                    string Original_ZIP, 
                    string Original_PHONE1, 
                    string Original_PHONE2, 
                    string Original_PHONE3, 
                    string Original_FAX, 
                    string Original_PRBTADCD, 
                    string Original_PRSTADCD, 
                    string Original_STADDRCD, 
                    string Original_SLPRSNID, 
                    string Original_CHEKBKID, 
                    string Original_PYMTRMID, 
                    short Original_CRLMTTYP, 
                    decimal Original_CRLMTAMT, 
                    short Original_CRLMTPER, 
                    decimal Original_CRLMTPAM, 
                    string Original_CURNCYID, 
                    string Original_RATETPID, 
                    short Original_CUSTDISC, 
                    string Original_PRCLEVEL, 
                    short Original_MINPYTYP, 
                    decimal Original_MINPYDLR, 
                    short Original_MINPYPCT, 
                    short Original_FNCHATYP, 
                    short Original_FNCHPCNT, 
                    decimal Original_FINCHDLR, 
                    short Original_MXWOFTYP, 
                    decimal Original_MXWROFAM, 
                    string Original_COMMENT1, 
                    string Original_COMMENT2, 
                    string Original_USERDEF1, 
                    string Original_USERDEF2, 
                    string Original_TAXEXMT1, 
                    string Original_TAXEXMT2, 
                    string Original_TXRGNNUM, 
                    short Original_BALNCTYP, 
                    short Original_STMTCYCL, 
                    string Original_BANKNAME, 
                    string Original_BNKBRNCH, 
                    string Original_SALSTERR, 
                    short Original_DEFCACTY, 
                    int Original_RMCSHACC, 
                    int Original_RMARACC, 
                    int Original_RMSLSACC, 
                    int Original_RMIVACC, 
                    int Original_RMCOSACC, 
                    int Original_RMTAKACC, 
                    int Original_RMAVACC, 
                    int Original_RMFCGACC, 
                    int Original_RMWRACC, 
                    int Original_RMSORACC, 
                    System.DateTime Original_FRSTINDT, 
                    byte Original_INACTIVE, 
                    byte Original_HOLD, 
                    string Original_CRCARDID, 
                    string Original_CRCRDNUM, 
                    System.DateTime Original_CCRDXPDT, 
                    byte Original_KPDSTHST, 
                    byte Original_KPCALHST, 
                    byte Original_KPERHIST, 
                    byte Original_KPTRXHST, 
                    decimal Original_NOTEINDX, 
                    System.DateTime Original_CREATDDT, 
                    System.DateTime Original_MODIFDT, 
                    byte Original_Revalue_Customer, 
                    short Original_Post_Results_To, 
                    string Original_FINCHID, 
                    string Original_GOVCRPID, 
                    string Original_GOVINDID, 
                    short Original_DISGRPER, 
                    short Original_DUEGRPER, 
                    string Original_DOCFMTID, 
                    byte Original_Send_Email_Statements, 
                    short Original_USERLANG, 
                    string Original_GPSFOINTEGRATIONID, 
                    short Original_INTEGRATIONSOURCE, 
                    string Original_INTEGRATIONID, 
                    short Original_ORDERFULFILLDEFAULT, 
                    short Original_CUSTPRIORITY, 
                    string Original_CCode, 
                    string Original_DECLID, 
                    int Original_RMOvrpymtWrtoffAcctIdx, 
                    byte Original_SHIPCOMPLETE, 
                    byte Original_CBVAT, 
                    byte Original_INCLUDEINDP, 
                    System.DateTime Original_DEX_ROW_TS, 
                    int Original_DEX_ROW_ID) {
            if ((Original_CUSTNMBR == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTNMBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_CUSTNMBR));
            }
            if ((Original_CUSTNAME == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CUSTNAME));
            }
            if ((Original_CUSTCLAS == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTCLAS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CUSTCLAS));
            }
            if ((Original_CPRCSTNM == null)) {
                throw new global::System.ArgumentNullException("Original_CPRCSTNM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CPRCSTNM));
            }
            if ((Original_CNTCPRSN == null)) {
                throw new global::System.ArgumentNullException("Original_CNTCPRSN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_CNTCPRSN));
            }
            if ((Original_STMTNAME == null)) {
                throw new global::System.ArgumentNullException("Original_STMTNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_STMTNAME));
            }
            if ((Original_SHRTNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SHRTNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_SHRTNAME));
            }
            if ((Original_ADRSCODE == null)) {
                throw new global::System.ArgumentNullException("Original_ADRSCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ADRSCODE));
            }
            if ((Original_UPSZONE == null)) {
                throw new global::System.ArgumentNullException("Original_UPSZONE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_UPSZONE));
            }
            if ((Original_SHIPMTHD == null)) {
                throw new global::System.ArgumentNullException("Original_SHIPMTHD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SHIPMTHD));
            }
            if ((Original_TAXSCHID == null)) {
                throw new global::System.ArgumentNullException("Original_TAXSCHID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_TAXSCHID));
            }
            if ((Original_ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_ADDRESS1));
            }
            if ((Original_ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_ADDRESS2));
            }
            if ((Original_ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_ADDRESS3));
            }
            if ((Original_COUNTRY == null)) {
                throw new global::System.ArgumentNullException("Original_COUNTRY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_COUNTRY));
            }
            if ((Original_CITY == null)) {
                throw new global::System.ArgumentNullException("Original_CITY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_CITY));
            }
            if ((Original_STATE == null)) {
                throw new global::System.ArgumentNullException("Original_STATE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_STATE));
            }
            if ((Original_ZIP == null)) {
                throw new global::System.ArgumentNullException("Original_ZIP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_ZIP));
            }
            if ((Original_PHONE1 == null)) {
                throw new global::System.ArgumentNullException("Original_PHONE1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_PHONE1));
            }
            if ((Original_PHONE2 == null)) {
                throw new global::System.ArgumentNullException("Original_PHONE2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_PHONE2));
            }
            if ((Original_PHONE3 == null)) {
                throw new global::System.ArgumentNullException("Original_PHONE3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_PHONE3));
            }
            if ((Original_FAX == null)) {
                throw new global::System.ArgumentNullException("Original_FAX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_FAX));
            }
            if ((Original_PRBTADCD == null)) {
                throw new global::System.ArgumentNullException("Original_PRBTADCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_PRBTADCD));
            }
            if ((Original_PRSTADCD == null)) {
                throw new global::System.ArgumentNullException("Original_PRSTADCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_PRSTADCD));
            }
            if ((Original_STADDRCD == null)) {
                throw new global::System.ArgumentNullException("Original_STADDRCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_STADDRCD));
            }
            if ((Original_SLPRSNID == null)) {
                throw new global::System.ArgumentNullException("Original_SLPRSNID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_SLPRSNID));
            }
            if ((Original_CHEKBKID == null)) {
                throw new global::System.ArgumentNullException("Original_CHEKBKID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_CHEKBKID));
            }
            if ((Original_PYMTRMID == null)) {
                throw new global::System.ArgumentNullException("Original_PYMTRMID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_PYMTRMID));
            }
            this.Adapter.DeleteCommand.Parameters[28].Value = ((short)(Original_CRLMTTYP));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_CRLMTAMT));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((short)(Original_CRLMTPER));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((decimal)(Original_CRLMTPAM));
            if ((Original_CURNCYID == null)) {
                throw new global::System.ArgumentNullException("Original_CURNCYID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_CURNCYID));
            }
            if ((Original_RATETPID == null)) {
                throw new global::System.ArgumentNullException("Original_RATETPID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_RATETPID));
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((short)(Original_CUSTDISC));
            if ((Original_PRCLEVEL == null)) {
                throw new global::System.ArgumentNullException("Original_PRCLEVEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_PRCLEVEL));
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((short)(Original_MINPYTYP));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_MINPYDLR));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((short)(Original_MINPYPCT));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((short)(Original_FNCHATYP));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((short)(Original_FNCHPCNT));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_FINCHDLR));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((short)(Original_MXWOFTYP));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_MXWROFAM));
            if ((Original_COMMENT1 == null)) {
                throw new global::System.ArgumentNullException("Original_COMMENT1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((string)(Original_COMMENT1));
            }
            if ((Original_COMMENT2 == null)) {
                throw new global::System.ArgumentNullException("Original_COMMENT2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((string)(Original_COMMENT2));
            }
            if ((Original_USERDEF1 == null)) {
                throw new global::System.ArgumentNullException("Original_USERDEF1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((string)(Original_USERDEF1));
            }
            if ((Original_USERDEF2 == null)) {
                throw new global::System.ArgumentNullException("Original_USERDEF2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((string)(Original_USERDEF2));
            }
            if ((Original_TAXEXMT1 == null)) {
                throw new global::System.ArgumentNullException("Original_TAXEXMT1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_TAXEXMT1));
            }
            if ((Original_TAXEXMT2 == null)) {
                throw new global::System.ArgumentNullException("Original_TAXEXMT2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_TAXEXMT2));
            }
            if ((Original_TXRGNNUM == null)) {
                throw new global::System.ArgumentNullException("Original_TXRGNNUM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_TXRGNNUM));
            }
            this.Adapter.DeleteCommand.Parameters[51].Value = ((short)(Original_BALNCTYP));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((short)(Original_STMTCYCL));
            if ((Original_BANKNAME == null)) {
                throw new global::System.ArgumentNullException("Original_BANKNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((string)(Original_BANKNAME));
            }
            if ((Original_BNKBRNCH == null)) {
                throw new global::System.ArgumentNullException("Original_BNKBRNCH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((string)(Original_BNKBRNCH));
            }
            if ((Original_SALSTERR == null)) {
                throw new global::System.ArgumentNullException("Original_SALSTERR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((string)(Original_SALSTERR));
            }
            this.Adapter.DeleteCommand.Parameters[56].Value = ((short)(Original_DEFCACTY));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((int)(Original_RMCSHACC));
            this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_RMARACC));
            this.Adapter.DeleteCommand.Parameters[59].Value = ((int)(Original_RMSLSACC));
            this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_RMIVACC));
            this.Adapter.DeleteCommand.Parameters[61].Value = ((int)(Original_RMCOSACC));
            this.Adapter.DeleteCommand.Parameters[62].Value = ((int)(Original_RMTAKACC));
            this.Adapter.DeleteCommand.Parameters[63].Value = ((int)(Original_RMAVACC));
            this.Adapter.DeleteCommand.Parameters[64].Value = ((int)(Original_RMFCGACC));
            this.Adapter.DeleteCommand.Parameters[65].Value = ((int)(Original_RMWRACC));
            this.Adapter.DeleteCommand.Parameters[66].Value = ((int)(Original_RMSORACC));
            this.Adapter.DeleteCommand.Parameters[67].Value = ((System.DateTime)(Original_FRSTINDT));
            this.Adapter.DeleteCommand.Parameters[68].Value = ((byte)(Original_INACTIVE));
            this.Adapter.DeleteCommand.Parameters[69].Value = ((byte)(Original_HOLD));
            if ((Original_CRCARDID == null)) {
                throw new global::System.ArgumentNullException("Original_CRCARDID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_CRCARDID));
            }
            if ((Original_CRCRDNUM == null)) {
                throw new global::System.ArgumentNullException("Original_CRCRDNUM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_CRCRDNUM));
            }
            this.Adapter.DeleteCommand.Parameters[72].Value = ((System.DateTime)(Original_CCRDXPDT));
            this.Adapter.DeleteCommand.Parameters[73].Value = ((byte)(Original_KPDSTHST));
            this.Adapter.DeleteCommand.Parameters[74].Value = ((byte)(Original_KPCALHST));
            this.Adapter.DeleteCommand.Parameters[75].Value = ((byte)(Original_KPERHIST));
            this.Adapter.DeleteCommand.Parameters[76].Value = ((byte)(Original_KPTRXHST));
            this.Adapter.DeleteCommand.Parameters[77].Value = ((decimal)(Original_NOTEINDX));
            this.Adapter.DeleteCommand.Parameters[78].Value = ((System.DateTime)(Original_CREATDDT));
            this.Adapter.DeleteCommand.Parameters[79].Value = ((System.DateTime)(Original_MODIFDT));
            this.Adapter.DeleteCommand.Parameters[80].Value = ((byte)(Original_Revalue_Customer));
            this.Adapter.DeleteCommand.Parameters[81].Value = ((short)(Original_Post_Results_To));
            if ((Original_FINCHID == null)) {
                throw new global::System.ArgumentNullException("Original_FINCHID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_FINCHID));
            }
            if ((Original_GOVCRPID == null)) {
                throw new global::System.ArgumentNullException("Original_GOVCRPID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_GOVCRPID));
            }
            if ((Original_GOVINDID == null)) {
                throw new global::System.ArgumentNullException("Original_GOVINDID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((string)(Original_GOVINDID));
            }
            this.Adapter.DeleteCommand.Parameters[85].Value = ((short)(Original_DISGRPER));
            this.Adapter.DeleteCommand.Parameters[86].Value = ((short)(Original_DUEGRPER));
            if ((Original_DOCFMTID == null)) {
                throw new global::System.ArgumentNullException("Original_DOCFMTID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_DOCFMTID));
            }
            this.Adapter.DeleteCommand.Parameters[88].Value = ((byte)(Original_Send_Email_Statements));
            this.Adapter.DeleteCommand.Parameters[89].Value = ((short)(Original_USERLANG));
            if ((Original_GPSFOINTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("Original_GPSFOINTEGRATIONID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((string)(Original_GPSFOINTEGRATIONID));
            }
            this.Adapter.DeleteCommand.Parameters[91].Value = ((short)(Original_INTEGRATIONSOURCE));
            if ((Original_INTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("Original_INTEGRATIONID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((string)(Original_INTEGRATIONID));
            }
            this.Adapter.DeleteCommand.Parameters[93].Value = ((short)(Original_ORDERFULFILLDEFAULT));
            this.Adapter.DeleteCommand.Parameters[94].Value = ((short)(Original_CUSTPRIORITY));
            if ((Original_CCode == null)) {
                throw new global::System.ArgumentNullException("Original_CCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[95].Value = ((string)(Original_CCode));
            }
            if ((Original_DECLID == null)) {
                throw new global::System.ArgumentNullException("Original_DECLID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[96].Value = ((string)(Original_DECLID));
            }
            this.Adapter.DeleteCommand.Parameters[97].Value = ((int)(Original_RMOvrpymtWrtoffAcctIdx));
            this.Adapter.DeleteCommand.Parameters[98].Value = ((byte)(Original_SHIPCOMPLETE));
            this.Adapter.DeleteCommand.Parameters[99].Value = ((byte)(Original_CBVAT));
            this.Adapter.DeleteCommand.Parameters[100].Value = ((byte)(Original_INCLUDEINDP));
            this.Adapter.DeleteCommand.Parameters[101].Value = ((System.DateTime)(Original_DEX_ROW_TS));
            this.Adapter.DeleteCommand.Parameters[102].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string CUSTNMBR, 
                    string CUSTNAME, 
                    string CUSTCLAS, 
                    string CPRCSTNM, 
                    string CNTCPRSN, 
                    string STMTNAME, 
                    string SHRTNAME, 
                    string ADRSCODE, 
                    string UPSZONE, 
                    string SHIPMTHD, 
                    string TAXSCHID, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string ADDRESS3, 
                    string COUNTRY, 
                    string CITY, 
                    string STATE, 
                    string ZIP, 
                    string PHONE1, 
                    string PHONE2, 
                    string PHONE3, 
                    string FAX, 
                    string PRBTADCD, 
                    string PRSTADCD, 
                    string STADDRCD, 
                    string SLPRSNID, 
                    string CHEKBKID, 
                    string PYMTRMID, 
                    short CRLMTTYP, 
                    decimal CRLMTAMT, 
                    short CRLMTPER, 
                    decimal CRLMTPAM, 
                    string CURNCYID, 
                    string RATETPID, 
                    short CUSTDISC, 
                    string PRCLEVEL, 
                    short MINPYTYP, 
                    decimal MINPYDLR, 
                    short MINPYPCT, 
                    short FNCHATYP, 
                    short FNCHPCNT, 
                    decimal FINCHDLR, 
                    short MXWOFTYP, 
                    decimal MXWROFAM, 
                    string COMMENT1, 
                    string COMMENT2, 
                    string USERDEF1, 
                    string USERDEF2, 
                    string TAXEXMT1, 
                    string TAXEXMT2, 
                    string TXRGNNUM, 
                    short BALNCTYP, 
                    short STMTCYCL, 
                    string BANKNAME, 
                    string BNKBRNCH, 
                    string SALSTERR, 
                    short DEFCACTY, 
                    int RMCSHACC, 
                    int RMARACC, 
                    int RMSLSACC, 
                    int RMIVACC, 
                    int RMCOSACC, 
                    int RMTAKACC, 
                    int RMAVACC, 
                    int RMFCGACC, 
                    int RMWRACC, 
                    int RMSORACC, 
                    System.DateTime FRSTINDT, 
                    byte INACTIVE, 
                    byte HOLD, 
                    string CRCARDID, 
                    string CRCRDNUM, 
                    System.DateTime CCRDXPDT, 
                    byte KPDSTHST, 
                    byte KPCALHST, 
                    byte KPERHIST, 
                    byte KPTRXHST, 
                    decimal NOTEINDX, 
                    System.DateTime CREATDDT, 
                    System.DateTime MODIFDT, 
                    byte Revalue_Customer, 
                    short Post_Results_To, 
                    string FINCHID, 
                    string GOVCRPID, 
                    string GOVINDID, 
                    short DISGRPER, 
                    short DUEGRPER, 
                    string DOCFMTID, 
                    byte Send_Email_Statements, 
                    short USERLANG, 
                    string GPSFOINTEGRATIONID, 
                    short INTEGRATIONSOURCE, 
                    string INTEGRATIONID, 
                    short ORDERFULFILLDEFAULT, 
                    short CUSTPRIORITY, 
                    string CCode, 
                    string DECLID, 
                    int RMOvrpymtWrtoffAcctIdx, 
                    byte SHIPCOMPLETE, 
                    byte CBVAT, 
                    byte INCLUDEINDP, 
                    System.DateTime DEX_ROW_TS) {
            if ((CUSTNMBR == null)) {
                throw new global::System.ArgumentNullException("CUSTNMBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CUSTNMBR));
            }
            if ((CUSTNAME == null)) {
                throw new global::System.ArgumentNullException("CUSTNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUSTNAME));
            }
            if ((CUSTCLAS == null)) {
                throw new global::System.ArgumentNullException("CUSTCLAS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CUSTCLAS));
            }
            if ((CPRCSTNM == null)) {
                throw new global::System.ArgumentNullException("CPRCSTNM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(CPRCSTNM));
            }
            if ((CNTCPRSN == null)) {
                throw new global::System.ArgumentNullException("CNTCPRSN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CNTCPRSN));
            }
            if ((STMTNAME == null)) {
                throw new global::System.ArgumentNullException("STMTNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(STMTNAME));
            }
            if ((SHRTNAME == null)) {
                throw new global::System.ArgumentNullException("SHRTNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(SHRTNAME));
            }
            if ((ADRSCODE == null)) {
                throw new global::System.ArgumentNullException("ADRSCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ADRSCODE));
            }
            if ((UPSZONE == null)) {
                throw new global::System.ArgumentNullException("UPSZONE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(UPSZONE));
            }
            if ((SHIPMTHD == null)) {
                throw new global::System.ArgumentNullException("SHIPMTHD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SHIPMTHD));
            }
            if ((TAXSCHID == null)) {
                throw new global::System.ArgumentNullException("TAXSCHID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(TAXSCHID));
            }
            if ((ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(ADDRESS1));
            }
            if ((ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ADDRESS2));
            }
            if ((ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ADDRESS3));
            }
            if ((COUNTRY == null)) {
                throw new global::System.ArgumentNullException("COUNTRY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(COUNTRY));
            }
            if ((CITY == null)) {
                throw new global::System.ArgumentNullException("CITY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CITY));
            }
            if ((STATE == null)) {
                throw new global::System.ArgumentNullException("STATE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(STATE));
            }
            if ((ZIP == null)) {
                throw new global::System.ArgumentNullException("ZIP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ZIP));
            }
            if ((PHONE1 == null)) {
                throw new global::System.ArgumentNullException("PHONE1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(PHONE1));
            }
            if ((PHONE2 == null)) {
                throw new global::System.ArgumentNullException("PHONE2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(PHONE2));
            }
            if ((PHONE3 == null)) {
                throw new global::System.ArgumentNullException("PHONE3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(PHONE3));
            }
            if ((FAX == null)) {
                throw new global::System.ArgumentNullException("FAX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(FAX));
            }
            if ((PRBTADCD == null)) {
                throw new global::System.ArgumentNullException("PRBTADCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(PRBTADCD));
            }
            if ((PRSTADCD == null)) {
                throw new global::System.ArgumentNullException("PRSTADCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(PRSTADCD));
            }
            if ((STADDRCD == null)) {
                throw new global::System.ArgumentNullException("STADDRCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(STADDRCD));
            }
            if ((SLPRSNID == null)) {
                throw new global::System.ArgumentNullException("SLPRSNID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SLPRSNID));
            }
            if ((CHEKBKID == null)) {
                throw new global::System.ArgumentNullException("CHEKBKID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CHEKBKID));
            }
            if ((PYMTRMID == null)) {
                throw new global::System.ArgumentNullException("PYMTRMID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(PYMTRMID));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((short)(CRLMTTYP));
            this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(CRLMTAMT));
            this.Adapter.InsertCommand.Parameters[30].Value = ((short)(CRLMTPER));
            this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(CRLMTPAM));
            if ((CURNCYID == null)) {
                throw new global::System.ArgumentNullException("CURNCYID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = ((string)(CURNCYID));
            }
            if ((RATETPID == null)) {
                throw new global::System.ArgumentNullException("RATETPID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(RATETPID));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((short)(CUSTDISC));
            if ((PRCLEVEL == null)) {
                throw new global::System.ArgumentNullException("PRCLEVEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(PRCLEVEL));
            }
            this.Adapter.InsertCommand.Parameters[36].Value = ((short)(MINPYTYP));
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(MINPYDLR));
            this.Adapter.InsertCommand.Parameters[38].Value = ((short)(MINPYPCT));
            this.Adapter.InsertCommand.Parameters[39].Value = ((short)(FNCHATYP));
            this.Adapter.InsertCommand.Parameters[40].Value = ((short)(FNCHPCNT));
            this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(FINCHDLR));
            this.Adapter.InsertCommand.Parameters[42].Value = ((short)(MXWOFTYP));
            this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(MXWROFAM));
            if ((COMMENT1 == null)) {
                throw new global::System.ArgumentNullException("COMMENT1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(COMMENT1));
            }
            if ((COMMENT2 == null)) {
                throw new global::System.ArgumentNullException("COMMENT2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(COMMENT2));
            }
            if ((USERDEF1 == null)) {
                throw new global::System.ArgumentNullException("USERDEF1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(USERDEF1));
            }
            if ((USERDEF2 == null)) {
                throw new global::System.ArgumentNullException("USERDEF2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(USERDEF2));
            }
            if ((TAXEXMT1 == null)) {
                throw new global::System.ArgumentNullException("TAXEXMT1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = ((string)(TAXEXMT1));
            }
            if ((TAXEXMT2 == null)) {
                throw new global::System.ArgumentNullException("TAXEXMT2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = ((string)(TAXEXMT2));
            }
            if ((TXRGNNUM == null)) {
                throw new global::System.ArgumentNullException("TXRGNNUM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(TXRGNNUM));
            }
            this.Adapter.InsertCommand.Parameters[51].Value = ((short)(BALNCTYP));
            this.Adapter.InsertCommand.Parameters[52].Value = ((short)(STMTCYCL));
            if ((BANKNAME == null)) {
                throw new global::System.ArgumentNullException("BANKNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(BANKNAME));
            }
            if ((BNKBRNCH == null)) {
                throw new global::System.ArgumentNullException("BNKBRNCH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = ((string)(BNKBRNCH));
            }
            if ((SALSTERR == null)) {
                throw new global::System.ArgumentNullException("SALSTERR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = ((string)(SALSTERR));
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((short)(DEFCACTY));
            this.Adapter.InsertCommand.Parameters[57].Value = ((int)(RMCSHACC));
            this.Adapter.InsertCommand.Parameters[58].Value = ((int)(RMARACC));
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(RMSLSACC));
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(RMIVACC));
            this.Adapter.InsertCommand.Parameters[61].Value = ((int)(RMCOSACC));
            this.Adapter.InsertCommand.Parameters[62].Value = ((int)(RMTAKACC));
            this.Adapter.InsertCommand.Parameters[63].Value = ((int)(RMAVACC));
            this.Adapter.InsertCommand.Parameters[64].Value = ((int)(RMFCGACC));
            this.Adapter.InsertCommand.Parameters[65].Value = ((int)(RMWRACC));
            this.Adapter.InsertCommand.Parameters[66].Value = ((int)(RMSORACC));
            this.Adapter.InsertCommand.Parameters[67].Value = ((System.DateTime)(FRSTINDT));
            this.Adapter.InsertCommand.Parameters[68].Value = ((byte)(INACTIVE));
            this.Adapter.InsertCommand.Parameters[69].Value = ((byte)(HOLD));
            if ((CRCARDID == null)) {
                throw new global::System.ArgumentNullException("CRCARDID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(CRCARDID));
            }
            if ((CRCRDNUM == null)) {
                throw new global::System.ArgumentNullException("CRCRDNUM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(CRCRDNUM));
            }
            this.Adapter.InsertCommand.Parameters[72].Value = ((System.DateTime)(CCRDXPDT));
            this.Adapter.InsertCommand.Parameters[73].Value = ((byte)(KPDSTHST));
            this.Adapter.InsertCommand.Parameters[74].Value = ((byte)(KPCALHST));
            this.Adapter.InsertCommand.Parameters[75].Value = ((byte)(KPERHIST));
            this.Adapter.InsertCommand.Parameters[76].Value = ((byte)(KPTRXHST));
            this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(NOTEINDX));
            this.Adapter.InsertCommand.Parameters[78].Value = ((System.DateTime)(CREATDDT));
            this.Adapter.InsertCommand.Parameters[79].Value = ((System.DateTime)(MODIFDT));
            this.Adapter.InsertCommand.Parameters[80].Value = ((byte)(Revalue_Customer));
            this.Adapter.InsertCommand.Parameters[81].Value = ((short)(Post_Results_To));
            if ((FINCHID == null)) {
                throw new global::System.ArgumentNullException("FINCHID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = ((string)(FINCHID));
            }
            if ((GOVCRPID == null)) {
                throw new global::System.ArgumentNullException("GOVCRPID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = ((string)(GOVCRPID));
            }
            if ((GOVINDID == null)) {
                throw new global::System.ArgumentNullException("GOVINDID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = ((string)(GOVINDID));
            }
            this.Adapter.InsertCommand.Parameters[85].Value = ((short)(DISGRPER));
            this.Adapter.InsertCommand.Parameters[86].Value = ((short)(DUEGRPER));
            if ((DOCFMTID == null)) {
                throw new global::System.ArgumentNullException("DOCFMTID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = ((string)(DOCFMTID));
            }
            this.Adapter.InsertCommand.Parameters[88].Value = ((byte)(Send_Email_Statements));
            this.Adapter.InsertCommand.Parameters[89].Value = ((short)(USERLANG));
            if ((GPSFOINTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("GPSFOINTEGRATIONID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = ((string)(GPSFOINTEGRATIONID));
            }
            this.Adapter.InsertCommand.Parameters[91].Value = ((short)(INTEGRATIONSOURCE));
            if ((INTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("INTEGRATIONID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = ((string)(INTEGRATIONID));
            }
            this.Adapter.InsertCommand.Parameters[93].Value = ((short)(ORDERFULFILLDEFAULT));
            this.Adapter.InsertCommand.Parameters[94].Value = ((short)(CUSTPRIORITY));
            if ((CCode == null)) {
                throw new global::System.ArgumentNullException("CCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = ((string)(CCode));
            }
            if ((DECLID == null)) {
                throw new global::System.ArgumentNullException("DECLID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = ((string)(DECLID));
            }
            this.Adapter.InsertCommand.Parameters[97].Value = ((int)(RMOvrpymtWrtoffAcctIdx));
            this.Adapter.InsertCommand.Parameters[98].Value = ((byte)(SHIPCOMPLETE));
            this.Adapter.InsertCommand.Parameters[99].Value = ((byte)(CBVAT));
            this.Adapter.InsertCommand.Parameters[100].Value = ((byte)(INCLUDEINDP));
            this.Adapter.InsertCommand.Parameters[101].Value = ((System.DateTime)(DEX_ROW_TS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CUSTNMBR, 
                    string CUSTNAME, 
                    string CUSTCLAS, 
                    string CPRCSTNM, 
                    string CNTCPRSN, 
                    string STMTNAME, 
                    string SHRTNAME, 
                    string ADRSCODE, 
                    string UPSZONE, 
                    string SHIPMTHD, 
                    string TAXSCHID, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string ADDRESS3, 
                    string COUNTRY, 
                    string CITY, 
                    string STATE, 
                    string ZIP, 
                    string PHONE1, 
                    string PHONE2, 
                    string PHONE3, 
                    string FAX, 
                    string PRBTADCD, 
                    string PRSTADCD, 
                    string STADDRCD, 
                    string SLPRSNID, 
                    string CHEKBKID, 
                    string PYMTRMID, 
                    short CRLMTTYP, 
                    decimal CRLMTAMT, 
                    short CRLMTPER, 
                    decimal CRLMTPAM, 
                    string CURNCYID, 
                    string RATETPID, 
                    short CUSTDISC, 
                    string PRCLEVEL, 
                    short MINPYTYP, 
                    decimal MINPYDLR, 
                    short MINPYPCT, 
                    short FNCHATYP, 
                    short FNCHPCNT, 
                    decimal FINCHDLR, 
                    short MXWOFTYP, 
                    decimal MXWROFAM, 
                    string COMMENT1, 
                    string COMMENT2, 
                    string USERDEF1, 
                    string USERDEF2, 
                    string TAXEXMT1, 
                    string TAXEXMT2, 
                    string TXRGNNUM, 
                    short BALNCTYP, 
                    short STMTCYCL, 
                    string BANKNAME, 
                    string BNKBRNCH, 
                    string SALSTERR, 
                    short DEFCACTY, 
                    int RMCSHACC, 
                    int RMARACC, 
                    int RMSLSACC, 
                    int RMIVACC, 
                    int RMCOSACC, 
                    int RMTAKACC, 
                    int RMAVACC, 
                    int RMFCGACC, 
                    int RMWRACC, 
                    int RMSORACC, 
                    System.DateTime FRSTINDT, 
                    byte INACTIVE, 
                    byte HOLD, 
                    string CRCARDID, 
                    string CRCRDNUM, 
                    System.DateTime CCRDXPDT, 
                    byte KPDSTHST, 
                    byte KPCALHST, 
                    byte KPERHIST, 
                    byte KPTRXHST, 
                    decimal NOTEINDX, 
                    System.DateTime CREATDDT, 
                    System.DateTime MODIFDT, 
                    byte Revalue_Customer, 
                    short Post_Results_To, 
                    string FINCHID, 
                    string GOVCRPID, 
                    string GOVINDID, 
                    short DISGRPER, 
                    short DUEGRPER, 
                    string DOCFMTID, 
                    byte Send_Email_Statements, 
                    short USERLANG, 
                    string GPSFOINTEGRATIONID, 
                    short INTEGRATIONSOURCE, 
                    string INTEGRATIONID, 
                    short ORDERFULFILLDEFAULT, 
                    short CUSTPRIORITY, 
                    string CCode, 
                    string DECLID, 
                    int RMOvrpymtWrtoffAcctIdx, 
                    byte SHIPCOMPLETE, 
                    byte CBVAT, 
                    byte INCLUDEINDP, 
                    System.DateTime DEX_ROW_TS, 
                    string Original_CUSTNMBR, 
                    string Original_CUSTNAME, 
                    string Original_CUSTCLAS, 
                    string Original_CPRCSTNM, 
                    string Original_CNTCPRSN, 
                    string Original_STMTNAME, 
                    string Original_SHRTNAME, 
                    string Original_ADRSCODE, 
                    string Original_UPSZONE, 
                    string Original_SHIPMTHD, 
                    string Original_TAXSCHID, 
                    string Original_ADDRESS1, 
                    string Original_ADDRESS2, 
                    string Original_ADDRESS3, 
                    string Original_COUNTRY, 
                    string Original_CITY, 
                    string Original_STATE, 
                    string Original_ZIP, 
                    string Original_PHONE1, 
                    string Original_PHONE2, 
                    string Original_PHONE3, 
                    string Original_FAX, 
                    string Original_PRBTADCD, 
                    string Original_PRSTADCD, 
                    string Original_STADDRCD, 
                    string Original_SLPRSNID, 
                    string Original_CHEKBKID, 
                    string Original_PYMTRMID, 
                    short Original_CRLMTTYP, 
                    decimal Original_CRLMTAMT, 
                    short Original_CRLMTPER, 
                    decimal Original_CRLMTPAM, 
                    string Original_CURNCYID, 
                    string Original_RATETPID, 
                    short Original_CUSTDISC, 
                    string Original_PRCLEVEL, 
                    short Original_MINPYTYP, 
                    decimal Original_MINPYDLR, 
                    short Original_MINPYPCT, 
                    short Original_FNCHATYP, 
                    short Original_FNCHPCNT, 
                    decimal Original_FINCHDLR, 
                    short Original_MXWOFTYP, 
                    decimal Original_MXWROFAM, 
                    string Original_COMMENT1, 
                    string Original_COMMENT2, 
                    string Original_USERDEF1, 
                    string Original_USERDEF2, 
                    string Original_TAXEXMT1, 
                    string Original_TAXEXMT2, 
                    string Original_TXRGNNUM, 
                    short Original_BALNCTYP, 
                    short Original_STMTCYCL, 
                    string Original_BANKNAME, 
                    string Original_BNKBRNCH, 
                    string Original_SALSTERR, 
                    short Original_DEFCACTY, 
                    int Original_RMCSHACC, 
                    int Original_RMARACC, 
                    int Original_RMSLSACC, 
                    int Original_RMIVACC, 
                    int Original_RMCOSACC, 
                    int Original_RMTAKACC, 
                    int Original_RMAVACC, 
                    int Original_RMFCGACC, 
                    int Original_RMWRACC, 
                    int Original_RMSORACC, 
                    System.DateTime Original_FRSTINDT, 
                    byte Original_INACTIVE, 
                    byte Original_HOLD, 
                    string Original_CRCARDID, 
                    string Original_CRCRDNUM, 
                    System.DateTime Original_CCRDXPDT, 
                    byte Original_KPDSTHST, 
                    byte Original_KPCALHST, 
                    byte Original_KPERHIST, 
                    byte Original_KPTRXHST, 
                    decimal Original_NOTEINDX, 
                    System.DateTime Original_CREATDDT, 
                    System.DateTime Original_MODIFDT, 
                    byte Original_Revalue_Customer, 
                    short Original_Post_Results_To, 
                    string Original_FINCHID, 
                    string Original_GOVCRPID, 
                    string Original_GOVINDID, 
                    short Original_DISGRPER, 
                    short Original_DUEGRPER, 
                    string Original_DOCFMTID, 
                    byte Original_Send_Email_Statements, 
                    short Original_USERLANG, 
                    string Original_GPSFOINTEGRATIONID, 
                    short Original_INTEGRATIONSOURCE, 
                    string Original_INTEGRATIONID, 
                    short Original_ORDERFULFILLDEFAULT, 
                    short Original_CUSTPRIORITY, 
                    string Original_CCode, 
                    string Original_DECLID, 
                    int Original_RMOvrpymtWrtoffAcctIdx, 
                    byte Original_SHIPCOMPLETE, 
                    byte Original_CBVAT, 
                    byte Original_INCLUDEINDP, 
                    System.DateTime Original_DEX_ROW_TS, 
                    int Original_DEX_ROW_ID) {
            if ((CUSTNMBR == null)) {
                throw new global::System.ArgumentNullException("CUSTNMBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CUSTNMBR));
            }
            if ((CUSTNAME == null)) {
                throw new global::System.ArgumentNullException("CUSTNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUSTNAME));
            }
            if ((CUSTCLAS == null)) {
                throw new global::System.ArgumentNullException("CUSTCLAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CUSTCLAS));
            }
            if ((CPRCSTNM == null)) {
                throw new global::System.ArgumentNullException("CPRCSTNM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(CPRCSTNM));
            }
            if ((CNTCPRSN == null)) {
                throw new global::System.ArgumentNullException("CNTCPRSN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CNTCPRSN));
            }
            if ((STMTNAME == null)) {
                throw new global::System.ArgumentNullException("STMTNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(STMTNAME));
            }
            if ((SHRTNAME == null)) {
                throw new global::System.ArgumentNullException("SHRTNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(SHRTNAME));
            }
            if ((ADRSCODE == null)) {
                throw new global::System.ArgumentNullException("ADRSCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ADRSCODE));
            }
            if ((UPSZONE == null)) {
                throw new global::System.ArgumentNullException("UPSZONE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(UPSZONE));
            }
            if ((SHIPMTHD == null)) {
                throw new global::System.ArgumentNullException("SHIPMTHD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SHIPMTHD));
            }
            if ((TAXSCHID == null)) {
                throw new global::System.ArgumentNullException("TAXSCHID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(TAXSCHID));
            }
            if ((ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(ADDRESS1));
            }
            if ((ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(ADDRESS2));
            }
            if ((ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("ADDRESS3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(ADDRESS3));
            }
            if ((COUNTRY == null)) {
                throw new global::System.ArgumentNullException("COUNTRY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(COUNTRY));
            }
            if ((CITY == null)) {
                throw new global::System.ArgumentNullException("CITY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CITY));
            }
            if ((STATE == null)) {
                throw new global::System.ArgumentNullException("STATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(STATE));
            }
            if ((ZIP == null)) {
                throw new global::System.ArgumentNullException("ZIP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ZIP));
            }
            if ((PHONE1 == null)) {
                throw new global::System.ArgumentNullException("PHONE1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(PHONE1));
            }
            if ((PHONE2 == null)) {
                throw new global::System.ArgumentNullException("PHONE2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(PHONE2));
            }
            if ((PHONE3 == null)) {
                throw new global::System.ArgumentNullException("PHONE3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(PHONE3));
            }
            if ((FAX == null)) {
                throw new global::System.ArgumentNullException("FAX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(FAX));
            }
            if ((PRBTADCD == null)) {
                throw new global::System.ArgumentNullException("PRBTADCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(PRBTADCD));
            }
            if ((PRSTADCD == null)) {
                throw new global::System.ArgumentNullException("PRSTADCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(PRSTADCD));
            }
            if ((STADDRCD == null)) {
                throw new global::System.ArgumentNullException("STADDRCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(STADDRCD));
            }
            if ((SLPRSNID == null)) {
                throw new global::System.ArgumentNullException("SLPRSNID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SLPRSNID));
            }
            if ((CHEKBKID == null)) {
                throw new global::System.ArgumentNullException("CHEKBKID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CHEKBKID));
            }
            if ((PYMTRMID == null)) {
                throw new global::System.ArgumentNullException("PYMTRMID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(PYMTRMID));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((short)(CRLMTTYP));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(CRLMTAMT));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((short)(CRLMTPER));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(CRLMTPAM));
            if ((CURNCYID == null)) {
                throw new global::System.ArgumentNullException("CURNCYID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(CURNCYID));
            }
            if ((RATETPID == null)) {
                throw new global::System.ArgumentNullException("RATETPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(RATETPID));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((short)(CUSTDISC));
            if ((PRCLEVEL == null)) {
                throw new global::System.ArgumentNullException("PRCLEVEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(PRCLEVEL));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((short)(MINPYTYP));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(MINPYDLR));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((short)(MINPYPCT));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((short)(FNCHATYP));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((short)(FNCHPCNT));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(FINCHDLR));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((short)(MXWOFTYP));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(MXWROFAM));
            if ((COMMENT1 == null)) {
                throw new global::System.ArgumentNullException("COMMENT1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(COMMENT1));
            }
            if ((COMMENT2 == null)) {
                throw new global::System.ArgumentNullException("COMMENT2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(COMMENT2));
            }
            if ((USERDEF1 == null)) {
                throw new global::System.ArgumentNullException("USERDEF1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(USERDEF1));
            }
            if ((USERDEF2 == null)) {
                throw new global::System.ArgumentNullException("USERDEF2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(USERDEF2));
            }
            if ((TAXEXMT1 == null)) {
                throw new global::System.ArgumentNullException("TAXEXMT1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(TAXEXMT1));
            }
            if ((TAXEXMT2 == null)) {
                throw new global::System.ArgumentNullException("TAXEXMT2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(TAXEXMT2));
            }
            if ((TXRGNNUM == null)) {
                throw new global::System.ArgumentNullException("TXRGNNUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(TXRGNNUM));
            }
            this.Adapter.UpdateCommand.Parameters[51].Value = ((short)(BALNCTYP));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((short)(STMTCYCL));
            if ((BANKNAME == null)) {
                throw new global::System.ArgumentNullException("BANKNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(BANKNAME));
            }
            if ((BNKBRNCH == null)) {
                throw new global::System.ArgumentNullException("BNKBRNCH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((string)(BNKBRNCH));
            }
            if ((SALSTERR == null)) {
                throw new global::System.ArgumentNullException("SALSTERR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(SALSTERR));
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((short)(DEFCACTY));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((int)(RMCSHACC));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(RMARACC));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(RMSLSACC));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(RMIVACC));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(RMCOSACC));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((int)(RMTAKACC));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((int)(RMAVACC));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(RMFCGACC));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((int)(RMWRACC));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((int)(RMSORACC));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((System.DateTime)(FRSTINDT));
            this.Adapter.UpdateCommand.Parameters[68].Value = ((byte)(INACTIVE));
            this.Adapter.UpdateCommand.Parameters[69].Value = ((byte)(HOLD));
            if ((CRCARDID == null)) {
                throw new global::System.ArgumentNullException("CRCARDID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(CRCARDID));
            }
            if ((CRCRDNUM == null)) {
                throw new global::System.ArgumentNullException("CRCRDNUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(CRCRDNUM));
            }
            this.Adapter.UpdateCommand.Parameters[72].Value = ((System.DateTime)(CCRDXPDT));
            this.Adapter.UpdateCommand.Parameters[73].Value = ((byte)(KPDSTHST));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((byte)(KPCALHST));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((byte)(KPERHIST));
            this.Adapter.UpdateCommand.Parameters[76].Value = ((byte)(KPTRXHST));
            this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(NOTEINDX));
            this.Adapter.UpdateCommand.Parameters[78].Value = ((System.DateTime)(CREATDDT));
            this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(MODIFDT));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((byte)(Revalue_Customer));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((short)(Post_Results_To));
            if ((FINCHID == null)) {
                throw new global::System.ArgumentNullException("FINCHID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(FINCHID));
            }
            if ((GOVCRPID == null)) {
                throw new global::System.ArgumentNullException("GOVCRPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((string)(GOVCRPID));
            }
            if ((GOVINDID == null)) {
                throw new global::System.ArgumentNullException("GOVINDID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(GOVINDID));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((short)(DISGRPER));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((short)(DUEGRPER));
            if ((DOCFMTID == null)) {
                throw new global::System.ArgumentNullException("DOCFMTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((string)(DOCFMTID));
            }
            this.Adapter.UpdateCommand.Parameters[88].Value = ((byte)(Send_Email_Statements));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((short)(USERLANG));
            if ((GPSFOINTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("GPSFOINTEGRATIONID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(GPSFOINTEGRATIONID));
            }
            this.Adapter.UpdateCommand.Parameters[91].Value = ((short)(INTEGRATIONSOURCE));
            if ((INTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("INTEGRATIONID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(INTEGRATIONID));
            }
            this.Adapter.UpdateCommand.Parameters[93].Value = ((short)(ORDERFULFILLDEFAULT));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((short)(CUSTPRIORITY));
            if ((CCode == null)) {
                throw new global::System.ArgumentNullException("CCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(CCode));
            }
            if ((DECLID == null)) {
                throw new global::System.ArgumentNullException("DECLID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(DECLID));
            }
            this.Adapter.UpdateCommand.Parameters[97].Value = ((int)(RMOvrpymtWrtoffAcctIdx));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((byte)(SHIPCOMPLETE));
            this.Adapter.UpdateCommand.Parameters[99].Value = ((byte)(CBVAT));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((byte)(INCLUDEINDP));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((System.DateTime)(DEX_ROW_TS));
            if ((Original_CUSTNMBR == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTNMBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_CUSTNMBR));
            }
            if ((Original_CUSTNAME == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_CUSTNAME));
            }
            if ((Original_CUSTCLAS == null)) {
                throw new global::System.ArgumentNullException("Original_CUSTCLAS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_CUSTCLAS));
            }
            if ((Original_CPRCSTNM == null)) {
                throw new global::System.ArgumentNullException("Original_CPRCSTNM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_CPRCSTNM));
            }
            if ((Original_CNTCPRSN == null)) {
                throw new global::System.ArgumentNullException("Original_CNTCPRSN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_CNTCPRSN));
            }
            if ((Original_STMTNAME == null)) {
                throw new global::System.ArgumentNullException("Original_STMTNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_STMTNAME));
            }
            if ((Original_SHRTNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SHRTNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_SHRTNAME));
            }
            if ((Original_ADRSCODE == null)) {
                throw new global::System.ArgumentNullException("Original_ADRSCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((string)(Original_ADRSCODE));
            }
            if ((Original_UPSZONE == null)) {
                throw new global::System.ArgumentNullException("Original_UPSZONE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_UPSZONE));
            }
            if ((Original_SHIPMTHD == null)) {
                throw new global::System.ArgumentNullException("Original_SHIPMTHD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((string)(Original_SHIPMTHD));
            }
            if ((Original_TAXSCHID == null)) {
                throw new global::System.ArgumentNullException("Original_TAXSCHID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_TAXSCHID));
            }
            if ((Original_ADDRESS1 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[113].Value = ((string)(Original_ADDRESS1));
            }
            if ((Original_ADDRESS2 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_ADDRESS2));
            }
            if ((Original_ADDRESS3 == null)) {
                throw new global::System.ArgumentNullException("Original_ADDRESS3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_ADDRESS3));
            }
            if ((Original_COUNTRY == null)) {
                throw new global::System.ArgumentNullException("Original_COUNTRY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_COUNTRY));
            }
            if ((Original_CITY == null)) {
                throw new global::System.ArgumentNullException("Original_CITY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[117].Value = ((string)(Original_CITY));
            }
            if ((Original_STATE == null)) {
                throw new global::System.ArgumentNullException("Original_STATE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[118].Value = ((string)(Original_STATE));
            }
            if ((Original_ZIP == null)) {
                throw new global::System.ArgumentNullException("Original_ZIP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[119].Value = ((string)(Original_ZIP));
            }
            if ((Original_PHONE1 == null)) {
                throw new global::System.ArgumentNullException("Original_PHONE1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[120].Value = ((string)(Original_PHONE1));
            }
            if ((Original_PHONE2 == null)) {
                throw new global::System.ArgumentNullException("Original_PHONE2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_PHONE2));
            }
            if ((Original_PHONE3 == null)) {
                throw new global::System.ArgumentNullException("Original_PHONE3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_PHONE3));
            }
            if ((Original_FAX == null)) {
                throw new global::System.ArgumentNullException("Original_FAX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_FAX));
            }
            if ((Original_PRBTADCD == null)) {
                throw new global::System.ArgumentNullException("Original_PRBTADCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_PRBTADCD));
            }
            if ((Original_PRSTADCD == null)) {
                throw new global::System.ArgumentNullException("Original_PRSTADCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_PRSTADCD));
            }
            if ((Original_STADDRCD == null)) {
                throw new global::System.ArgumentNullException("Original_STADDRCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[126].Value = ((string)(Original_STADDRCD));
            }
            if ((Original_SLPRSNID == null)) {
                throw new global::System.ArgumentNullException("Original_SLPRSNID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[127].Value = ((string)(Original_SLPRSNID));
            }
            if ((Original_CHEKBKID == null)) {
                throw new global::System.ArgumentNullException("Original_CHEKBKID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[128].Value = ((string)(Original_CHEKBKID));
            }
            if ((Original_PYMTRMID == null)) {
                throw new global::System.ArgumentNullException("Original_PYMTRMID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((string)(Original_PYMTRMID));
            }
            this.Adapter.UpdateCommand.Parameters[130].Value = ((short)(Original_CRLMTTYP));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((decimal)(Original_CRLMTAMT));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((short)(Original_CRLMTPER));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((decimal)(Original_CRLMTPAM));
            if ((Original_CURNCYID == null)) {
                throw new global::System.ArgumentNullException("Original_CURNCYID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[134].Value = ((string)(Original_CURNCYID));
            }
            if ((Original_RATETPID == null)) {
                throw new global::System.ArgumentNullException("Original_RATETPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_RATETPID));
            }
            this.Adapter.UpdateCommand.Parameters[136].Value = ((short)(Original_CUSTDISC));
            if ((Original_PRCLEVEL == null)) {
                throw new global::System.ArgumentNullException("Original_PRCLEVEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((string)(Original_PRCLEVEL));
            }
            this.Adapter.UpdateCommand.Parameters[138].Value = ((short)(Original_MINPYTYP));
            this.Adapter.UpdateCommand.Parameters[139].Value = ((decimal)(Original_MINPYDLR));
            this.Adapter.UpdateCommand.Parameters[140].Value = ((short)(Original_MINPYPCT));
            this.Adapter.UpdateCommand.Parameters[141].Value = ((short)(Original_FNCHATYP));
            this.Adapter.UpdateCommand.Parameters[142].Value = ((short)(Original_FNCHPCNT));
            this.Adapter.UpdateCommand.Parameters[143].Value = ((decimal)(Original_FINCHDLR));
            this.Adapter.UpdateCommand.Parameters[144].Value = ((short)(Original_MXWOFTYP));
            this.Adapter.UpdateCommand.Parameters[145].Value = ((decimal)(Original_MXWROFAM));
            if ((Original_COMMENT1 == null)) {
                throw new global::System.ArgumentNullException("Original_COMMENT1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_COMMENT1));
            }
            if ((Original_COMMENT2 == null)) {
                throw new global::System.ArgumentNullException("Original_COMMENT2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_COMMENT2));
            }
            if ((Original_USERDEF1 == null)) {
                throw new global::System.ArgumentNullException("Original_USERDEF1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_USERDEF1));
            }
            if ((Original_USERDEF2 == null)) {
                throw new global::System.ArgumentNullException("Original_USERDEF2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_USERDEF2));
            }
            if ((Original_TAXEXMT1 == null)) {
                throw new global::System.ArgumentNullException("Original_TAXEXMT1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_TAXEXMT1));
            }
            if ((Original_TAXEXMT2 == null)) {
                throw new global::System.ArgumentNullException("Original_TAXEXMT2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_TAXEXMT2));
            }
            if ((Original_TXRGNNUM == null)) {
                throw new global::System.ArgumentNullException("Original_TXRGNNUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_TXRGNNUM));
            }
            this.Adapter.UpdateCommand.Parameters[153].Value = ((short)(Original_BALNCTYP));
            this.Adapter.UpdateCommand.Parameters[154].Value = ((short)(Original_STMTCYCL));
            if ((Original_BANKNAME == null)) {
                throw new global::System.ArgumentNullException("Original_BANKNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((string)(Original_BANKNAME));
            }
            if ((Original_BNKBRNCH == null)) {
                throw new global::System.ArgumentNullException("Original_BNKBRNCH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_BNKBRNCH));
            }
            if ((Original_SALSTERR == null)) {
                throw new global::System.ArgumentNullException("Original_SALSTERR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((string)(Original_SALSTERR));
            }
            this.Adapter.UpdateCommand.Parameters[158].Value = ((short)(Original_DEFCACTY));
            this.Adapter.UpdateCommand.Parameters[159].Value = ((int)(Original_RMCSHACC));
            this.Adapter.UpdateCommand.Parameters[160].Value = ((int)(Original_RMARACC));
            this.Adapter.UpdateCommand.Parameters[161].Value = ((int)(Original_RMSLSACC));
            this.Adapter.UpdateCommand.Parameters[162].Value = ((int)(Original_RMIVACC));
            this.Adapter.UpdateCommand.Parameters[163].Value = ((int)(Original_RMCOSACC));
            this.Adapter.UpdateCommand.Parameters[164].Value = ((int)(Original_RMTAKACC));
            this.Adapter.UpdateCommand.Parameters[165].Value = ((int)(Original_RMAVACC));
            this.Adapter.UpdateCommand.Parameters[166].Value = ((int)(Original_RMFCGACC));
            this.Adapter.UpdateCommand.Parameters[167].Value = ((int)(Original_RMWRACC));
            this.Adapter.UpdateCommand.Parameters[168].Value = ((int)(Original_RMSORACC));
            this.Adapter.UpdateCommand.Parameters[169].Value = ((System.DateTime)(Original_FRSTINDT));
            this.Adapter.UpdateCommand.Parameters[170].Value = ((byte)(Original_INACTIVE));
            this.Adapter.UpdateCommand.Parameters[171].Value = ((byte)(Original_HOLD));
            if ((Original_CRCARDID == null)) {
                throw new global::System.ArgumentNullException("Original_CRCARDID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[172].Value = ((string)(Original_CRCARDID));
            }
            if ((Original_CRCRDNUM == null)) {
                throw new global::System.ArgumentNullException("Original_CRCRDNUM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[173].Value = ((string)(Original_CRCRDNUM));
            }
            this.Adapter.UpdateCommand.Parameters[174].Value = ((System.DateTime)(Original_CCRDXPDT));
            this.Adapter.UpdateCommand.Parameters[175].Value = ((byte)(Original_KPDSTHST));
            this.Adapter.UpdateCommand.Parameters[176].Value = ((byte)(Original_KPCALHST));
            this.Adapter.UpdateCommand.Parameters[177].Value = ((byte)(Original_KPERHIST));
            this.Adapter.UpdateCommand.Parameters[178].Value = ((byte)(Original_KPTRXHST));
            this.Adapter.UpdateCommand.Parameters[179].Value = ((decimal)(Original_NOTEINDX));
            this.Adapter.UpdateCommand.Parameters[180].Value = ((System.DateTime)(Original_CREATDDT));
            this.Adapter.UpdateCommand.Parameters[181].Value = ((System.DateTime)(Original_MODIFDT));
            this.Adapter.UpdateCommand.Parameters[182].Value = ((byte)(Original_Revalue_Customer));
            this.Adapter.UpdateCommand.Parameters[183].Value = ((short)(Original_Post_Results_To));
            if ((Original_FINCHID == null)) {
                throw new global::System.ArgumentNullException("Original_FINCHID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[184].Value = ((string)(Original_FINCHID));
            }
            if ((Original_GOVCRPID == null)) {
                throw new global::System.ArgumentNullException("Original_GOVCRPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[185].Value = ((string)(Original_GOVCRPID));
            }
            if ((Original_GOVINDID == null)) {
                throw new global::System.ArgumentNullException("Original_GOVINDID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[186].Value = ((string)(Original_GOVINDID));
            }
            this.Adapter.UpdateCommand.Parameters[187].Value = ((short)(Original_DISGRPER));
            this.Adapter.UpdateCommand.Parameters[188].Value = ((short)(Original_DUEGRPER));
            if ((Original_DOCFMTID == null)) {
                throw new global::System.ArgumentNullException("Original_DOCFMTID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[189].Value = ((string)(Original_DOCFMTID));
            }
            this.Adapter.UpdateCommand.Parameters[190].Value = ((byte)(Original_Send_Email_Statements));
            this.Adapter.UpdateCommand.Parameters[191].Value = ((short)(Original_USERLANG));
            if ((Original_GPSFOINTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("Original_GPSFOINTEGRATIONID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[192].Value = ((string)(Original_GPSFOINTEGRATIONID));
            }
            this.Adapter.UpdateCommand.Parameters[193].Value = ((short)(Original_INTEGRATIONSOURCE));
            if ((Original_INTEGRATIONID == null)) {
                throw new global::System.ArgumentNullException("Original_INTEGRATIONID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[194].Value = ((string)(Original_INTEGRATIONID));
            }
            this.Adapter.UpdateCommand.Parameters[195].Value = ((short)(Original_ORDERFULFILLDEFAULT));
            this.Adapter.UpdateCommand.Parameters[196].Value = ((short)(Original_CUSTPRIORITY));
            if ((Original_CCode == null)) {
                throw new global::System.ArgumentNullException("Original_CCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[197].Value = ((string)(Original_CCode));
            }
            if ((Original_DECLID == null)) {
                throw new global::System.ArgumentNullException("Original_DECLID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[198].Value = ((string)(Original_DECLID));
            }
            this.Adapter.UpdateCommand.Parameters[199].Value = ((int)(Original_RMOvrpymtWrtoffAcctIdx));
            this.Adapter.UpdateCommand.Parameters[200].Value = ((byte)(Original_SHIPCOMPLETE));
            this.Adapter.UpdateCommand.Parameters[201].Value = ((byte)(Original_CBVAT));
            this.Adapter.UpdateCommand.Parameters[202].Value = ((byte)(Original_INCLUDEINDP));
            this.Adapter.UpdateCommand.Parameters[203].Value = ((System.DateTime)(Original_DEX_ROW_TS));
            this.Adapter.UpdateCommand.Parameters[204].Value = ((int)(Original_DEX_ROW_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CUSTNAME, 
                    string CUSTCLAS, 
                    string CPRCSTNM, 
                    string CNTCPRSN, 
                    string STMTNAME, 
                    string SHRTNAME, 
                    string ADRSCODE, 
                    string UPSZONE, 
                    string SHIPMTHD, 
                    string TAXSCHID, 
                    string ADDRESS1, 
                    string ADDRESS2, 
                    string ADDRESS3, 
                    string COUNTRY, 
                    string CITY, 
                    string STATE, 
                    string ZIP, 
                    string PHONE1, 
                    string PHONE2, 
                    string PHONE3, 
                    string FAX, 
                    string PRBTADCD, 
                    string PRSTADCD, 
                    string STADDRCD, 
                    string SLPRSNID, 
                    string CHEKBKID, 
                    string PYMTRMID, 
                    short CRLMTTYP, 
                    decimal CRLMTAMT, 
                    short CRLMTPER, 
                    decimal CRLMTPAM, 
                    string CURNCYID, 
                    string RATETPID, 
                    short CUSTDISC, 
                    string PRCLEVEL, 
                    short MINPYTYP, 
                    decimal MINPYDLR, 
                    short MINPYPCT, 
                    short FNCHATYP, 
                    short FNCHPCNT, 
                    decimal FINCHDLR, 
                    short MXWOFTYP, 
                    decimal MXWROFAM, 
                    string COMMENT1, 
                    string COMMENT2, 
                    string USERDEF1, 
                    string USERDEF2, 
                    string TAXEXMT1, 
                    string TAXEXMT2, 
                    string TXRGNNUM, 
                    short BALNCTYP, 
                    short STMTCYCL, 
                    string BANKNAME, 
                    string BNKBRNCH, 
                    string SALSTERR, 
                    short DEFCACTY, 
                    int RMCSHACC, 
                    int RMARACC, 
                    int RMSLSACC, 
                    int RMIVACC, 
                    int RMCOSACC, 
                    int RMTAKACC, 
                    int RMAVACC, 
                    int RMFCGACC, 
                    int RMWRACC, 
                    int RMSORACC, 
                    System.DateTime FRSTINDT, 
                    byte INACTIVE, 
                    byte HOLD, 
                    string CRCARDID, 
                    string CRCRDNUM, 
                    System.DateTime CCRDXPDT, 
                    byte KPDSTHST, 
                    byte KPCALHST, 
                    byte KPERHIST, 
                    byte KPTRXHST, 
                    decimal NOTEINDX, 
                    System.DateTime CREATDDT, 
                    System.DateTime MODIFDT, 
                    byte Revalue_Customer, 
                    short Post_Results_To, 
                    string FINCHID, 
                    string GOVCRPID, 
                    string GOVINDID, 
                    short DISGRPER, 
                    short DUEGRPER, 
                    string DOCFMTID, 
                    byte Send_Email_Statements, 
                    short USERLANG, 
                    string GPSFOINTEGRATIONID, 
                    short INTEGRATIONSOURCE, 
                    string INTEGRATIONID, 
                    short ORDERFULFILLDEFAULT, 
                    short CUSTPRIORITY, 
                    string CCode, 
                    string DECLID, 
                    int RMOvrpymtWrtoffAcctIdx, 
                    byte SHIPCOMPLETE, 
                    byte CBVAT, 
                    byte INCLUDEINDP, 
                    System.DateTime DEX_ROW_TS, 
                    string Original_CUSTNMBR, 
                    string Original_CUSTNAME, 
                    string Original_CUSTCLAS, 
                    string Original_CPRCSTNM, 
                    string Original_CNTCPRSN, 
                    string Original_STMTNAME, 
                    string Original_SHRTNAME, 
                    string Original_ADRSCODE, 
                    string Original_UPSZONE, 
                    string Original_SHIPMTHD, 
                    string Original_TAXSCHID, 
                    string Original_ADDRESS1, 
                    string Original_ADDRESS2, 
                    string Original_ADDRESS3, 
                    string Original_COUNTRY, 
                    string Original_CITY, 
                    string Original_STATE, 
                    string Original_ZIP, 
                    string Original_PHONE1, 
                    string Original_PHONE2, 
                    string Original_PHONE3, 
                    string Original_FAX, 
                    string Original_PRBTADCD, 
                    string Original_PRSTADCD, 
                    string Original_STADDRCD, 
                    string Original_SLPRSNID, 
                    string Original_CHEKBKID, 
                    string Original_PYMTRMID, 
                    short Original_CRLMTTYP, 
                    decimal Original_CRLMTAMT, 
                    short Original_CRLMTPER, 
                    decimal Original_CRLMTPAM, 
                    string Original_CURNCYID, 
                    string Original_RATETPID, 
                    short Original_CUSTDISC, 
                    string Original_PRCLEVEL, 
                    short Original_MINPYTYP, 
                    decimal Original_MINPYDLR, 
                    short Original_MINPYPCT, 
                    short Original_FNCHATYP, 
                    short Original_FNCHPCNT, 
                    decimal Original_FINCHDLR, 
                    short Original_MXWOFTYP, 
                    decimal Original_MXWROFAM, 
                    string Original_COMMENT1, 
                    string Original_COMMENT2, 
                    string Original_USERDEF1, 
                    string Original_USERDEF2, 
                    string Original_TAXEXMT1, 
                    string Original_TAXEXMT2, 
                    string Original_TXRGNNUM, 
                    short Original_BALNCTYP, 
                    short Original_STMTCYCL, 
                    string Original_BANKNAME, 
                    string Original_BNKBRNCH, 
                    string Original_SALSTERR, 
                    short Original_DEFCACTY, 
                    int Original_RMCSHACC, 
                    int Original_RMARACC, 
                    int Original_RMSLSACC, 
                    int Original_RMIVACC, 
                    int Original_RMCOSACC, 
                    int Original_RMTAKACC, 
                    int Original_RMAVACC, 
                    int Original_RMFCGACC, 
                    int Original_RMWRACC, 
                    int Original_RMSORACC, 
                    System.DateTime Original_FRSTINDT, 
                    byte Original_INACTIVE, 
                    byte Original_HOLD, 
                    string Original_CRCARDID, 
                    string Original_CRCRDNUM, 
                    System.DateTime Original_CCRDXPDT, 
                    byte Original_KPDSTHST, 
                    byte Original_KPCALHST, 
                    byte Original_KPERHIST, 
                    byte Original_KPTRXHST, 
                    decimal Original_NOTEINDX, 
                    System.DateTime Original_CREATDDT, 
                    System.DateTime Original_MODIFDT, 
                    byte Original_Revalue_Customer, 
                    short Original_Post_Results_To, 
                    string Original_FINCHID, 
                    string Original_GOVCRPID, 
                    string Original_GOVINDID, 
                    short Original_DISGRPER, 
                    short Original_DUEGRPER, 
                    string Original_DOCFMTID, 
                    byte Original_Send_Email_Statements, 
                    short Original_USERLANG, 
                    string Original_GPSFOINTEGRATIONID, 
                    short Original_INTEGRATIONSOURCE, 
                    string Original_INTEGRATIONID, 
                    short Original_ORDERFULFILLDEFAULT, 
                    short Original_CUSTPRIORITY, 
                    string Original_CCode, 
                    string Original_DECLID, 
                    int Original_RMOvrpymtWrtoffAcctIdx, 
                    byte Original_SHIPCOMPLETE, 
                    byte Original_CBVAT, 
                    byte Original_INCLUDEINDP, 
                    System.DateTime Original_DEX_ROW_TS, 
                    int Original_DEX_ROW_ID) {
            return this.Update(Original_CUSTNMBR, CUSTNAME, CUSTCLAS, CPRCSTNM, CNTCPRSN, STMTNAME, SHRTNAME, ADRSCODE, UPSZONE, SHIPMTHD, TAXSCHID, ADDRESS1, ADDRESS2, ADDRESS3, COUNTRY, CITY, STATE, ZIP, PHONE1, PHONE2, PHONE3, FAX, PRBTADCD, PRSTADCD, STADDRCD, SLPRSNID, CHEKBKID, PYMTRMID, CRLMTTYP, CRLMTAMT, CRLMTPER, CRLMTPAM, CURNCYID, RATETPID, CUSTDISC, PRCLEVEL, MINPYTYP, MINPYDLR, MINPYPCT, FNCHATYP, FNCHPCNT, FINCHDLR, MXWOFTYP, MXWROFAM, COMMENT1, COMMENT2, USERDEF1, USERDEF2, TAXEXMT1, TAXEXMT2, TXRGNNUM, BALNCTYP, STMTCYCL, BANKNAME, BNKBRNCH, SALSTERR, DEFCACTY, RMCSHACC, RMARACC, RMSLSACC, RMIVACC, RMCOSACC, RMTAKACC, RMAVACC, RMFCGACC, RMWRACC, RMSORACC, FRSTINDT, INACTIVE, HOLD, CRCARDID, CRCRDNUM, CCRDXPDT, KPDSTHST, KPCALHST, KPERHIST, KPTRXHST, NOTEINDX, CREATDDT, MODIFDT, Revalue_Customer, Post_Results_To, FINCHID, GOVCRPID, GOVINDID, DISGRPER, DUEGRPER, DOCFMTID, Send_Email_Statements, USERLANG, GPSFOINTEGRATIONID, INTEGRATIONSOURCE, INTEGRATIONID, ORDERFULFILLDEFAULT, CUSTPRIORITY, CCode, DECLID, RMOvrpymtWrtoffAcctIdx, SHIPCOMPLETE, CBVAT, INCLUDEINDP, DEX_ROW_TS, Original_CUSTNMBR, Original_CUSTNAME, Original_CUSTCLAS, Original_CPRCSTNM, Original_CNTCPRSN, Original_STMTNAME, Original_SHRTNAME, Original_ADRSCODE, Original_UPSZONE, Original_SHIPMTHD, Original_TAXSCHID, Original_ADDRESS1, Original_ADDRESS2, Original_ADDRESS3, Original_COUNTRY, Original_CITY, Original_STATE, Original_ZIP, Original_PHONE1, Original_PHONE2, Original_PHONE3, Original_FAX, Original_PRBTADCD, Original_PRSTADCD, Original_STADDRCD, Original_SLPRSNID, Original_CHEKBKID, Original_PYMTRMID, Original_CRLMTTYP, Original_CRLMTAMT, Original_CRLMTPER, Original_CRLMTPAM, Original_CURNCYID, Original_RATETPID, Original_CUSTDISC, Original_PRCLEVEL, Original_MINPYTYP, Original_MINPYDLR, Original_MINPYPCT, Original_FNCHATYP, Original_FNCHPCNT, Original_FINCHDLR, Original_MXWOFTYP, Original_MXWROFAM, Original_COMMENT1, Original_COMMENT2, Original_USERDEF1, Original_USERDEF2, Original_TAXEXMT1, Original_TAXEXMT2, Original_TXRGNNUM, Original_BALNCTYP, Original_STMTCYCL, Original_BANKNAME, Original_BNKBRNCH, Original_SALSTERR, Original_DEFCACTY, Original_RMCSHACC, Original_RMARACC, Original_RMSLSACC, Original_RMIVACC, Original_RMCOSACC, Original_RMTAKACC, Original_RMAVACC, Original_RMFCGACC, Original_RMWRACC, Original_RMSORACC, Original_FRSTINDT, Original_INACTIVE, Original_HOLD, Original_CRCARDID, Original_CRCRDNUM, Original_CCRDXPDT, Original_KPDSTHST, Original_KPCALHST, Original_KPERHIST, Original_KPTRXHST, Original_NOTEINDX, Original_CREATDDT, Original_MODIFDT, Original_Revalue_Customer, Original_Post_Results_To, Original_FINCHID, Original_GOVCRPID, Original_GOVINDID, Original_DISGRPER, Original_DUEGRPER, Original_DOCFMTID, Original_Send_Email_Statements, Original_USERLANG, Original_GPSFOINTEGRATIONID, Original_INTEGRATIONSOURCE, Original_INTEGRATIONID, Original_ORDERFULFILLDEFAULT, Original_CUSTPRIORITY, Original_CCode, Original_DECLID, Original_RMOvrpymtWrtoffAcctIdx, Original_SHIPCOMPLETE, Original_CBVAT, Original_INCLUDEINDP, Original_DEX_ROW_TS, Original_DEX_ROW_ID);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EXT00101TableAdapter _eXT00101TableAdapter;
        
        private EXT00102TableAdapter _eXT00102TableAdapter;
        
        private EXT00103TableAdapter _eXT00103TableAdapter;
        
        private RM00101TableAdapter _rM00101TableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EXT00101TableAdapter EXT00101TableAdapter {
            get {
                return this._eXT00101TableAdapter;
            }
            set {
                this._eXT00101TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EXT00102TableAdapter EXT00102TableAdapter {
            get {
                return this._eXT00102TableAdapter;
            }
            set {
                this._eXT00102TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public EXT00103TableAdapter EXT00103TableAdapter {
            get {
                return this._eXT00103TableAdapter;
            }
            set {
                this._eXT00103TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public RM00101TableAdapter RM00101TableAdapter {
            get {
                return this._rM00101TableAdapter;
            }
            set {
                this._rM00101TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._eXT00101TableAdapter != null) 
                            && (this._eXT00101TableAdapter.Connection != null))) {
                    return this._eXT00101TableAdapter.Connection;
                }
                if (((this._eXT00102TableAdapter != null) 
                            && (this._eXT00102TableAdapter.Connection != null))) {
                    return this._eXT00102TableAdapter.Connection;
                }
                if (((this._eXT00103TableAdapter != null) 
                            && (this._eXT00103TableAdapter.Connection != null))) {
                    return this._eXT00103TableAdapter.Connection;
                }
                if (((this._rM00101TableAdapter != null) 
                            && (this._rM00101TableAdapter.Connection != null))) {
                    return this._rM00101TableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._eXT00101TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eXT00102TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eXT00103TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rM00101TableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(SISCDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eXT00103TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXT00103.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXT00103TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rM00101TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RM00101.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rM00101TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eXT00101TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXT00101.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXT00101TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eXT00102TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXT00102.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXT00102TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(SISCDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._eXT00103TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXT00103.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXT00103TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rM00101TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RM00101.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rM00101TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eXT00101TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXT00101.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXT00101TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eXT00102TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXT00102.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXT00102TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(SISCDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._eXT00102TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXT00102.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXT00102TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eXT00101TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXT00101.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXT00101TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rM00101TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RM00101.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rM00101TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eXT00103TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXT00103.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXT00103TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(SISCDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._eXT00101TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXT00101TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eXT00102TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXT00102TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._eXT00103TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXT00103TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._rM00101TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rM00101TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._eXT00101TableAdapter != null)) {
                    revertConnections.Add(this._eXT00101TableAdapter, this._eXT00101TableAdapter.Connection);
                    this._eXT00101TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eXT00101TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eXT00101TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXT00101TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXT00101TableAdapter.Adapter);
                    }
                }
                if ((this._eXT00102TableAdapter != null)) {
                    revertConnections.Add(this._eXT00102TableAdapter, this._eXT00102TableAdapter.Connection);
                    this._eXT00102TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eXT00102TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eXT00102TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXT00102TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXT00102TableAdapter.Adapter);
                    }
                }
                if ((this._eXT00103TableAdapter != null)) {
                    revertConnections.Add(this._eXT00103TableAdapter, this._eXT00103TableAdapter.Connection);
                    this._eXT00103TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eXT00103TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eXT00103TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXT00103TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXT00103TableAdapter.Adapter);
                    }
                }
                if ((this._rM00101TableAdapter != null)) {
                    revertConnections.Add(this._rM00101TableAdapter, this._rM00101TableAdapter.Connection);
                    this._rM00101TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rM00101TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rM00101TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rM00101TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rM00101TableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._eXT00101TableAdapter != null)) {
                    this._eXT00101TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eXT00101TableAdapter]));
                    this._eXT00101TableAdapter.Transaction = null;
                }
                if ((this._eXT00102TableAdapter != null)) {
                    this._eXT00102TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eXT00102TableAdapter]));
                    this._eXT00102TableAdapter.Transaction = null;
                }
                if ((this._eXT00103TableAdapter != null)) {
                    this._eXT00103TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eXT00103TableAdapter]));
                    this._eXT00103TableAdapter.Transaction = null;
                }
                if ((this._rM00101TableAdapter != null)) {
                    this._rM00101TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rM00101TableAdapter]));
                    this._rM00101TableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591